ARM GAS  /tmp/ccVvgfEi.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"stm32l0xx_hal_rtc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RTC_MspInit,"ax",%progbits
  18              		.align	2
  19              		.weak	HAL_RTC_MspInit
  20              		.code	16
  21              		.thumb_func
  23              	HAL_RTC_MspInit:
  24              	.LFB38:
  25              		.file 1 "Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c"
   1:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @file    stm32l0xx_hal_rtc.c
   4:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief   RTC HAL module driver.
   6:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          functionalities of the Real Time Clock (RTC) peripheral:
   8:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *           + Initialization/de-initialization functions
   9:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *           + I/O operation functions
  10:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *           + Peripheral Control functions
  11:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *           + Peripheral State functions
  12:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *         
  13:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   @verbatim
  14:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   ==============================================================================
  15:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ##### Backup Domain Operating Condition #####
  16:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   ==============================================================================
  17:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..] As long as the supply voltage remains in the operating range, 
  18:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        the RTC never stops, regardless of the device status (Run mode, 
  19:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        low power modes or under reset).
  20:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
  21:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                    ##### Backup Domain Reset #####
  22:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   ==================================================================
  23:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..] The backup domain reset sets all RTC registers and the RCC_CSR register 
  24:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        to their reset values.
  25:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..] A backup domain reset is generated when one of the following events occurs:
  26:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) Software reset, triggered by setting the RTCRST bit in the 
  27:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         RCC Control Status register (RCC_CSR).
  28:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) Power reset (BOR/POR/PDR).
  29:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
  30:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                    ##### Backup Domain Access #####
  31:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   ==================================================================
  32:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..] After reset, the backup domain (RTC registers and RTC backup data registers) 
  33:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        is protected against possible unwanted write accesses. 
ARM GAS  /tmp/ccVvgfEi.s 			page 2


  34:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..] To enable access to the RTC Domain and RTC registers, proceed as follows:
  35:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) Enable the Power Controller (PWR) APB1 interface clock using the
  36:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RCC_PWR_CLK_ENABLE() function.
  37:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) Enable access to RTC domain using the HAL_PWR_EnableBkUpAccess() function.
  38:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) Select the RTC clock source using the __HAL_RCC_RTC_CONFIG() function.
  39:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) Enable RTC Clock using the __HAL_RCC_RTC_ENABLE() function.
  40:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
  41:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
  42:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   ##### How to use RTC Driver #####
  43:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===================================================================
  44:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..]
  45:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) Enable the RTC domain access (see description in the section above).
  46:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour
  47:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         format using the HAL_RTC_Init() function.
  48:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
  49:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *** Time and Date configuration ***
  50:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   ===================================
  51:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..] 
  52:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) To configure the RTC Calendar (Time and Date) use the HAL_RTC_SetTime()
  53:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         and HAL_RTC_SetDate() functions.
  54:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) To read the RTC Calendar, use the HAL_RTC_GetTime() and HAL_RTC_GetDate() functions.
  55:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
  56:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *** Alarm configuration ***
  57:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   ===========================
  58:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..]
  59:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) To configure the RTC Alarm use the HAL_RTC_SetAlarm() function.
  60:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****             You can also configure the RTC Alarm with interrupt mode using the 
  61:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****             HAL_RTC_SetAlarm_IT() function.
  62:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) To read the RTC Alarm, use the HAL_RTC_GetAlarm() function.
  63:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
  64:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   ##### RTC and low power modes #####
  65:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   ==================================================================
  66:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..] The MCU can be woken up from a low power mode by an RTC alternate
  67:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        function.
  68:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..] The RTC alternate functions are the RTC alarms (Alarm A and Alarm B),
  69:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        RTC wakeup, RTC tamper event detection and RTC time stamp event detection.
  70:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        These RTC alternate functions can wake up the system from the Stop and 
  71:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        Standby low power modes.
  72:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..] The system can also wake up from low power modes without depending
  73:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        on an external interrupt (Auto-wakeup mode), by using the RTC alarm
  74:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        or the RTC wakeup events.
  75:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..] The RTC provides a programmable time base for waking up from the
  76:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        Stop or Standby mode at regular intervals.
  77:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        Wakeup from STOP and STANDBY modes is possible only when the RTC clock source
  78:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        is LSE or LSI.
  79:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
  80:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****    @endverbatim
  81:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   ******************************************************************************
  82:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @attention
  83:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *
  84:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  85:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *
  86:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  87:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * are permitted provided that the following conditions are met:
  88:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  89:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *      this list of conditions and the following disclaimer.
  90:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
ARM GAS  /tmp/ccVvgfEi.s 			page 3


  91:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *      this list of conditions and the following disclaimer in the documentation
  92:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *      and/or other materials provided with the distribution.
  93:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  94:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *      may be used to endorse or promote products derived from this software
  95:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *      without specific prior written permission.
  96:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *
  97:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  98:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  99:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *
 108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   ******************************************************************************  
 109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /* Includes ------------------------------------------------------------------*/
 112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** #include "stm32l0xx_hal.h"
 113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /** @addtogroup STM32L0xx_HAL_Driver
 115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @{
 116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /** @addtogroup RTC
 120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief RTC HAL module driver
 121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @{
 122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** #ifdef HAL_RTC_MODULE_ENABLED
 125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /* Private typedef -----------------------------------------------------------*/
 127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /* Private define ------------------------------------------------------------*/
 128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /* Private macro -------------------------------------------------------------*/
 129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /* Private variables ---------------------------------------------------------*/
 130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /* Private function prototypes -----------------------------------------------*/
 131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /* Exported functions --------------------------------------------------------*/
 132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions
 134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @{
 135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group1
 138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  *  @brief    Initialization and Configuration functions 
 139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  *
 140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** @verbatim
 141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===============================================================================
 142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ##### Initialization and de-initialization functions #####
 143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===============================================================================
 144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****    [..] This section provides functions allowing to initialize and configure the 
 145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****          RTC Prescaler (Synchronous and Asynchronous), RTC Hour format, disable 
 146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****          RTC registers Write protection, enter and exit the RTC initialization mode,
 147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****          RTC registers synchronization check and reference clock detection enable.
ARM GAS  /tmp/ccVvgfEi.s 			page 4


 148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****          (#) The RTC Prescaler is programmed to generate the RTC 1Hz time base.
 149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              It is split into 2 programmable prescalers to minimize power consumption.
 150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              (++) A 7-bit asynchronous prescaler and a 15-bit synchronous prescaler.
 151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              (++) When both prescalers are used, it is recommended to configure the 
 152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  asynchronous prescaler to a high value to minimize power consumption.
 153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****          (#) All RTC registers are Write protected. Writing to the RTC registers
 154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              is enabled by writing a key into the Write Protection register, RTC_WPR.
 155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****          (#) To configure the RTC Calendar, user application should enter 
 156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              initialization mode. In this mode, the calendar counter is stopped
 157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              and its value can be updated. When the initialization sequence is 
 158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              complete, the calendar restarts counting after 4 RTCCLK cycles.
 159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****          (#) To read the calendar through the shadow registers after Calendar 
 160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              initialization, calendar update or after wakeup from low power modes
 161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              the software must first clear the RSF flag. The software must then
 162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              wait until it is set again before reading the calendar, which means
 163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              that the calendar registers have been correctly copied into the
 164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              RTC_TR and RTC_DR shadow registers.The HAL_RTC_WaitForSynchro() function 
 165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              implements the above software sequence (RSF clear and RSF check).
 166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** @endverbatim
 168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @{
 169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Initialize the RTC peripheral
 173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
 175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_Init(RTC_HandleTypeDef *hrtc)
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the RTC peripheral state */
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(hrtc == NULL)
 180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****      return HAL_ERROR;
 182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the parameters */
 185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_HOUR_FORMAT(hrtc->Init.HourFormat));
 187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ASYNCH_PREDIV(hrtc->Init.AsynchPrediv));
 188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_SYNCH_PREDIV(hrtc->Init.SynchPrediv));
 189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_OUTPUT(hrtc->Init.OutPut));
 190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_OUTPUT_REMAP(hrtc->Init.OutPutRemap));
 191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_OUTPUT_POL(hrtc->Init.OutPutPolarity));
 192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_OUTPUT_TYPE(hrtc->Init.OutPutType));
 193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   
 194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(hrtc->State == HAL_RTC_STATE_RESET)
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Allocate lock resource and initialize it */
 197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Lock = HAL_UNLOCKED;
 198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Initialize RTC MSP */
 200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     HAL_RTC_MspInit(hrtc);
 201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Set RTC state */
 204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
ARM GAS  /tmp/ccVvgfEi.s 			page 5


 205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Set Initialization mode */
 210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Set RTC state */
 216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     return HAL_ERROR;
 219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
 221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Clear RTC_CR FMT, OSEL and POL Bits */
 223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->CR &= ((uint32_t)~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL));
 224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Set RTC_CR register */
 225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->CR |= (uint32_t)(hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutP
 226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the RTC PRER */
 228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->PRER = (uint32_t)(hrtc->Init.SynchPrediv);
 229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << 16U);
 230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Exit Initialization mode */
 232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ISR &= ((uint32_t)~RTC_ISR_INIT);
 233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->OR &= (uint32_t)~(RTC_OR_ALARMOUTTYPE | RTC_OR_OUT_RMP);
 235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->OR |= (uint32_t)(hrtc->Init.OutPutType | hrtc->Init.OutPutRemap);
 236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Set RTC state */
 241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
 242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     return HAL_OK;
 244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  DeInitialize the RTC peripheral.
 249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @note   This function doesn't reset the RTC Backup Data registers.
 251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
 252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeInit(RTC_HandleTypeDef *hrtc)
 254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the parameters */
 258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Set RTC state */
 261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
ARM GAS  /tmp/ccVvgfEi.s 			page 6


 262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Set Initialization mode */
 267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Set RTC state */
 273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     return HAL_ERROR;
 276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
 278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Reset TR, DR and CR registers */
 280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->TR = (uint32_t)0x00000000U;
 281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->DR = ((uint32_t)(RTC_DR_WDU_0 | RTC_DR_MU_0 | RTC_DR_DU_0));
 282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->CR &= RTC_CR_WUCKSEL;
 284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till WUTWF flag is set and if Time out is reached exit */
 288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     while(((hrtc->Instance->ISR) & RTC_ISR_WUTWF) == (uint32_t)RESET)
 289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Set RTC state */
 296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_TIMEOUT;
 299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Reset all RTC CR register bits */
 303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->CR &= (uint32_t)0x00000000U;
 304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->WUTR = RTC_WUTR_WUT;
 305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->PRER = ((uint32_t)(RTC_PRER_PREDIV_A | 0x000000FFU));
 306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)0x00000000U;
 307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)0x00000000U;
 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->SHIFTR = (uint32_t)0x00000000U;
 309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->CALR = (uint32_t)0x00000000U;
 310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = (uint32_t)0x00000000U;
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = (uint32_t)0x00000000U;
 312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Reset ISR register and exit initialization mode */
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ISR = (uint32_t)0x00000000U;
 315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Reset Tamper configuration register */
 317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->TAMPCR = 0x00000000U;
 318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
ARM GAS  /tmp/ccVvgfEi.s 			page 7


 319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Reset Option register */
 320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->OR = 0x00000000U;
 321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_ERROR;
 333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* De-Initialize RTC MSP */
 341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   HAL_RTC_MspDeInit(hrtc);
 342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_RESET;
 344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   
 345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Release Lock */
 346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return HAL_OK;
 349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Initialize the RTC MSP.
 353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle  
 354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval None
 355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** __weak void HAL_RTC_MspInit(RTC_HandleTypeDef* hrtc)
 357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
  26              		.loc 1 357 0
  27              		.cfi_startproc
  28              	.LVL0:
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   UNUSED(hrtc);
 360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****             the HAL_RTC_MspInit could be implemented in the user file
 363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****    */ 
 364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
  29              		.loc 1 364 0
  30              		@ sp needed
  31 0000 7047     		bx	lr
  32              		.cfi_endproc
  33              	.LFE38:
  35 0002 C046     		.section	.text.HAL_RTC_MspDeInit,"ax",%progbits
  36              		.align	2
  37              		.weak	HAL_RTC_MspDeInit
ARM GAS  /tmp/ccVvgfEi.s 			page 8


  38              		.code	16
  39              		.thumb_func
  41              	HAL_RTC_MspDeInit:
  42              	.LFB39:
 365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  DeInitialize the RTC MSP.
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle 
 369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval None
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** __weak void HAL_RTC_MspDeInit(RTC_HandleTypeDef* hrtc)
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
  43              		.loc 1 372 0
  44              		.cfi_startproc
  45              	.LVL1:
 373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   UNUSED(hrtc);
 375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****             the HAL_RTC_MspDeInit could be implemented in the user file
 378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****    */ 
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
  46              		.loc 1 379 0
  47              		@ sp needed
  48 0000 7047     		bx	lr
  49              		.cfi_endproc
  50              	.LFE39:
  52 0002 C046     		.section	.text.HAL_RTC_DeactivateAlarm,"ax",%progbits
  53              		.align	2
  54              		.global	HAL_RTC_DeactivateAlarm
  55              		.code	16
  56              		.thumb_func
  58              	HAL_RTC_DeactivateAlarm:
  59              	.LFB46:
 380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @}
 383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group2
 386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  *  @brief   RTC Time and Date functions
 387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  *
 388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** @verbatim
 389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===============================================================================
 390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ##### RTC Time and Date functions #####
 391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===============================================================================
 392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  
 393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Time and Date features
 394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** @endverbatim
 396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @{
 397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Set RTC current time.
 401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  sTime: Pointer to Time structure
ARM GAS  /tmp/ccVvgfEi.s 			page 9


 403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
 408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tmpreg = 0U;
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  /* Check the parameters */
 414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_DAYLIGHT_SAVING(sTime->DayLightSaving));
 416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_STORE_OPERATION(sTime->StoreOperation));
 417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Process Locked */ 
 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sTime->Hours));
 428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
 429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     else
 431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       sTime->TimeFormat = 0x00U;
 433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sTime->Hours));
 434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sTime->Minutes));
 436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sTime->Seconds));
 437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16U) | \
 439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                         (((uint32_t)sTime->TimeFormat) << 16U));
 442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
 444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sTime->Hours);
 448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
 450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     else
 452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       sTime->TimeFormat = 0x00U;
 454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sTime->Minutes)));
 457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sTime->Seconds)));
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sTime->Hours) << 16U) | \
 459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8U) | \
ARM GAS  /tmp/ccVvgfEi.s 			page 10


 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sTime->Seconds) | \
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sTime->TimeFormat) << 16U));
 462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   UNUSED(tmpreg);
 464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Set Initialization mode */
 468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Set RTC state */
 474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Process Unlocked */ 
 477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     return HAL_ERROR;
 480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
 482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Set the RTC_TR register */
 484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Clear the bits to be configured */
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->CR &= ((uint32_t)~RTC_CR_BCK);
 488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the RTC_CR register */
 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
 491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Exit Initialization mode */
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ISR &= ((uint32_t)~RTC_ISR_INIT);
 494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* If  CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Process Unlocked */ 
 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_ERROR;
 509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     
 515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****    hrtc->State = HAL_RTC_STATE_READY;
 516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
ARM GAS  /tmp/ccVvgfEi.s 			page 11


 517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****    __HAL_UNLOCK(hrtc); 
 518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****    return HAL_OK;
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Get RTC current time.
 525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  sTime: Pointer to Time structure with Hours, Minutes and Seconds fields returned 
 527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *                with input format (BIN or BCD), also SubSeconds field returning the
 528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *                RTC_SSR register content and SecondFraction field the Synchronous pre-scaler
 529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *                factor to be used for second fraction ratio computation.
 530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @note  You can use SubSeconds and SecondFraction (sTime structure fields returned) to convert S
 535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *        value in second fraction ratio with time unit following generic formula:
 536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *        Second fraction ratio * time_unit= [(SecondFraction-SubSeconds)/(SecondFraction+1)] * ti
 537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *        This conversion can be performed only if no shift operation is pending (ie. SHFP=0) when
 538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @note  You must call HAL_RTC_GetDate() after HAL_RTC_GetTime() to unlock the values 
 539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *        in the higher-order calendar shadow registers to ensure consistency between the time and
 540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *        Reading RTC current time locks the values in calendar shadow registers until Current dat
 541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *        to ensure consistency between the time and date values.
 542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
 543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tmpreg = 0U;
 547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the parameters */
 549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Get subseconds structure field from the corresponding register*/
 552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sTime->SubSeconds = (uint32_t)(hrtc->Instance->SSR);
 553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Get SecondFraction structure field from the corresponding register field*/
 555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sTime->SecondFraction = (uint32_t)(hrtc->Instance->PRER & RTC_PRER_PREDIV_S);
 556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   
 557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Get the TR register */
 558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   tmpreg = (uint32_t)(hrtc->Instance->TR & RTC_TR_RESERVED_MASK);
 559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sTime->Hours = (uint8_t)((tmpreg & (RTC_TR_HT | RTC_TR_HU)) >> 16U);
 562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8U);
 563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sTime->Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16U);
 565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the input parameters format */
 567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Convert the time structure parameters to Binary format */
 570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sTime->Hours = (uint8_t)RTC_Bcd2ToByte(sTime->Hours);
 571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
 572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);
 573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
ARM GAS  /tmp/ccVvgfEi.s 			page 12


 574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return HAL_OK;
 576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Set RTC current date.
 580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  sDate: Pointer to date structure
 582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Format: specifies the format of the entered parameters.
 583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
 587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t datetmpreg = 0U;
 591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  /* Check the parameters */
 593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  /* Process Locked */
 596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  __HAL_LOCK(hrtc);
 597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if((Format == RTC_FORMAT_BIN) && ((sDate->Month & 0x10U) == 0x10U))
 601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sDate->Month = (uint8_t)((sDate->Month & (uint8_t)~(0x10U)) + (uint8_t)0x0AU);
 603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_WEEKDAY(sDate->WeekDay));
 606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(sDate->Year));
 610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(sDate->Month));
 611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(sDate->Date));
 612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****    datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << 16U) | \
 614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ((uint32_t)sDate->WeekDay << 13U));
 617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
 619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(sDate->Year)));
 621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     datetmpreg = RTC_Bcd2ToByte(sDate->Month);
 622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(datetmpreg));
 623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     datetmpreg = RTC_Bcd2ToByte(sDate->Date);
 624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(datetmpreg));
 625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     datetmpreg = ((((uint32_t)sDate->Year) << 16U) | \
 627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8U) | \
 628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   ((uint32_t)sDate->Date) | \
 629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   (((uint32_t)sDate->WeekDay) << 13U));
 630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
ARM GAS  /tmp/ccVvgfEi.s 			page 13


 631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Set Initialization mode */
 636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Set RTC state*/
 642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Process Unlocked */ 
 645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     return HAL_ERROR;
 648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
 650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Set the RTC_DR register */
 652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->DR = (uint32_t)(datetmpreg & RTC_DR_RESERVED_MASK);
 653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Exit Initialization mode */
 655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ISR &= ((uint32_t)~RTC_ISR_INIT);
 656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* If  CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Process Unlocked */ 
 668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_ERROR;
 671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY ;
 678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Process Unlocked */ 
 680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     return HAL_OK;
 683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Get RTC current date.
ARM GAS  /tmp/ccVvgfEi.s 			page 14


 688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  sDate: Pointer to Date structure
 690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN:  Binary data format 
 693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD:  BCD data format
 694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @note  You must call HAL_RTC_GetDate() after HAL_RTC_GetTime() to unlock the values 
 695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *        in the higher-order calendar shadow registers to ensure consistency between the time and
 696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *        Reading RTC current time locks the values in calendar shadow registers until Current dat
 697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
 698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t datetmpreg = 0U;
 702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the parameters */
 704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Get the DR register */
 707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   datetmpreg = (uint32_t)(hrtc->Instance->DR & RTC_DR_RESERVED_MASK);
 708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sDate->Year = (uint8_t)((datetmpreg & (RTC_DR_YT | RTC_DR_YU)) >> 16U);
 711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8U);
 712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sDate->Date = (uint8_t)(datetmpreg & (RTC_DR_DT | RTC_DR_DU));
 713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> 13U); 
 714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the input parameters format */
 716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Convert the date structure parameters to Binary format */
 719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sDate->Year = (uint8_t)RTC_Bcd2ToByte(sDate->Year);
 720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
 721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);
 722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return HAL_OK;
 724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @}
 728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group3
 731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  *  @brief   RTC Alarm functions
 732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  *
 733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** @verbatim   
 734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===============================================================================
 735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ##### RTC Alarm functions #####
 736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===============================================================================  
 737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  
 738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Alarm feature
 739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** @endverbatim
 741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @{
 742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Set the specified RTC Alarm.
ARM GAS  /tmp/ccVvgfEi.s 			page 15


 745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Alarm structure
 747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
 750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
 752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Form
 754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
 757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the parameters */
 759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
 761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
 762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
 763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
 764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
 765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Process Locked */
 767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
 776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
 777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     else
 779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
 781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
 784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
 785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
 789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     else
 791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
 793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << 16U) | \
 796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
ARM GAS  /tmp/ccVvgfEi.s 			page 16


 802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
 804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
 808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
 809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
 810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     else
 812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
 814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
 818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
 819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(tmpreg));
 824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     else
 826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(tmpreg));
 829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << 16U) | \
 832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));   
 838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Configure the Alarm A or Alarm B Sub Second registers */
 841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   subsecondtmpreg = (uint32_t)((uint32_t)(sAlarm->AlarmTime.SubSeconds) | (uint32_t)(sAlarm->AlarmS
 842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Configure the Alarm register */
 847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(sAlarm->Alarm == RTC_ALARM_A)
 848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Disable the Alarm A interrupt */
 850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
 851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
 853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
 854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == RESET)
 858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
ARM GAS  /tmp/ccVvgfEi.s 			page 17


 859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         
 864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Process Unlocked */ 
 867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_TIMEOUT;
 870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)tmpreg;
 874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
 875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = subsecondtmpreg;
 876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARMA_ENABLE(hrtc);
 878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
 880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Disable the Alarm B interrupt */
 882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
 883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
 885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRB);
 886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
 889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == RESET)
 890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Process Unlocked */
 899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_TIMEOUT;
 902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)tmpreg;
 906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = subsecondtmpreg;
 908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARMB_ENABLE(hrtc);
 910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Change RTC state */
ARM GAS  /tmp/ccVvgfEi.s 			page 18


 916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
 917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Process Unlocked */
 919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return HAL_OK;
 922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Set the specified RTC Alarm with Interrupt.
 926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Alarm structure
 928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
 931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @note   The Alarm register can only be written when the corresponding Alarm
 933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *         is disabled (Use the HAL_RTC_DeactivateAlarm()).   
 934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @note   The HAL_RTC_SetTime() must be called before enabling the Alarm feature.   
 935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
 936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm_IT(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t F
 938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
 941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the parameters */
 943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
 945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
 946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
 947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
 948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
 949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Process Locked */ 
 951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
 960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
 961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     else
 963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
 965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
 968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
 969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
ARM GAS  /tmp/ccVvgfEi.s 			page 19


 973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     else
 975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
 977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << 16U) | \
 979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
 985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
 987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
 991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
 992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
 993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     } 
 994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     else
 995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
 997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     
1003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
1005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
1006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(tmpreg));
1007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     else
1009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
1010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
1011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(tmpreg));
1012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << 16U) | \
1014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
1015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
1016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
1017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
1018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));     
1020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Configure the Alarm A or Alarm B Sub Second registers */
1022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   subsecondtmpreg = (uint32_t)((uint32_t)(sAlarm->AlarmTime.SubSeconds) | (uint32_t)(sAlarm->AlarmS
1023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Configure the Alarm register */
1028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(sAlarm->Alarm == RTC_ALARM_A)
1029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
ARM GAS  /tmp/ccVvgfEi.s 			page 20


1030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Disable the Alarm A interrupt */
1031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
1032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     
1033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Clear flag alarm A */
1034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tickstart = HAL_GetTick();
1037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
1038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == RESET)
1039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
1040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
1041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
1042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
1046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Process Unlocked */
1048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
1049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_TIMEOUT;
1051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
1052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)tmpreg;
1055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
1056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = subsecondtmpreg;
1057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARMA_ENABLE(hrtc);
1059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
1060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARM_ENABLE_IT(hrtc,RTC_IT_ALRA);
1061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
1063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Disable the Alarm B interrupt */
1065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
1066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     
1067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Clear flag alarm B */
1068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
1069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tickstart = HAL_GetTick();
1071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
1072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == RESET)
1073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
1074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
1075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
1076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Process Unlocked */
1082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
1083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_TIMEOUT;
1085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
1086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
ARM GAS  /tmp/ccVvgfEi.s 			page 21


1087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)tmpreg;
1089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
1090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = subsecondtmpreg;
1091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARMB_ENABLE(hrtc);
1093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
1094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARM_ENABLE_IT(hrtc, RTC_IT_ALRB);
1095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* RTC Alarm Interrupt Configuration: EXTI configuration */
1098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_IT();
1099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
1101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
1106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Process Unlocked */
1108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
1109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return HAL_OK;
1111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
1112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Deactivate the specified RTC Alarm.
1115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Alarm: Specifies the Alarm.
1117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *            @arg RTC_ALARM_A:  AlarmA
1119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *            @arg RTC_ALARM_B:  AlarmB
1120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
1121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeactivateAlarm(RTC_HandleTypeDef *hrtc, uint32_t Alarm)
1123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
  60              		.loc 1 1123 0
  61              		.cfi_startproc
  62              	.LVL2:
  63 0000 38B5     		push	{r3, r4, r5, lr}
  64              	.LCFI0:
  65              		.cfi_def_cfa_offset 16
  66              		.cfi_offset 3, -16
  67              		.cfi_offset 4, -12
  68              		.cfi_offset 5, -8
  69              		.cfi_offset 14, -4
  70              	.LVL3:
1124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the parameters */
1127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
1128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Process Locked */
1130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
  71              		.loc 1 1130 0
  72 0002 2023     		mov	r3, #32
ARM GAS  /tmp/ccVvgfEi.s 			page 22


  73 0004 C35C     		ldrb	r3, [r0, r3]
  74 0006 012B     		cmp	r3, #1
  75 0008 64D0     		beq	.L11
  76 000a 041C     		mov	r4, r0
  77              		.loc 1 1130 0 is_stmt 0 discriminator 2
  78 000c 0122     		mov	r2, #1
  79 000e 2023     		mov	r3, #32
  80 0010 C254     		strb	r2, [r0, r3]
1131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
  81              		.loc 1 1132 0 is_stmt 1 discriminator 2
  82 0012 0132     		add	r2, r2, #1
  83 0014 0133     		add	r3, r3, #1
  84 0016 C254     		strb	r2, [r0, r3]
1133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
  85              		.loc 1 1135 0 discriminator 2
  86 0018 0368     		ldr	r3, [r0]
  87 001a C832     		add	r2, r2, #200
  88 001c 5A62     		str	r2, [r3, #36]
  89 001e 0368     		ldr	r3, [r0]
  90 0020 773A     		sub	r2, r2, #119
  91 0022 5A62     		str	r2, [r3, #36]
1136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(Alarm == RTC_ALARM_A)
  92              		.loc 1 1137 0 discriminator 2
  93 0024 8023     		mov	r3, #128
  94 0026 5B00     		lsl	r3, r3, #1
  95 0028 9942     		cmp	r1, r3
  96 002a 24D1     		bne	.L5
1138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* AlarmA */
1140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
  97              		.loc 1 1140 0
  98 002c 0268     		ldr	r2, [r0]
  99 002e 9168     		ldr	r1, [r2, #8]
 100              	.LVL4:
 101 0030 294B     		ldr	r3, .L12
 102 0032 0B40     		and	r3, r1
 103 0034 9360     		str	r3, [r2, #8]
1141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
1143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
 104              		.loc 1 1143 0
 105 0036 0268     		ldr	r2, [r0]
 106 0038 9168     		ldr	r1, [r2, #8]
 107 003a 284B     		ldr	r3, .L12+4
 108 003c 0B40     		and	r3, r1
 109 003e 9360     		str	r3, [r2, #8]
1144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 110              		.loc 1 1145 0
 111 0040 FFF7FEFF 		bl	HAL_GetTick
 112              	.LVL5:
 113 0044 051C     		mov	r5, r0
 114              	.LVL6:
ARM GAS  /tmp/ccVvgfEi.s 			page 23


1146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
1148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == RESET)
 115              		.loc 1 1148 0
 116 0046 11E0     		b	.L6
 117              	.LVL7:
 118              	.L7:
1149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
1150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if( (HAL_GetTick()  - tickstart ) > RTC_TIMEOUT_VALUE)
 119              		.loc 1 1150 0
 120 0048 FFF7FEFF 		bl	HAL_GetTick
 121              	.LVL8:
 122 004c 401B     		sub	r0, r0, r5
 123 004e FA23     		mov	r3, #250
 124 0050 9B00     		lsl	r3, r3, #2
 125 0052 9842     		cmp	r0, r3
 126 0054 0AD9     		bls	.L6
1151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
1152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 127              		.loc 1 1153 0
 128 0056 2368     		ldr	r3, [r4]
 129 0058 FF22     		mov	r2, #255
 130 005a 5A62     		str	r2, [r3, #36]
1154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 131              		.loc 1 1155 0
 132 005c FC3A     		sub	r2, r2, #252
 133 005e 2123     		mov	r3, #33
 134 0060 E254     		strb	r2, [r4, r3]
1156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Process Unlocked */
1158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 135              		.loc 1 1158 0
 136 0062 0022     		mov	r2, #0
 137 0064 013B     		sub	r3, r3, #1
 138 0066 E254     		strb	r2, [r4, r3]
1159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_TIMEOUT;
 139              		.loc 1 1160 0
 140 0068 0320     		mov	r0, #3
 141 006a 34E0     		b	.L4
 142              	.L6:
1148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 143              		.loc 1 1148 0
 144 006c 2368     		ldr	r3, [r4]
 145 006e DB68     		ldr	r3, [r3, #12]
 146 0070 DB07     		lsl	r3, r3, #31
 147 0072 E9D5     		bpl	.L7
 148 0074 23E0     		b	.L8
 149              	.LVL9:
 150              	.L5:
1161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
1162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
1165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
ARM GAS  /tmp/ccVvgfEi.s 			page 24


1166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* AlarmB */
1167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
 151              		.loc 1 1167 0
 152 0076 0268     		ldr	r2, [r0]
 153 0078 9168     		ldr	r1, [r2, #8]
 154              	.LVL10:
 155 007a 194B     		ldr	r3, .L12+8
 156 007c 0B40     		and	r3, r1
 157 007e 9360     		str	r3, [r2, #8]
1168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
1170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc,RTC_IT_ALRB);
 158              		.loc 1 1170 0
 159 0080 0268     		ldr	r2, [r0]
 160 0082 9168     		ldr	r1, [r2, #8]
 161 0084 174B     		ldr	r3, .L12+12
 162 0086 0B40     		and	r3, r1
 163 0088 9360     		str	r3, [r2, #8]
1171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 164              		.loc 1 1172 0
 165 008a FFF7FEFF 		bl	HAL_GetTick
 166              	.LVL11:
 167 008e 051C     		mov	r5, r0
 168              	.LVL12:
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
1175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == RESET)
 169              		.loc 1 1175 0
 170 0090 11E0     		b	.L9
 171              	.LVL13:
 172              	.L10:
1176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
1177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 173              		.loc 1 1177 0
 174 0092 FFF7FEFF 		bl	HAL_GetTick
 175              	.LVL14:
 176 0096 401B     		sub	r0, r0, r5
 177 0098 FA23     		mov	r3, #250
 178 009a 9B00     		lsl	r3, r3, #2
 179 009c 9842     		cmp	r0, r3
 180 009e 0AD9     		bls	.L9
1178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
1179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 181              		.loc 1 1180 0
 182 00a0 2368     		ldr	r3, [r4]
 183 00a2 FF22     		mov	r2, #255
 184 00a4 5A62     		str	r2, [r3, #36]
1181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 185              		.loc 1 1182 0
 186 00a6 FC3A     		sub	r2, r2, #252
 187 00a8 2123     		mov	r3, #33
 188 00aa E254     		strb	r2, [r4, r3]
1183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Process Unlocked */
ARM GAS  /tmp/ccVvgfEi.s 			page 25


1185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 189              		.loc 1 1185 0
 190 00ac 0022     		mov	r2, #0
 191 00ae 013B     		sub	r3, r3, #1
 192 00b0 E254     		strb	r2, [r4, r3]
1186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_TIMEOUT;
 193              		.loc 1 1187 0
 194 00b2 0320     		mov	r0, #3
 195 00b4 0FE0     		b	.L4
 196              	.L9:
1175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 197              		.loc 1 1175 0
 198 00b6 2368     		ldr	r3, [r4]
 199 00b8 DB68     		ldr	r3, [r3, #12]
 200 00ba 9B07     		lsl	r3, r3, #30
 201 00bc E9D5     		bpl	.L10
 202              	.L8:
1188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
1189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 203              		.loc 1 1192 0
 204 00be 2368     		ldr	r3, [r4]
 205 00c0 FF22     		mov	r2, #255
 206 00c2 5A62     		str	r2, [r3, #36]
1193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
 207              		.loc 1 1194 0
 208 00c4 FE3A     		sub	r2, r2, #254
 209 00c6 2123     		mov	r3, #33
 210 00c8 E254     		strb	r2, [r4, r3]
1195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Process Unlocked */
1197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 211              		.loc 1 1197 0
 212 00ca 0022     		mov	r2, #0
 213 00cc 013B     		sub	r3, r3, #1
 214 00ce E254     		strb	r2, [r4, r3]
1198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return HAL_OK; 
 215              		.loc 1 1199 0
 216 00d0 0020     		mov	r0, #0
 217 00d2 00E0     		b	.L4
 218              	.LVL15:
 219              	.L11:
1130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 220              		.loc 1 1130 0
 221 00d4 0220     		mov	r0, #2
 222              	.LVL16:
 223              	.L4:
1200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 224              		.loc 1 1200 0
 225              		@ sp needed
 226 00d6 38BD     		pop	{r3, r4, r5, pc}
 227              	.L13:
ARM GAS  /tmp/ccVvgfEi.s 			page 26


 228              		.align	2
 229              	.L12:
 230 00d8 FFFEFFFF 		.word	-257
 231 00dc FFEFFFFF 		.word	-4097
 232 00e0 FFFDFFFF 		.word	-513
 233 00e4 FFDFFFFF 		.word	-8193
 234              		.cfi_endproc
 235              	.LFE46:
 237              		.section	.text.HAL_RTC_AlarmAEventCallback,"ax",%progbits
 238              		.align	2
 239              		.weak	HAL_RTC_AlarmAEventCallback
 240              		.code	16
 241              		.thumb_func
 243              	HAL_RTC_AlarmAEventCallback:
 244              	.LFB49:
1201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Get the RTC Alarm value and masks.
1204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Date structure
1206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Alarm: Specifies the Alarm.
1207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *             @arg RTC_ALARM_A: AlarmA
1209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *             @arg RTC_ALARM_B: AlarmB  
1210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
1211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
1213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
1214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
1215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Alar
1217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
1218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
1219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the parameters */
1221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
1223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(Alarm == RTC_ALARM_A)
1225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* AlarmA */
1227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sAlarm->Alarm = RTC_ALARM_A;
1228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tmpreg = (uint32_t)(hrtc->Instance->ALRMAR);
1230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMASSR ) & RTC_ALRMASSR_SS);
1231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /* Fill the structure with the read parameters */
1233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.Hours = (uint32_t)((tmpreg & (RTC_ALRMAR_HT | RTC_ALRMAR_HU)) >> 16U);
1234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> 8U);
1235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU));
1236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.TimeFormat = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16U);
1237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
1238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 24U);
1239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
1240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
1241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
ARM GAS  /tmp/ccVvgfEi.s 			page 27


1243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sAlarm->Alarm = RTC_ALARM_B;
1245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tmpreg = (uint32_t)(hrtc->Instance->ALRMBR);
1247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMBSSR) & RTC_ALRMBSSR_SS);
1248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  
1249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Fill the structure with the read parameters */
1250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.Hours = (uint32_t)((tmpreg & (RTC_ALRMBR_HT | RTC_ALRMBR_HU)) >> 16U);
1251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((tmpreg & (RTC_ALRMBR_MNT | RTC_ALRMBR_MNU)) >> 8U);
1252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)(tmpreg & (RTC_ALRMBR_ST | RTC_ALRMBR_SU));
1253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.TimeFormat = (uint32_t)((tmpreg & RTC_ALRMBR_PM) >> 16U);
1254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
1255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMBR_DT | RTC_ALRMBR_DU)) >> 24U);
1256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMBR_WDSEL);
1257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
1258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  }
1259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  
1260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
1261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sAlarm->AlarmTime.Hours = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
1263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes);
1264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds);
1265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
1266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return HAL_OK;
1269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
1270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Handle Alarm interrupt request.
1273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval None
1275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** void HAL_RTC_AlarmIRQHandler(RTC_HandleTypeDef* hrtc)
1277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
1278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Get the AlarmA interrupt source enable status */
1279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRA) != RESET)
1280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Get the pending status of the AlarmA Interrupt */
1282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) != RESET)
1283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
1284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       /* AlarmA callback */
1285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       HAL_RTC_AlarmAEventCallback(hrtc);
1286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       /* Clear the AlarmA interrupt pending bit */
1288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Get the AlarmB interrupt source enable status */
1293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRB) != RESET)
1294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Get the pending status of the AlarmB Interrupt */
1296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBF) != RESET)
1297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
1298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       /* AlarmB callback */
1299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       HAL_RTCEx_AlarmBEventCallback(hrtc);
ARM GAS  /tmp/ccVvgfEi.s 			page 28


1300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       /* Clear the AlarmB interrupt pending bit */
1302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
1303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Clear the EXTI's line Flag for RTC Alarm */
1307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_CLEAR_FLAG();
1308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Change RTC state */
1310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
1311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
1312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Alarm A callback.
1315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval None
1317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** __weak void HAL_RTC_AlarmAEventCallback(RTC_HandleTypeDef *hrtc)
1319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 245              		.loc 1 1319 0
 246              		.cfi_startproc
 247              	.LVL17:
1320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
1321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   UNUSED(hrtc);
1322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****             the HAL_RTC_AlarmAEventCallback could be implemented in the user file
1325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****    */
1326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 248              		.loc 1 1326 0
 249              		@ sp needed
 250 0000 7047     		bx	lr
 251              		.cfi_endproc
 252              	.LFE49:
 254 0002 C046     		.section	.text.HAL_RTC_AlarmIRQHandler,"ax",%progbits
 255              		.align	2
 256              		.global	HAL_RTC_AlarmIRQHandler
 257              		.code	16
 258              		.thumb_func
 260              	HAL_RTC_AlarmIRQHandler:
 261              	.LFB48:
1277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Get the AlarmA interrupt source enable status */
 262              		.loc 1 1277 0
 263              		.cfi_startproc
 264              	.LVL18:
 265 0000 10B5     		push	{r4, lr}
 266              	.LCFI1:
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 4, -8
 269              		.cfi_offset 14, -4
 270 0002 041C     		mov	r4, r0
1279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 271              		.loc 1 1279 0
 272 0004 0368     		ldr	r3, [r0]
 273 0006 9A68     		ldr	r2, [r3, #8]
 274 0008 D204     		lsl	r2, r2, #19
ARM GAS  /tmp/ccVvgfEi.s 			page 29


 275 000a 0BD5     		bpl	.L16
1282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 276              		.loc 1 1282 0
 277 000c DB68     		ldr	r3, [r3, #12]
 278 000e DB05     		lsl	r3, r3, #23
 279 0010 08D5     		bpl	.L16
1285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 280              		.loc 1 1285 0
 281 0012 FFF7FEFF 		bl	HAL_RTC_AlarmAEventCallback
 282              	.LVL19:
1288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 283              		.loc 1 1288 0
 284 0016 2268     		ldr	r2, [r4]
 285 0018 D368     		ldr	r3, [r2, #12]
 286 001a FF21     		mov	r1, #255
 287 001c 0B40     		and	r3, r1
 288 001e 0E49     		ldr	r1, .L18
 289 0020 0B43     		orr	r3, r1
 290 0022 D360     		str	r3, [r2, #12]
 291              	.L16:
1293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 292              		.loc 1 1293 0
 293 0024 2368     		ldr	r3, [r4]
 294 0026 9A68     		ldr	r2, [r3, #8]
 295 0028 9204     		lsl	r2, r2, #18
 296 002a 0CD5     		bpl	.L17
1296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 297              		.loc 1 1296 0
 298 002c DB68     		ldr	r3, [r3, #12]
 299 002e 9B05     		lsl	r3, r3, #22
 300 0030 09D5     		bpl	.L17
1299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 301              		.loc 1 1299 0
 302 0032 201C     		mov	r0, r4
 303 0034 FFF7FEFF 		bl	HAL_RTCEx_AlarmBEventCallback
 304              	.LVL20:
1302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 305              		.loc 1 1302 0
 306 0038 2268     		ldr	r2, [r4]
 307 003a D368     		ldr	r3, [r2, #12]
 308 003c FF21     		mov	r1, #255
 309 003e 0B40     		and	r3, r1
 310 0040 0649     		ldr	r1, .L18+4
 311 0042 0B43     		orr	r3, r1
 312 0044 D360     		str	r3, [r2, #12]
 313              	.L17:
1307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 314              		.loc 1 1307 0
 315 0046 8022     		mov	r2, #128
 316 0048 9202     		lsl	r2, r2, #10
 317 004a 054B     		ldr	r3, .L18+8
 318 004c 5A61     		str	r2, [r3, #20]
1310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 319              		.loc 1 1310 0
 320 004e 0122     		mov	r2, #1
 321 0050 2123     		mov	r3, #33
 322 0052 E254     		strb	r2, [r4, r3]
ARM GAS  /tmp/ccVvgfEi.s 			page 30


1311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 323              		.loc 1 1311 0
 324              		@ sp needed
 325              	.LVL21:
 326 0054 10BD     		pop	{r4, pc}
 327              	.L19:
 328 0056 C046     		.align	2
 329              	.L18:
 330 0058 7FFEFFFF 		.word	-385
 331 005c 7FFDFFFF 		.word	-641
 332 0060 00040140 		.word	1073808384
 333              		.cfi_endproc
 334              	.LFE48:
 336              		.section	.text.HAL_RTC_PollForAlarmAEvent,"ax",%progbits
 337              		.align	2
 338              		.global	HAL_RTC_PollForAlarmAEvent
 339              		.code	16
 340              		.thumb_func
 342              	HAL_RTC_PollForAlarmAEvent:
 343              	.LFB50:
1327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Handle AlarmA Polling request.
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Timeout: Timeout duration
1332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
1333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_PollForAlarmAEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 344              		.loc 1 1335 0
 345              		.cfi_startproc
 346              	.LVL22:
 347 0000 70B5     		push	{r4, r5, r6, lr}
 348              	.LCFI2:
 349              		.cfi_def_cfa_offset 16
 350              		.cfi_offset 4, -16
 351              		.cfi_offset 5, -12
 352              		.cfi_offset 6, -8
 353              		.cfi_offset 14, -4
 354 0002 041C     		mov	r4, r0
 355 0004 0D1C     		mov	r5, r1
1336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tickstart = HAL_GetTick();   
 356              		.loc 1 1337 0
 357 0006 FFF7FEFF 		bl	HAL_GetTick
 358              	.LVL23:
 359 000a 061C     		mov	r6, r0
 360              	.LVL24:
1338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   
1339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) == RESET)
 361              		.loc 1 1339 0
 362 000c 0DE0     		b	.L22
 363              	.LVL25:
 364              	.L25:
1340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if(Timeout != HAL_MAX_DELAY)
 365              		.loc 1 1341 0
ARM GAS  /tmp/ccVvgfEi.s 			page 31


 366 000e 6B1C     		add	r3, r5, #1
 367 0010 0BD0     		beq	.L22
1342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
1343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 368              		.loc 1 1343 0
 369 0012 002D     		cmp	r5, #0
 370 0014 04D0     		beq	.L23
 371              		.loc 1 1343 0 is_stmt 0 discriminator 1
 372 0016 FFF7FEFF 		bl	HAL_GetTick
 373              	.LVL26:
 374 001a 801B     		sub	r0, r0, r6
 375 001c A842     		cmp	r0, r5
 376 001e 04D9     		bls	.L22
 377              	.L23:
1344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
1345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 378              		.loc 1 1345 0 is_stmt 1
 379 0020 0322     		mov	r2, #3
 380 0022 2123     		mov	r3, #33
 381 0024 E254     		strb	r2, [r4, r3]
1346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_TIMEOUT;
 382              		.loc 1 1346 0
 383 0026 0320     		mov	r0, #3
 384 0028 0DE0     		b	.L24
 385              	.L22:
1339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 386              		.loc 1 1339 0
 387 002a 2368     		ldr	r3, [r4]
 388 002c DA68     		ldr	r2, [r3, #12]
 389 002e D205     		lsl	r2, r2, #23
 390 0030 EDD5     		bpl	.L25
1347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
1348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Clear the Alarm interrupt pending bit */
1352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
 391              		.loc 1 1352 0
 392 0032 DA68     		ldr	r2, [r3, #12]
 393 0034 FF21     		mov	r1, #255
 394 0036 0A40     		and	r2, r1
 395 0038 0349     		ldr	r1, .L26
 396 003a 0A43     		orr	r2, r1
 397 003c DA60     		str	r2, [r3, #12]
1353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Change RTC state */
1355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
 398              		.loc 1 1355 0
 399 003e 0122     		mov	r2, #1
 400 0040 2123     		mov	r3, #33
 401 0042 E254     		strb	r2, [r4, r3]
1356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return HAL_OK;
 402              		.loc 1 1357 0
 403 0044 0020     		mov	r0, #0
 404              	.L24:
1358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
ARM GAS  /tmp/ccVvgfEi.s 			page 32


 405              		.loc 1 1358 0
 406              		@ sp needed
 407              	.LVL27:
 408              	.LVL28:
 409              	.LVL29:
 410 0046 70BD     		pop	{r4, r5, r6, pc}
 411              	.L27:
 412              		.align	2
 413              	.L26:
 414 0048 7FFEFFFF 		.word	-385
 415              		.cfi_endproc
 416              	.LFE50:
 418              		.section	.text.HAL_RTC_WaitForSynchro,"ax",%progbits
 419              		.align	2
 420              		.global	HAL_RTC_WaitForSynchro
 421              		.code	16
 422              		.thumb_func
 424              	HAL_RTC_WaitForSynchro:
 425              	.LFB51:
1359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @}
1362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group4
1365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  *  @brief   Peripheral Control functions 
1366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  *
1367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** @verbatim
1368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===============================================================================
1369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                      ##### Peripheral Control functions #####
1370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===============================================================================
1371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     [..]
1372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     This subsection provides functions allowing to
1373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       (+) Wait for RTC Time and Date Synchronization
1374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** @endverbatim
1376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @{
1377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Wait until the RTC Time and Date registers (RTC_TR and RTC_DR) are
1381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *         synchronized with RTC APB clock.
1382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @note   The RTC Resynchronization mode is write protected, use the 
1383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function.
1384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @note   To read the calendar through the shadow registers after Calendar 
1385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *         initialization, calendar update or after wakeup from low power modes
1386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *         the software must first clear the RSF flag.
1387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *         The software must then wait until it is set again before reading
1388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *         the calendar, which means that the calendar registers have been
1389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *         correctly copied into the RTC_TR and RTC_DR shadow registers.
1390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
1392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_WaitForSynchro(RTC_HandleTypeDef* hrtc)
1394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 426              		.loc 1 1394 0
 427              		.cfi_startproc
ARM GAS  /tmp/ccVvgfEi.s 			page 33


 428              	.LVL30:
 429 0000 38B5     		push	{r3, r4, r5, lr}
 430              	.LCFI3:
 431              		.cfi_def_cfa_offset 16
 432              		.cfi_offset 3, -16
 433              		.cfi_offset 4, -12
 434              		.cfi_offset 5, -8
 435              		.cfi_offset 14, -4
 436 0002 041C     		mov	r4, r0
 437              	.LVL31:
1395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Clear RSF flag */
1398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
 438              		.loc 1 1398 0
 439 0004 0268     		ldr	r2, [r0]
 440 0006 D368     		ldr	r3, [r2, #12]
 441 0008 A021     		mov	r1, #160
 442 000a 8B43     		bic	r3, r1
 443 000c D360     		str	r3, [r2, #12]
1399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   tickstart = HAL_GetTick();
 444              		.loc 1 1400 0
 445 000e FFF7FEFF 		bl	HAL_GetTick
 446              	.LVL32:
 447 0012 051C     		mov	r5, r0
 448              	.LVL33:
1401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Wait the registers to be synchronised */
1403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   while((hrtc->Instance->ISR & RTC_ISR_RSF) == (uint32_t)RESET)
 449              		.loc 1 1403 0
 450 0014 06E0     		b	.L29
 451              	.LVL34:
 452              	.L31:
1404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 453              		.loc 1 1405 0
 454 0016 FFF7FEFF 		bl	HAL_GetTick
 455              	.LVL35:
 456 001a 401B     		sub	r0, r0, r5
 457 001c FA23     		mov	r3, #250
 458 001e 9B00     		lsl	r3, r3, #2
 459 0020 9842     		cmp	r0, r3
 460 0022 05D8     		bhi	.L32
 461              	.L29:
1403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 462              		.loc 1 1403 0
 463 0024 2368     		ldr	r3, [r4]
 464 0026 DB68     		ldr	r3, [r3, #12]
 465 0028 9B06     		lsl	r3, r3, #26
 466 002a F4D5     		bpl	.L31
1406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
1407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       return HAL_TIMEOUT;
1408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return HAL_OK;
ARM GAS  /tmp/ccVvgfEi.s 			page 34


 467              		.loc 1 1411 0
 468 002c 0020     		mov	r0, #0
 469 002e 00E0     		b	.L30
 470              	.L32:
1407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 471              		.loc 1 1407 0
 472 0030 0320     		mov	r0, #3
 473              	.L30:
1412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 474              		.loc 1 1412 0
 475              		@ sp needed
 476              	.LVL36:
 477              	.LVL37:
 478 0032 38BD     		pop	{r3, r4, r5, pc}
 479              		.cfi_endproc
 480              	.LFE51:
 482              		.section	.text.HAL_RTC_GetState,"ax",%progbits
 483              		.align	2
 484              		.global	HAL_RTC_GetState
 485              		.code	16
 486              		.thumb_func
 488              	HAL_RTC_GetState:
 489              	.LFB52:
1413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @}
1416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group5
1419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  *  @brief   Peripheral State functions 
1420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  *
1421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** @verbatim   
1422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===============================================================================
1423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                      ##### Peripheral State functions #####
1424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===============================================================================  
1425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     [..]
1426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     This subsection provides functions allowing to
1427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       (+) Get RTC state
1428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** @endverbatim
1430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @{
1431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Return the RTC handle state.
1434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL state
1436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_RTCStateTypeDef HAL_RTC_GetState(RTC_HandleTypeDef* hrtc)
1438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 490              		.loc 1 1438 0
 491              		.cfi_startproc
 492              	.LVL38:
1439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Return RTC handle state */
1440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return hrtc->State;
 493              		.loc 1 1440 0
 494 0000 2123     		mov	r3, #33
 495 0002 C05C     		ldrb	r0, [r0, r3]
ARM GAS  /tmp/ccVvgfEi.s 			page 35


 496              	.LVL39:
 497 0004 C0B2     		uxtb	r0, r0
1441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 498              		.loc 1 1441 0
 499              		@ sp needed
 500 0006 7047     		bx	lr
 501              		.cfi_endproc
 502              	.LFE52:
 504              		.section	.text.RTC_EnterInitMode,"ax",%progbits
 505              		.align	2
 506              		.global	RTC_EnterInitMode
 507              		.code	16
 508              		.thumb_func
 510              	RTC_EnterInitMode:
 511              	.LFB53:
1442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @}
1445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @}
1448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /** @addtogroup RTC_Private_Functions
1451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @{
1452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Enter the RTC Initialization mode.
1455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the
1456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function.
1457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
1459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef* hrtc)
1461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 512              		.loc 1 1461 0
 513              		.cfi_startproc
 514              	.LVL40:
 515 0000 38B5     		push	{r3, r4, r5, lr}
 516              	.LCFI4:
 517              		.cfi_def_cfa_offset 16
 518              		.cfi_offset 3, -16
 519              		.cfi_offset 4, -12
 520              		.cfi_offset 5, -8
 521              		.cfi_offset 14, -4
 522              	.LVL41:
1462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check if the Initialization mode is set */
1465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 523              		.loc 1 1465 0
 524 0002 0368     		ldr	r3, [r0]
 525 0004 DA68     		ldr	r2, [r3, #12]
 526 0006 5206     		lsl	r2, r2, #25
 527 0008 14D4     		bmi	.L38
 528 000a 041C     		mov	r4, r0
1466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
ARM GAS  /tmp/ccVvgfEi.s 			page 36


1467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Set the Initialization mode */
1468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
 529              		.loc 1 1468 0
 530 000c 0122     		mov	r2, #1
 531 000e 5242     		neg	r2, r2
 532 0010 DA60     		str	r2, [r3, #12]
1469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 533              		.loc 1 1470 0
 534 0012 FFF7FEFF 		bl	HAL_GetTick
 535              	.LVL42:
 536 0016 051C     		mov	r5, r0
 537              	.LVL43:
1471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
1472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     while((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 538              		.loc 1 1472 0
 539 0018 06E0     		b	.L36
 540              	.LVL44:
 541              	.L37:
1473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
1474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if((HAL_GetTick()  - tickstart ) > RTC_TIMEOUT_VALUE)
 542              		.loc 1 1474 0
 543 001a FFF7FEFF 		bl	HAL_GetTick
 544              	.LVL45:
 545 001e 401B     		sub	r0, r0, r5
 546 0020 FA23     		mov	r3, #250
 547 0022 9B00     		lsl	r3, r3, #2
 548 0024 9842     		cmp	r0, r3
 549 0026 07D8     		bhi	.L39
 550              	.L36:
1472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 551              		.loc 1 1472 0
 552 0028 2368     		ldr	r3, [r4]
 553 002a DB68     		ldr	r3, [r3, #12]
 554 002c 5B06     		lsl	r3, r3, #25
 555 002e F4D5     		bpl	.L37
1475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
1476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_TIMEOUT;
1477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
1478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return HAL_OK;
 556              		.loc 1 1481 0
 557 0030 0020     		mov	r0, #0
 558 0032 02E0     		b	.L35
 559              	.LVL46:
 560              	.L38:
 561 0034 0020     		mov	r0, #0
 562              	.LVL47:
 563 0036 00E0     		b	.L35
 564              	.LVL48:
 565              	.L39:
1476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 566              		.loc 1 1476 0
 567 0038 0320     		mov	r0, #3
 568              	.LVL49:
ARM GAS  /tmp/ccVvgfEi.s 			page 37


 569              	.L35:
1482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 570              		.loc 1 1482 0
 571              		@ sp needed
 572 003a 38BD     		pop	{r3, r4, r5, pc}
 573              		.cfi_endproc
 574              	.LFE53:
 576              		.section	.text.HAL_RTC_Init,"ax",%progbits
 577              		.align	2
 578              		.global	HAL_RTC_Init
 579              		.code	16
 580              		.thumb_func
 582              	HAL_RTC_Init:
 583              	.LFB36:
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the RTC peripheral state */
 584              		.loc 1 177 0
 585              		.cfi_startproc
 586              	.LVL50:
 587 0000 38B5     		push	{r3, r4, r5, lr}
 588              	.LCFI5:
 589              		.cfi_def_cfa_offset 16
 590              		.cfi_offset 3, -16
 591              		.cfi_offset 4, -12
 592              		.cfi_offset 5, -8
 593              		.cfi_offset 14, -4
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 594              		.loc 1 179 0
 595 0002 0028     		cmp	r0, #0
 596 0004 4ED0     		beq	.L44
 597 0006 041C     		mov	r4, r0
 194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 598              		.loc 1 194 0
 599 0008 2123     		mov	r3, #33
 600 000a C35C     		ldrb	r3, [r0, r3]
 601 000c 002B     		cmp	r3, #0
 602 000e 04D1     		bne	.L42
 197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 603              		.loc 1 197 0
 604 0010 0022     		mov	r2, #0
 605 0012 2033     		add	r3, r3, #32
 606 0014 C254     		strb	r2, [r0, r3]
 200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 607              		.loc 1 200 0
 608 0016 FFF7FEFF 		bl	HAL_RTC_MspInit
 609              	.LVL51:
 610              	.L42:
 204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 611              		.loc 1 204 0
 612 001a 0222     		mov	r2, #2
 613 001c 2123     		mov	r3, #33
 614 001e E254     		strb	r2, [r4, r3]
 207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 615              		.loc 1 207 0
 616 0020 2368     		ldr	r3, [r4]
 617 0022 C832     		add	r2, r2, #200
 618 0024 5A62     		str	r2, [r3, #36]
 619 0026 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccVvgfEi.s 			page 38


 620 0028 773A     		sub	r2, r2, #119
 621 002a 5A62     		str	r2, [r3, #36]
 210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 622              		.loc 1 210 0
 623 002c 201C     		mov	r0, r4
 624 002e FFF7FEFF 		bl	RTC_EnterInitMode
 625              	.LVL52:
 626 0032 0028     		cmp	r0, #0
 627 0034 07D0     		beq	.L43
 213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 628              		.loc 1 213 0
 629 0036 2368     		ldr	r3, [r4]
 630 0038 FF22     		mov	r2, #255
 631 003a 5A62     		str	r2, [r3, #36]
 216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 632              		.loc 1 216 0
 633 003c FB3A     		sub	r2, r2, #251
 634 003e 2123     		mov	r3, #33
 635 0040 E254     		strb	r2, [r4, r3]
 218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 636              		.loc 1 218 0
 637 0042 0120     		mov	r0, #1
 638 0044 2FE0     		b	.L41
 639              	.L43:
 223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Set RTC_CR register */
 640              		.loc 1 223 0
 641 0046 2268     		ldr	r2, [r4]
 642 0048 9168     		ldr	r1, [r2, #8]
 643 004a 174B     		ldr	r3, .L45
 644 004c 0B40     		and	r3, r1
 645 004e 9360     		str	r3, [r2, #8]
 225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 646              		.loc 1 225 0
 647 0050 2268     		ldr	r2, [r4]
 648 0052 9168     		ldr	r1, [r2, #8]
 649 0054 6368     		ldr	r3, [r4, #4]
 650 0056 2569     		ldr	r5, [r4, #16]
 651 0058 2B43     		orr	r3, r5
 652 005a A569     		ldr	r5, [r4, #24]
 653 005c 2B43     		orr	r3, r5
 654 005e 0B43     		orr	r3, r1
 655 0060 9360     		str	r3, [r2, #8]
 228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << 16U);
 656              		.loc 1 228 0
 657 0062 2368     		ldr	r3, [r4]
 658 0064 E268     		ldr	r2, [r4, #12]
 659 0066 1A61     		str	r2, [r3, #16]
 229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 660              		.loc 1 229 0
 661 0068 2268     		ldr	r2, [r4]
 662 006a 1169     		ldr	r1, [r2, #16]
 663 006c A368     		ldr	r3, [r4, #8]
 664 006e 1B04     		lsl	r3, r3, #16
 665 0070 0B43     		orr	r3, r1
 666 0072 1361     		str	r3, [r2, #16]
 232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 667              		.loc 1 232 0
ARM GAS  /tmp/ccVvgfEi.s 			page 39


 668 0074 2268     		ldr	r2, [r4]
 669 0076 D368     		ldr	r3, [r2, #12]
 670 0078 8021     		mov	r1, #128
 671 007a 8B43     		bic	r3, r1
 672 007c D360     		str	r3, [r2, #12]
 234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->OR |= (uint32_t)(hrtc->Init.OutPutType | hrtc->Init.OutPutRemap);
 673              		.loc 1 234 0
 674 007e 2268     		ldr	r2, [r4]
 675 0080 D36C     		ldr	r3, [r2, #76]
 676 0082 7D39     		sub	r1, r1, #125
 677 0084 8B43     		bic	r3, r1
 678 0086 D364     		str	r3, [r2, #76]
 235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 679              		.loc 1 235 0
 680 0088 2268     		ldr	r2, [r4]
 681 008a D16C     		ldr	r1, [r2, #76]
 682 008c E369     		ldr	r3, [r4, #28]
 683 008e 6569     		ldr	r5, [r4, #20]
 684 0090 2B43     		orr	r3, r5
 685 0092 0B43     		orr	r3, r1
 686 0094 D364     		str	r3, [r2, #76]
 238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 687              		.loc 1 238 0
 688 0096 2368     		ldr	r3, [r4]
 689 0098 FF22     		mov	r2, #255
 690 009a 5A62     		str	r2, [r3, #36]
 241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 691              		.loc 1 241 0
 692 009c FE3A     		sub	r2, r2, #254
 693 009e 2123     		mov	r3, #33
 694 00a0 E254     		strb	r2, [r4, r3]
 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 695              		.loc 1 243 0
 696 00a2 00E0     		b	.L41
 697              	.LVL53:
 698              	.L44:
 181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 699              		.loc 1 181 0
 700 00a4 0120     		mov	r0, #1
 701              	.LVL54:
 702              	.L41:
 245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 703              		.loc 1 245 0
 704              		@ sp needed
 705 00a6 38BD     		pop	{r3, r4, r5, pc}
 706              	.L46:
 707              		.align	2
 708              	.L45:
 709 00a8 BFFF8FFF 		.word	-7340097
 710              		.cfi_endproc
 711              	.LFE36:
 713              		.section	.text.HAL_RTC_DeInit,"ax",%progbits
 714              		.align	2
 715              		.global	HAL_RTC_DeInit
 716              		.code	16
 717              		.thumb_func
 719              	HAL_RTC_DeInit:
ARM GAS  /tmp/ccVvgfEi.s 			page 40


 720              	.LFB37:
 254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 721              		.loc 1 254 0
 722              		.cfi_startproc
 723              	.LVL55:
 724 0000 70B5     		push	{r4, r5, r6, lr}
 725              	.LCFI6:
 726              		.cfi_def_cfa_offset 16
 727              		.cfi_offset 4, -16
 728              		.cfi_offset 5, -12
 729              		.cfi_offset 6, -8
 730              		.cfi_offset 14, -4
 731 0002 041C     		mov	r4, r0
 732              	.LVL56:
 261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 733              		.loc 1 261 0
 734 0004 0222     		mov	r2, #2
 735 0006 2123     		mov	r3, #33
 736 0008 C254     		strb	r2, [r0, r3]
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 737              		.loc 1 264 0
 738 000a 0368     		ldr	r3, [r0]
 739 000c C832     		add	r2, r2, #200
 740 000e 5A62     		str	r2, [r3, #36]
 741 0010 0368     		ldr	r3, [r0]
 742 0012 773A     		sub	r2, r2, #119
 743 0014 5A62     		str	r2, [r3, #36]
 267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 744              		.loc 1 267 0
 745 0016 FFF7FEFF 		bl	RTC_EnterInitMode
 746              	.LVL57:
 747 001a 051E     		sub	r5, r0, #0
 748 001c 07D0     		beq	.L48
 270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 749              		.loc 1 270 0
 750 001e 2368     		ldr	r3, [r4]
 751 0020 FF22     		mov	r2, #255
 752 0022 5A62     		str	r2, [r3, #36]
 273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 753              		.loc 1 273 0
 754 0024 FB3A     		sub	r2, r2, #251
 755 0026 2123     		mov	r3, #33
 756 0028 E254     		strb	r2, [r4, r3]
 275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 757              		.loc 1 275 0
 758 002a 0125     		mov	r5, #1
 759 002c 58E0     		b	.L49
 760              	.L48:
 280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->DR = ((uint32_t)(RTC_DR_WDU_0 | RTC_DR_MU_0 | RTC_DR_DU_0));
 761              		.loc 1 280 0
 762 002e 2368     		ldr	r3, [r4]
 763 0030 0022     		mov	r2, #0
 764 0032 1A60     		str	r2, [r3]
 281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 765              		.loc 1 281 0
 766 0034 2368     		ldr	r3, [r4]
 767 0036 2B4A     		ldr	r2, .L53
ARM GAS  /tmp/ccVvgfEi.s 			page 41


 768 0038 5A60     		str	r2, [r3, #4]
 283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 769              		.loc 1 283 0
 770 003a 2268     		ldr	r2, [r4]
 771 003c 9368     		ldr	r3, [r2, #8]
 772 003e 0721     		mov	r1, #7
 773 0040 0B40     		and	r3, r1
 774 0042 9360     		str	r3, [r2, #8]
 285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 775              		.loc 1 285 0
 776 0044 FFF7FEFF 		bl	HAL_GetTick
 777              	.LVL58:
 778 0048 061C     		mov	r6, r0
 779              	.LVL59:
 288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 780              		.loc 1 288 0
 781 004a 0EE0     		b	.L50
 782              	.LVL60:
 783              	.L51:
 290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 784              		.loc 1 290 0
 785 004c FFF7FEFF 		bl	HAL_GetTick
 786              	.LVL61:
 787 0050 801B     		sub	r0, r0, r6
 788 0052 FA23     		mov	r3, #250
 789 0054 9B00     		lsl	r3, r3, #2
 790 0056 9842     		cmp	r0, r3
 791 0058 07D9     		bls	.L50
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 792              		.loc 1 293 0
 793 005a 2368     		ldr	r3, [r4]
 794 005c FF22     		mov	r2, #255
 795 005e 5A62     		str	r2, [r3, #36]
 296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 796              		.loc 1 296 0
 797 0060 FC3A     		sub	r2, r2, #252
 798 0062 2123     		mov	r3, #33
 799 0064 E254     		strb	r2, [r4, r3]
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 800              		.loc 1 298 0
 801 0066 0325     		mov	r5, #3
 802 0068 3AE0     		b	.L49
 803              	.L50:
 288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 804              		.loc 1 288 0
 805 006a 2368     		ldr	r3, [r4]
 806 006c DA68     		ldr	r2, [r3, #12]
 807 006e 5207     		lsl	r2, r2, #29
 808 0070 ECD5     		bpl	.L51
 303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->WUTR = RTC_WUTR_WUT;
 809              		.loc 1 303 0
 810 0072 9A68     		ldr	r2, [r3, #8]
 811 0074 0022     		mov	r2, #0
 812 0076 9A60     		str	r2, [r3, #8]
 304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->PRER = ((uint32_t)(RTC_PRER_PREDIV_A | 0x000000FFU));
 813              		.loc 1 304 0
 814 0078 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccVvgfEi.s 			page 42


 815 007a 1B49     		ldr	r1, .L53+4
 816 007c 5961     		str	r1, [r3, #20]
 305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)0x00000000U;
 817              		.loc 1 305 0
 818 007e 2368     		ldr	r3, [r4]
 819 0080 1A49     		ldr	r1, .L53+8
 820 0082 1961     		str	r1, [r3, #16]
 306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)0x00000000U;
 821              		.loc 1 306 0
 822 0084 2368     		ldr	r3, [r4]
 823 0086 DA61     		str	r2, [r3, #28]
 307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->SHIFTR = (uint32_t)0x00000000U;
 824              		.loc 1 307 0
 825 0088 2368     		ldr	r3, [r4]
 826 008a 1A62     		str	r2, [r3, #32]
 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->CALR = (uint32_t)0x00000000U;
 827              		.loc 1 308 0
 828 008c 2368     		ldr	r3, [r4]
 829 008e DA62     		str	r2, [r3, #44]
 309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = (uint32_t)0x00000000U;
 830              		.loc 1 309 0
 831 0090 2368     		ldr	r3, [r4]
 832 0092 DA63     		str	r2, [r3, #60]
 310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = (uint32_t)0x00000000U;
 833              		.loc 1 310 0
 834 0094 2368     		ldr	r3, [r4]
 835 0096 5A64     		str	r2, [r3, #68]
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 836              		.loc 1 311 0
 837 0098 2368     		ldr	r3, [r4]
 838 009a 9A64     		str	r2, [r3, #72]
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 839              		.loc 1 314 0
 840 009c 2368     		ldr	r3, [r4]
 841 009e DA60     		str	r2, [r3, #12]
 317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 842              		.loc 1 317 0
 843 00a0 2368     		ldr	r3, [r4]
 844 00a2 1A64     		str	r2, [r3, #64]
 320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 845              		.loc 1 320 0
 846 00a4 2368     		ldr	r3, [r4]
 847 00a6 DA64     		str	r2, [r3, #76]
 323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 848              		.loc 1 323 0
 849 00a8 2368     		ldr	r3, [r4]
 850 00aa 9B68     		ldr	r3, [r3, #8]
 851 00ac 9B06     		lsl	r3, r3, #26
 852 00ae 0CD4     		bmi	.L52
 325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 853              		.loc 1 325 0
 854 00b0 201C     		mov	r0, r4
 855 00b2 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 856              	.LVL62:
 857 00b6 0028     		cmp	r0, #0
 858 00b8 07D0     		beq	.L52
 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
ARM GAS  /tmp/ccVvgfEi.s 			page 43


 859              		.loc 1 328 0
 860 00ba 2368     		ldr	r3, [r4]
 861 00bc FF22     		mov	r2, #255
 862 00be 5A62     		str	r2, [r3, #36]
 330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 863              		.loc 1 330 0
 864 00c0 FB3A     		sub	r2, r2, #251
 865 00c2 2123     		mov	r3, #33
 866 00c4 E254     		strb	r2, [r4, r3]
 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 867              		.loc 1 332 0
 868 00c6 0125     		mov	r5, #1
 869 00c8 0AE0     		b	.L49
 870              	.L52:
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 871              		.loc 1 338 0
 872 00ca 2368     		ldr	r3, [r4]
 873 00cc FF22     		mov	r2, #255
 874 00ce 5A62     		str	r2, [r3, #36]
 341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 875              		.loc 1 341 0
 876 00d0 201C     		mov	r0, r4
 877 00d2 FFF7FEFF 		bl	HAL_RTC_MspDeInit
 878              	.LVL63:
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   
 879              		.loc 1 343 0
 880 00d6 0023     		mov	r3, #0
 881 00d8 2122     		mov	r2, #33
 882 00da A354     		strb	r3, [r4, r2]
 346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 883              		.loc 1 346 0
 884 00dc 013A     		sub	r2, r2, #1
 885 00de A354     		strb	r3, [r4, r2]
 886              	.LVL64:
 887              	.L49:
 349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 888              		.loc 1 349 0
 889 00e0 281C     		mov	r0, r5
 890              		@ sp needed
 891              	.LVL65:
 892 00e2 70BD     		pop	{r4, r5, r6, pc}
 893              	.L54:
 894              		.align	2
 895              	.L53:
 896 00e4 01210000 		.word	8449
 897 00e8 FFFF0000 		.word	65535
 898 00ec FF007F00 		.word	8323327
 899              		.cfi_endproc
 900              	.LFE37:
 902              		.section	.text.RTC_ByteToBcd2,"ax",%progbits
 903              		.align	2
 904              		.global	RTC_ByteToBcd2
 905              		.code	16
 906              		.thumb_func
 908              	RTC_ByteToBcd2:
 909              	.LFB54:
1483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
ARM GAS  /tmp/ccVvgfEi.s 			page 44


1484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Convert a 2 digit decimal to BCD format.
1487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Value: Byte to be converted
1488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval Converted byte
1489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** uint8_t RTC_ByteToBcd2(uint8_t Value)
1491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 910              		.loc 1 1491 0
 911              		.cfi_startproc
 912              	.LVL66:
1492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t bcdhigh = 0U;
 913              		.loc 1 1492 0
 914 0000 0023     		mov	r3, #0
1493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   while(Value >= 10U)
 915              		.loc 1 1494 0
 916 0002 02E0     		b	.L56
 917              	.LVL67:
 918              	.L57:
1495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     bcdhigh++;
 919              		.loc 1 1496 0
 920 0004 0133     		add	r3, r3, #1
 921              	.LVL68:
1497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     Value -= 10U;
 922              		.loc 1 1497 0
 923 0006 0A38     		sub	r0, r0, #10
 924              	.LVL69:
 925 0008 C0B2     		uxtb	r0, r0
 926              	.LVL70:
 927              	.L56:
1494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 928              		.loc 1 1494 0
 929 000a 0928     		cmp	r0, #9
 930 000c FAD8     		bhi	.L57
1498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return  ((uint8_t)(bcdhigh << 4U) | Value);
 931              		.loc 1 1500 0
 932 000e 1B01     		lsl	r3, r3, #4
 933              	.LVL71:
 934 0010 DBB2     		uxtb	r3, r3
 935 0012 1843     		orr	r0, r3
 936              	.LVL72:
1501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 937              		.loc 1 1501 0
 938              		@ sp needed
 939 0014 7047     		bx	lr
 940              		.cfi_endproc
 941              	.LFE54:
 943 0016 C046     		.section	.text.HAL_RTC_SetTime,"ax",%progbits
 944              		.align	2
 945              		.global	HAL_RTC_SetTime
 946              		.code	16
 947              		.thumb_func
 949              	HAL_RTC_SetTime:
ARM GAS  /tmp/ccVvgfEi.s 			page 45


 950              	.LFB40:
 410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tmpreg = 0U;
 951              		.loc 1 410 0
 952              		.cfi_startproc
 953              	.LVL73:
 954 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 955              	.LCFI7:
 956              		.cfi_def_cfa_offset 24
 957              		.cfi_offset 3, -24
 958              		.cfi_offset 4, -20
 959              		.cfi_offset 5, -16
 960              		.cfi_offset 6, -12
 961              		.cfi_offset 7, -8
 962              		.cfi_offset 14, -4
 963              	.LVL74:
 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 964              		.loc 1 419 0
 965 0002 2023     		mov	r3, #32
 966 0004 C35C     		ldrb	r3, [r0, r3]
 967 0006 012B     		cmp	r3, #1
 968 0008 79D0     		beq	.L66
 969 000a 0D1C     		mov	r5, r1
 970 000c 041C     		mov	r4, r0
 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 971              		.loc 1 419 0 is_stmt 0 discriminator 2
 972 000e 0121     		mov	r1, #1
 973              	.LVL75:
 974 0010 2023     		mov	r3, #32
 975 0012 C154     		strb	r1, [r0, r3]
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 976              		.loc 1 421 0 is_stmt 1 discriminator 2
 977 0014 0131     		add	r1, r1, #1
 978 0016 0133     		add	r3, r3, #1
 979 0018 C154     		strb	r1, [r0, r3]
 423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 980              		.loc 1 423 0 discriminator 2
 981 001a 002A     		cmp	r2, #0
 982 001c 16D1     		bne	.L60
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 983              		.loc 1 425 0
 984 001e 0368     		ldr	r3, [r0]
 985 0020 9B68     		ldr	r3, [r3, #8]
 986 0022 5B06     		lsl	r3, r3, #25
 987 0024 01D4     		bmi	.L61
 432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sTime->Hours));
 988              		.loc 1 432 0
 989 0026 0023     		mov	r3, #0
 990 0028 EB70     		strb	r3, [r5, #3]
 991              	.L61:
 438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 992              		.loc 1 438 0
 993 002a 2878     		ldrb	r0, [r5]
 994              	.LVL76:
 995 002c FFF7FEFF 		bl	RTC_ByteToBcd2
 996              	.LVL77:
 997 0030 0604     		lsl	r6, r0, #16
 439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
ARM GAS  /tmp/ccVvgfEi.s 			page 46


 998              		.loc 1 439 0
 999 0032 6878     		ldrb	r0, [r5, #1]
 1000 0034 FFF7FEFF 		bl	RTC_ByteToBcd2
 1001              	.LVL78:
 1002 0038 0002     		lsl	r0, r0, #8
 438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 1003              		.loc 1 438 0
 1004 003a 0643     		orr	r6, r0
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                         (((uint32_t)sTime->TimeFormat) << 16U));
 1005              		.loc 1 440 0
 1006 003c A878     		ldrb	r0, [r5, #2]
 1007 003e FFF7FEFF 		bl	RTC_ByteToBcd2
 1008              	.LVL79:
 439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 1009              		.loc 1 439 0
 1010 0042 0643     		orr	r6, r0
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1011              		.loc 1 441 0
 1012 0044 EB78     		ldrb	r3, [r5, #3]
 1013 0046 1B04     		lsl	r3, r3, #16
 438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 1014              		.loc 1 438 0
 1015 0048 1E43     		orr	r6, r3
 1016              	.LVL80:
 1017 004a 0FE0     		b	.L62
 1018              	.LVL81:
 1019              	.L60:
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1020              		.loc 1 445 0
 1021 004c 0368     		ldr	r3, [r0]
 1022 004e 9B68     		ldr	r3, [r3, #8]
 1023 0050 5B06     		lsl	r3, r3, #25
 1024 0052 01D4     		bmi	.L63
 453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 1025              		.loc 1 453 0
 1026 0054 0023     		mov	r3, #0
 1027 0056 EB70     		strb	r3, [r5, #3]
 1028              	.L63:
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8U) | \
 1029              		.loc 1 458 0
 1030 0058 2E78     		ldrb	r6, [r5]
 1031 005a 3604     		lsl	r6, r6, #16
 459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sTime->Seconds) | \
 1032              		.loc 1 459 0
 1033 005c 6B78     		ldrb	r3, [r5, #1]
 1034 005e 1B02     		lsl	r3, r3, #8
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8U) | \
 1035              		.loc 1 458 0
 1036 0060 1E43     		orr	r6, r3
 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sTime->TimeFormat) << 16U));
 1037              		.loc 1 460 0
 1038 0062 A878     		ldrb	r0, [r5, #2]
 1039              	.LVL82:
 459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sTime->Seconds) | \
 1040              		.loc 1 459 0
 1041 0064 0643     		orr	r6, r0
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
ARM GAS  /tmp/ccVvgfEi.s 			page 47


 1042              		.loc 1 461 0
 1043 0066 EB78     		ldrb	r3, [r5, #3]
 1044 0068 1B04     		lsl	r3, r3, #16
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8U) | \
 1045              		.loc 1 458 0
 1046 006a 1E43     		orr	r6, r3
 1047              	.LVL83:
 1048              	.L62:
 465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1049              		.loc 1 465 0
 1050 006c 2368     		ldr	r3, [r4]
 1051 006e CA22     		mov	r2, #202
 1052 0070 5A62     		str	r2, [r3, #36]
 1053 0072 2368     		ldr	r3, [r4]
 1054 0074 773A     		sub	r2, r2, #119
 1055 0076 5A62     		str	r2, [r3, #36]
 468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 1056              		.loc 1 468 0
 1057 0078 201C     		mov	r0, r4
 1058 007a FFF7FEFF 		bl	RTC_EnterInitMode
 1059              	.LVL84:
 1060 007e 071E     		sub	r7, r0, #0
 1061 0080 0AD0     		beq	.L64
 471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1062              		.loc 1 471 0
 1063 0082 2368     		ldr	r3, [r4]
 1064 0084 FF22     		mov	r2, #255
 1065 0086 5A62     		str	r2, [r3, #36]
 474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1066              		.loc 1 474 0
 1067 0088 FB3A     		sub	r2, r2, #251
 1068 008a 2123     		mov	r3, #33
 1069 008c E254     		strb	r2, [r4, r3]
 477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1070              		.loc 1 477 0
 1071 008e 0022     		mov	r2, #0
 1072 0090 013B     		sub	r3, r3, #1
 1073 0092 E254     		strb	r2, [r4, r3]
 479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1074              		.loc 1 479 0
 1075 0094 0127     		mov	r7, #1
 1076 0096 33E0     		b	.L59
 1077              	.L64:
 484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1078              		.loc 1 484 0
 1079 0098 2368     		ldr	r3, [r4]
 1080 009a 1A48     		ldr	r0, .L67
 1081 009c 0640     		and	r6, r0
 1082              	.LVL85:
 1083 009e 1E60     		str	r6, [r3]
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1084              		.loc 1 487 0
 1085 00a0 2268     		ldr	r2, [r4]
 1086 00a2 9168     		ldr	r1, [r2, #8]
 1087 00a4 184B     		ldr	r3, .L67+4
 1088 00a6 0B40     		and	r3, r1
 1089 00a8 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccVvgfEi.s 			page 48


 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1090              		.loc 1 490 0
 1091 00aa 2168     		ldr	r1, [r4]
 1092 00ac 8868     		ldr	r0, [r1, #8]
 1093 00ae EB68     		ldr	r3, [r5, #12]
 1094 00b0 2A69     		ldr	r2, [r5, #16]
 1095 00b2 1343     		orr	r3, r2
 1096 00b4 0343     		orr	r3, r0
 1097 00b6 8B60     		str	r3, [r1, #8]
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1098              		.loc 1 493 0
 1099 00b8 2268     		ldr	r2, [r4]
 1100 00ba D368     		ldr	r3, [r2, #12]
 1101 00bc 8021     		mov	r1, #128
 1102 00be 8B43     		bic	r3, r1
 1103 00c0 D360     		str	r3, [r2, #12]
 496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1104              		.loc 1 496 0
 1105 00c2 2368     		ldr	r3, [r4]
 1106 00c4 9B68     		ldr	r3, [r3, #8]
 1107 00c6 9B06     		lsl	r3, r3, #26
 1108 00c8 0FD4     		bmi	.L65
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 1109              		.loc 1 498 0
 1110 00ca 201C     		mov	r0, r4
 1111 00cc FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 1112              	.LVL86:
 1113 00d0 0028     		cmp	r0, #0
 1114 00d2 0AD0     		beq	.L65
 501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1115              		.loc 1 501 0
 1116 00d4 2368     		ldr	r3, [r4]
 1117 00d6 FF22     		mov	r2, #255
 1118 00d8 5A62     		str	r2, [r3, #36]
 503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1119              		.loc 1 503 0
 1120 00da FB3A     		sub	r2, r2, #251
 1121 00dc 2123     		mov	r3, #33
 1122 00de E254     		strb	r2, [r4, r3]
 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1123              		.loc 1 506 0
 1124 00e0 0022     		mov	r2, #0
 1125 00e2 013B     		sub	r3, r3, #1
 1126 00e4 E254     		strb	r2, [r4, r3]
 508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 1127              		.loc 1 508 0
 1128 00e6 0127     		mov	r7, #1
 1129 00e8 0AE0     		b	.L59
 1130              	.L65:
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     
 1131              		.loc 1 513 0
 1132 00ea 2368     		ldr	r3, [r4]
 1133 00ec FF22     		mov	r2, #255
 1134 00ee 5A62     		str	r2, [r3, #36]
 515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1135              		.loc 1 515 0
 1136 00f0 FE3A     		sub	r2, r2, #254
ARM GAS  /tmp/ccVvgfEi.s 			page 49


 1137 00f2 2123     		mov	r3, #33
 1138 00f4 E254     		strb	r2, [r4, r3]
 517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1139              		.loc 1 517 0
 1140 00f6 0022     		mov	r2, #0
 1141 00f8 013B     		sub	r3, r3, #1
 1142 00fa E254     		strb	r2, [r4, r3]
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1143              		.loc 1 519 0
 1144 00fc 00E0     		b	.L59
 1145              	.LVL87:
 1146              	.L66:
 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1147              		.loc 1 419 0
 1148 00fe 0227     		mov	r7, #2
 1149              	.LVL88:
 1150              	.L59:
 521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1151              		.loc 1 521 0
 1152 0100 381C     		mov	r0, r7
 1153              		@ sp needed
 1154 0102 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1155              	.L68:
 1156              		.align	2
 1157              	.L67:
 1158 0104 7F7F7F00 		.word	8355711
 1159 0108 FFFFFBFF 		.word	-262145
 1160              		.cfi_endproc
 1161              	.LFE40:
 1163              		.section	.text.HAL_RTC_SetDate,"ax",%progbits
 1164              		.align	2
 1165              		.global	HAL_RTC_SetDate
 1166              		.code	16
 1167              		.thumb_func
 1169              	HAL_RTC_SetDate:
 1170              	.LFB42:
 589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t datetmpreg = 0U;
 1171              		.loc 1 589 0
 1172              		.cfi_startproc
 1173              	.LVL89:
 1174 0000 70B5     		push	{r4, r5, r6, lr}
 1175              	.LCFI8:
 1176              		.cfi_def_cfa_offset 16
 1177              		.cfi_offset 4, -16
 1178              		.cfi_offset 5, -12
 1179              		.cfi_offset 6, -8
 1180              		.cfi_offset 14, -4
 1181              	.LVL90:
 596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1182              		.loc 1 596 0
 1183 0002 2023     		mov	r3, #32
 1184 0004 C35C     		ldrb	r3, [r0, r3]
 1185 0006 012B     		cmp	r3, #1
 1186 0008 6AD0     		beq	.L76
 596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1187              		.loc 1 596 0 is_stmt 0 discriminator 2
 1188 000a 0124     		mov	r4, #1
ARM GAS  /tmp/ccVvgfEi.s 			page 50


 1189 000c 2023     		mov	r3, #32
 1190 000e C454     		strb	r4, [r0, r3]
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1191              		.loc 1 598 0 is_stmt 1 discriminator 2
 1192 0010 0134     		add	r4, r4, #1
 1193 0012 0133     		add	r3, r3, #1
 1194 0014 C454     		strb	r4, [r0, r3]
 600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 1195              		.loc 1 600 0 discriminator 2
 1196 0016 002A     		cmp	r2, #0
 1197 0018 06D1     		bne	.L71
 600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 1198              		.loc 1 600 0 is_stmt 0 discriminator 1
 1199 001a 4B78     		ldrb	r3, [r1, #1]
 1200 001c DC06     		lsl	r4, r3, #27
 1201 001e 03D5     		bpl	.L71
 602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1202              		.loc 1 602 0 is_stmt 1
 1203 0020 1024     		mov	r4, #16
 1204 0022 A343     		bic	r3, r4
 1205 0024 0A33     		add	r3, r3, #10
 1206 0026 4B70     		strb	r3, [r1, #1]
 1207              	.L71:
 1208 0028 0D1C     		mov	r5, r1
 1209 002a 041C     		mov	r4, r0
 607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 1210              		.loc 1 607 0
 1211 002c 002A     		cmp	r2, #0
 1212 002e 10D1     		bne	.L72
 613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 1213              		.loc 1 613 0
 1214 0030 C878     		ldrb	r0, [r1, #3]
 1215              	.LVL91:
 1216 0032 FFF7FEFF 		bl	RTC_ByteToBcd2
 1217              	.LVL92:
 1218 0036 0604     		lsl	r6, r0, #16
 614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 1219              		.loc 1 614 0
 1220 0038 6878     		ldrb	r0, [r5, #1]
 1221 003a FFF7FEFF 		bl	RTC_ByteToBcd2
 1222              	.LVL93:
 1223 003e 0002     		lsl	r0, r0, #8
 613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 1224              		.loc 1 613 0
 1225 0040 0643     		orr	r6, r0
 615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ((uint32_t)sDate->WeekDay << 13U));
 1226              		.loc 1 615 0
 1227 0042 A878     		ldrb	r0, [r5, #2]
 1228 0044 FFF7FEFF 		bl	RTC_ByteToBcd2
 1229              	.LVL94:
 614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 1230              		.loc 1 614 0
 1231 0048 0643     		orr	r6, r0
 616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1232              		.loc 1 616 0
 1233 004a 2B78     		ldrb	r3, [r5]
 1234 004c 5B03     		lsl	r3, r3, #13
ARM GAS  /tmp/ccVvgfEi.s 			page 51


 613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 1235              		.loc 1 613 0
 1236 004e 1E43     		orr	r6, r3
 1237              	.LVL95:
 1238 0050 09E0     		b	.L73
 1239              	.LVL96:
 1240              	.L72:
 626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8U) | \
 1241              		.loc 1 626 0
 1242 0052 CE78     		ldrb	r6, [r1, #3]
 1243 0054 3604     		lsl	r6, r6, #16
 627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   ((uint32_t)sDate->Date) | \
 1244              		.loc 1 627 0
 1245 0056 4B78     		ldrb	r3, [r1, #1]
 1246 0058 1B02     		lsl	r3, r3, #8
 626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8U) | \
 1247              		.loc 1 626 0
 1248 005a 1E43     		orr	r6, r3
 628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   (((uint32_t)sDate->WeekDay) << 13U));
 1249              		.loc 1 628 0
 1250 005c 8878     		ldrb	r0, [r1, #2]
 1251              	.LVL97:
 627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   ((uint32_t)sDate->Date) | \
 1252              		.loc 1 627 0
 1253 005e 0643     		orr	r6, r0
 629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1254              		.loc 1 629 0
 1255 0060 0B78     		ldrb	r3, [r1]
 1256 0062 5B03     		lsl	r3, r3, #13
 626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8U) | \
 1257              		.loc 1 626 0
 1258 0064 1E43     		orr	r6, r3
 1259              	.LVL98:
 1260              	.L73:
 633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1261              		.loc 1 633 0
 1262 0066 2368     		ldr	r3, [r4]
 1263 0068 CA22     		mov	r2, #202
 1264 006a 5A62     		str	r2, [r3, #36]
 1265 006c 2368     		ldr	r3, [r4]
 1266 006e 773A     		sub	r2, r2, #119
 1267 0070 5A62     		str	r2, [r3, #36]
 636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 1268              		.loc 1 636 0
 1269 0072 201C     		mov	r0, r4
 1270 0074 FFF7FEFF 		bl	RTC_EnterInitMode
 1271              	.LVL99:
 1272 0078 051E     		sub	r5, r0, #0
 1273              	.LVL100:
 1274 007a 0AD0     		beq	.L74
 639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1275              		.loc 1 639 0
 1276 007c 2368     		ldr	r3, [r4]
 1277 007e FF22     		mov	r2, #255
 1278 0080 5A62     		str	r2, [r3, #36]
 642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1279              		.loc 1 642 0
ARM GAS  /tmp/ccVvgfEi.s 			page 52


 1280 0082 FB3A     		sub	r2, r2, #251
 1281 0084 2123     		mov	r3, #33
 1282 0086 E254     		strb	r2, [r4, r3]
 645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1283              		.loc 1 645 0
 1284 0088 0022     		mov	r2, #0
 1285 008a 013B     		sub	r3, r3, #1
 1286 008c E254     		strb	r2, [r4, r3]
 647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1287              		.loc 1 647 0
 1288 008e 0125     		mov	r5, #1
 1289 0090 27E0     		b	.L70
 1290              	.L74:
 652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1291              		.loc 1 652 0
 1292 0092 2368     		ldr	r3, [r4]
 1293 0094 1448     		ldr	r0, .L77
 1294 0096 0640     		and	r6, r0
 1295              	.LVL101:
 1296 0098 5E60     		str	r6, [r3, #4]
 655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1297              		.loc 1 655 0
 1298 009a 2268     		ldr	r2, [r4]
 1299 009c D368     		ldr	r3, [r2, #12]
 1300 009e 8021     		mov	r1, #128
 1301 00a0 8B43     		bic	r3, r1
 1302 00a2 D360     		str	r3, [r2, #12]
 658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1303              		.loc 1 658 0
 1304 00a4 2368     		ldr	r3, [r4]
 1305 00a6 9B68     		ldr	r3, [r3, #8]
 1306 00a8 9B06     		lsl	r3, r3, #26
 1307 00aa 0FD4     		bmi	.L75
 660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 1308              		.loc 1 660 0
 1309 00ac 201C     		mov	r0, r4
 1310 00ae FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 1311              	.LVL102:
 1312 00b2 0028     		cmp	r0, #0
 1313 00b4 0AD0     		beq	.L75
 663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1314              		.loc 1 663 0
 1315 00b6 2368     		ldr	r3, [r4]
 1316 00b8 FF22     		mov	r2, #255
 1317 00ba 5A62     		str	r2, [r3, #36]
 665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1318              		.loc 1 665 0
 1319 00bc FB3A     		sub	r2, r2, #251
 1320 00be 2123     		mov	r3, #33
 1321 00c0 E254     		strb	r2, [r4, r3]
 668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1322              		.loc 1 668 0
 1323 00c2 0022     		mov	r2, #0
 1324 00c4 013B     		sub	r3, r3, #1
 1325 00c6 E254     		strb	r2, [r4, r3]
 670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 1326              		.loc 1 670 0
ARM GAS  /tmp/ccVvgfEi.s 			page 53


 1327 00c8 0125     		mov	r5, #1
 1328 00ca 0AE0     		b	.L70
 1329              	.L75:
 675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1330              		.loc 1 675 0
 1331 00cc 2368     		ldr	r3, [r4]
 1332 00ce FF22     		mov	r2, #255
 1333 00d0 5A62     		str	r2, [r3, #36]
 677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1334              		.loc 1 677 0
 1335 00d2 FE3A     		sub	r2, r2, #254
 1336 00d4 2123     		mov	r3, #33
 1337 00d6 E254     		strb	r2, [r4, r3]
 680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1338              		.loc 1 680 0
 1339 00d8 0022     		mov	r2, #0
 1340 00da 013B     		sub	r3, r3, #1
 1341 00dc E254     		strb	r2, [r4, r3]
 682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1342              		.loc 1 682 0
 1343 00de 00E0     		b	.L70
 1344              	.LVL103:
 1345              	.L76:
 596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1346              		.loc 1 596 0
 1347 00e0 0225     		mov	r5, #2
 1348              	.LVL104:
 1349              	.L70:
 684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1350              		.loc 1 684 0
 1351 00e2 281C     		mov	r0, r5
 1352              		@ sp needed
 1353 00e4 70BD     		pop	{r4, r5, r6, pc}
 1354              	.L78:
 1355 00e6 C046     		.align	2
 1356              	.L77:
 1357 00e8 3FFFFF00 		.word	16777023
 1358              		.cfi_endproc
 1359              	.LFE42:
 1361              		.section	.text.HAL_RTC_SetAlarm,"ax",%progbits
 1362              		.align	2
 1363              		.global	HAL_RTC_SetAlarm
 1364              		.code	16
 1365              		.thumb_func
 1367              	HAL_RTC_SetAlarm:
 1368              	.LFB44:
 754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 1369              		.loc 1 754 0
 1370              		.cfi_startproc
 1371              	.LVL105:
 1372 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1373              	.LCFI9:
 1374              		.cfi_def_cfa_offset 24
 1375              		.cfi_offset 3, -24
 1376              		.cfi_offset 4, -20
 1377              		.cfi_offset 5, -16
 1378              		.cfi_offset 6, -12
ARM GAS  /tmp/ccVvgfEi.s 			page 54


 1379              		.cfi_offset 7, -8
 1380              		.cfi_offset 14, -4
 1381              	.LVL106:
 767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1382              		.loc 1 767 0
 1383 0002 2023     		mov	r3, #32
 1384 0004 C35C     		ldrb	r3, [r0, r3]
 1385 0006 012B     		cmp	r3, #1
 1386 0008 00D1     		bne	.LCB1316
 1387 000a B6E0     		b	.L91	@long jump
 1388              	.LCB1316:
 1389 000c 0D1C     		mov	r5, r1
 1390 000e 041C     		mov	r4, r0
 767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1391              		.loc 1 767 0 is_stmt 0 discriminator 2
 1392 0010 0121     		mov	r1, #1
 1393              	.LVL107:
 1394 0012 2023     		mov	r3, #32
 1395 0014 C154     		strb	r1, [r0, r3]
 769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1396              		.loc 1 769 0 is_stmt 1 discriminator 2
 1397 0016 0131     		add	r1, r1, #1
 1398 0018 0133     		add	r3, r3, #1
 1399 001a C154     		strb	r1, [r0, r3]
 771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 1400              		.loc 1 771 0 discriminator 2
 1401 001c 002A     		cmp	r2, #0
 1402 001e 20D1     		bne	.L81
 773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1403              		.loc 1 773 0
 1404 0020 0368     		ldr	r3, [r0]
 1405 0022 9B68     		ldr	r3, [r3, #8]
 1406 0024 5B06     		lsl	r3, r3, #25
 1407 0026 01D4     		bmi	.L82
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 1408              		.loc 1 780 0
 1409 0028 0023     		mov	r3, #0
 1410 002a EB70     		strb	r3, [r5, #3]
 1411              	.L82:
 795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1412              		.loc 1 795 0
 1413 002c 2878     		ldrb	r0, [r5]
 1414              	.LVL108:
 1415 002e FFF7FEFF 		bl	RTC_ByteToBcd2
 1416              	.LVL109:
 1417 0032 0704     		lsl	r7, r0, #16
 796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1418              		.loc 1 796 0
 1419 0034 6878     		ldrb	r0, [r5, #1]
 1420 0036 FFF7FEFF 		bl	RTC_ByteToBcd2
 1421              	.LVL110:
 1422 003a 0002     		lsl	r0, r0, #8
 795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1423              		.loc 1 795 0
 1424 003c 0743     		orr	r7, r0
 797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1425              		.loc 1 797 0
ARM GAS  /tmp/ccVvgfEi.s 			page 55


 1426 003e A878     		ldrb	r0, [r5, #2]
 1427 0040 FFF7FEFF 		bl	RTC_ByteToBcd2
 1428              	.LVL111:
 796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1429              		.loc 1 796 0
 1430 0044 0743     		orr	r7, r0
 798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 1431              		.loc 1 798 0
 1432 0046 EB78     		ldrb	r3, [r5, #3]
 1433 0048 1B04     		lsl	r3, r3, #16
 797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1434              		.loc 1 797 0
 1435 004a 1F43     		orr	r7, r3
 799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1436              		.loc 1 799 0
 1437 004c 2023     		mov	r3, #32
 1438 004e E85C     		ldrb	r0, [r5, r3]
 1439 0050 FFF7FEFF 		bl	RTC_ByteToBcd2
 1440              	.LVL112:
 1441 0054 0006     		lsl	r0, r0, #24
 798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 1442              		.loc 1 798 0
 1443 0056 0743     		orr	r7, r0
 799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1444              		.loc 1 799 0
 1445 0058 EB69     		ldr	r3, [r5, #28]
 1446 005a 1F43     		orr	r7, r3
 795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1447              		.loc 1 795 0
 1448 005c 6B69     		ldr	r3, [r5, #20]
 1449 005e 1F43     		orr	r7, r3
 1450              	.LVL113:
 1451 0060 17E0     		b	.L83
 1452              	.LVL114:
 1453              	.L81:
 805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1454              		.loc 1 805 0
 1455 0062 0368     		ldr	r3, [r0]
 1456 0064 9B68     		ldr	r3, [r3, #8]
 1457 0066 5B06     		lsl	r3, r3, #25
 1458 0068 01D4     		bmi	.L84
 813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 1459              		.loc 1 813 0
 1460 006a 0023     		mov	r3, #0
 1461 006c EB70     		strb	r3, [r5, #3]
 1462              	.L84:
 831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1463              		.loc 1 831 0
 1464 006e 2F78     		ldrb	r7, [r5]
 1465 0070 3F04     		lsl	r7, r7, #16
 832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 1466              		.loc 1 832 0
 1467 0072 6B78     		ldrb	r3, [r5, #1]
 1468 0074 1B02     		lsl	r3, r3, #8
 831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1469              		.loc 1 831 0
 1470 0076 1F43     		orr	r7, r3
ARM GAS  /tmp/ccVvgfEi.s 			page 56


 833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1471              		.loc 1 833 0
 1472 0078 AB78     		ldrb	r3, [r5, #2]
 832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 1473              		.loc 1 832 0
 1474 007a 1F43     		orr	r7, r3
 834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 1475              		.loc 1 834 0
 1476 007c EB78     		ldrb	r3, [r5, #3]
 1477 007e 1B04     		lsl	r3, r3, #16
 833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1478              		.loc 1 833 0
 1479 0080 1F43     		orr	r7, r3
 835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1480              		.loc 1 835 0
 1481 0082 2023     		mov	r3, #32
 1482 0084 EB5C     		ldrb	r3, [r5, r3]
 1483 0086 1B06     		lsl	r3, r3, #24
 834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 1484              		.loc 1 834 0
 1485 0088 1F43     		orr	r7, r3
 835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1486              		.loc 1 835 0
 1487 008a EB69     		ldr	r3, [r5, #28]
 1488 008c 1F43     		orr	r7, r3
 831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1489              		.loc 1 831 0
 1490 008e 6B69     		ldr	r3, [r5, #20]
 1491 0090 1F43     		orr	r7, r3
 1492              	.LVL115:
 1493              	.L83:
 841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1494              		.loc 1 841 0
 1495 0092 6E68     		ldr	r6, [r5, #4]
 1496 0094 AB69     		ldr	r3, [r5, #24]
 1497 0096 1E43     		orr	r6, r3
 1498              	.LVL116:
 844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1499              		.loc 1 844 0
 1500 0098 2368     		ldr	r3, [r4]
 1501 009a CA22     		mov	r2, #202
 1502 009c 5A62     		str	r2, [r3, #36]
 1503 009e 2368     		ldr	r3, [r4]
 1504 00a0 773A     		sub	r2, r2, #119
 1505 00a2 5A62     		str	r2, [r3, #36]
 847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 1506              		.loc 1 847 0
 1507 00a4 6A6A     		ldr	r2, [r5, #36]
 1508 00a6 8023     		mov	r3, #128
 1509 00a8 5B00     		lsl	r3, r3, #1
 1510 00aa 9A42     		cmp	r2, r3
 1511 00ac 2DD1     		bne	.L85
 850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1512              		.loc 1 850 0
 1513 00ae 2268     		ldr	r2, [r4]
 1514 00b0 9168     		ldr	r1, [r2, #8]
 1515 00b2 334B     		ldr	r3, .L92
ARM GAS  /tmp/ccVvgfEi.s 			page 57


 1516 00b4 0B40     		and	r3, r1
 1517 00b6 9360     		str	r3, [r2, #8]
 853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1518              		.loc 1 853 0
 1519 00b8 2268     		ldr	r2, [r4]
 1520 00ba 9168     		ldr	r1, [r2, #8]
 1521 00bc 314B     		ldr	r3, .L92+4
 1522 00be 0B40     		and	r3, r1
 1523 00c0 9360     		str	r3, [r2, #8]
 855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 1524              		.loc 1 855 0
 1525 00c2 FFF7FEFF 		bl	HAL_GetTick
 1526              	.LVL117:
 1527 00c6 051C     		mov	r5, r0
 1528              	.LVL118:
 857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1529              		.loc 1 857 0
 1530 00c8 11E0     		b	.L86
 1531              	.LVL119:
 1532              	.L87:
 859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 1533              		.loc 1 859 0
 1534 00ca FFF7FEFF 		bl	HAL_GetTick
 1535              	.LVL120:
 1536 00ce 401B     		sub	r0, r0, r5
 1537 00d0 FA23     		mov	r3, #250
 1538 00d2 9B00     		lsl	r3, r3, #2
 1539 00d4 9842     		cmp	r0, r3
 1540 00d6 0AD9     		bls	.L86
 862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         
 1541              		.loc 1 862 0
 1542 00d8 2368     		ldr	r3, [r4]
 1543 00da FF22     		mov	r2, #255
 1544 00dc 5A62     		str	r2, [r3, #36]
 864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1545              		.loc 1 864 0
 1546 00de FC3A     		sub	r2, r2, #252
 1547 00e0 2123     		mov	r3, #33
 1548 00e2 E254     		strb	r2, [r4, r3]
 867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1549              		.loc 1 867 0
 1550 00e4 0022     		mov	r2, #0
 1551 00e6 013B     		sub	r3, r3, #1
 1552 00e8 E254     		strb	r2, [r4, r3]
 869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 1553              		.loc 1 869 0
 1554 00ea 0320     		mov	r0, #3
 1555 00ec 46E0     		b	.L80
 1556              	.L86:
 857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1557              		.loc 1 857 0
 1558 00ee 2368     		ldr	r3, [r4]
 1559 00f0 DA68     		ldr	r2, [r3, #12]
 1560 00f2 D207     		lsl	r2, r2, #31
 1561 00f4 E9D5     		bpl	.L87
 873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
 1562              		.loc 1 873 0
ARM GAS  /tmp/ccVvgfEi.s 			page 58


 1563 00f6 DF61     		str	r7, [r3, #28]
 875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1564              		.loc 1 875 0
 1565 00f8 2368     		ldr	r3, [r4]
 1566 00fa 5E64     		str	r6, [r3, #68]
 877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1567              		.loc 1 877 0
 1568 00fc 2268     		ldr	r2, [r4]
 1569 00fe 9368     		ldr	r3, [r2, #8]
 1570 0100 8021     		mov	r1, #128
 1571 0102 4900     		lsl	r1, r1, #1
 1572 0104 0B43     		orr	r3, r1
 1573 0106 9360     		str	r3, [r2, #8]
 1574 0108 2CE0     		b	.L88
 1575              	.LVL121:
 1576              	.L85:
 882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1577              		.loc 1 882 0
 1578 010a 2268     		ldr	r2, [r4]
 1579 010c 9168     		ldr	r1, [r2, #8]
 1580 010e 1E4B     		ldr	r3, .L92+8
 1581 0110 0B40     		and	r3, r1
 1582 0112 9360     		str	r3, [r2, #8]
 885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1583              		.loc 1 885 0
 1584 0114 2268     		ldr	r2, [r4]
 1585 0116 9168     		ldr	r1, [r2, #8]
 1586 0118 1C4B     		ldr	r3, .L92+12
 1587 011a 0B40     		and	r3, r1
 1588 011c 9360     		str	r3, [r2, #8]
 887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
 1589              		.loc 1 887 0
 1590 011e FFF7FEFF 		bl	HAL_GetTick
 1591              	.LVL122:
 1592 0122 051C     		mov	r5, r0
 1593              	.LVL123:
 889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1594              		.loc 1 889 0
 1595 0124 11E0     		b	.L89
 1596              	.LVL124:
 1597              	.L90:
 891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 1598              		.loc 1 891 0
 1599 0126 FFF7FEFF 		bl	HAL_GetTick
 1600              	.LVL125:
 1601 012a 401B     		sub	r0, r0, r5
 1602 012c FA23     		mov	r3, #250
 1603 012e 9B00     		lsl	r3, r3, #2
 1604 0130 9842     		cmp	r0, r3
 1605 0132 0AD9     		bls	.L89
 894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1606              		.loc 1 894 0
 1607 0134 2368     		ldr	r3, [r4]
 1608 0136 FF22     		mov	r2, #255
 1609 0138 5A62     		str	r2, [r3, #36]
 896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1610              		.loc 1 896 0
ARM GAS  /tmp/ccVvgfEi.s 			page 59


 1611 013a FC3A     		sub	r2, r2, #252
 1612 013c 2123     		mov	r3, #33
 1613 013e E254     		strb	r2, [r4, r3]
 899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1614              		.loc 1 899 0
 1615 0140 0022     		mov	r2, #0
 1616 0142 013B     		sub	r3, r3, #1
 1617 0144 E254     		strb	r2, [r4, r3]
 901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 1618              		.loc 1 901 0
 1619 0146 0320     		mov	r0, #3
 1620 0148 18E0     		b	.L80
 1621              	.L89:
 889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1622              		.loc 1 889 0
 1623 014a 2368     		ldr	r3, [r4]
 1624 014c DA68     		ldr	r2, [r3, #12]
 1625 014e 9207     		lsl	r2, r2, #30
 1626 0150 E9D5     		bpl	.L90
 905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 1627              		.loc 1 905 0
 1628 0152 1F62     		str	r7, [r3, #32]
 907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1629              		.loc 1 907 0
 1630 0154 2368     		ldr	r3, [r4]
 1631 0156 9E64     		str	r6, [r3, #72]
 909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1632              		.loc 1 909 0
 1633 0158 2268     		ldr	r2, [r4]
 1634 015a 9368     		ldr	r3, [r2, #8]
 1635 015c 8021     		mov	r1, #128
 1636 015e 8900     		lsl	r1, r1, #2
 1637 0160 0B43     		orr	r3, r1
 1638 0162 9360     		str	r3, [r2, #8]
 1639              	.L88:
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1640              		.loc 1 913 0
 1641 0164 2368     		ldr	r3, [r4]
 1642 0166 FF22     		mov	r2, #255
 1643 0168 5A62     		str	r2, [r3, #36]
 916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1644              		.loc 1 916 0
 1645 016a FE3A     		sub	r2, r2, #254
 1646 016c 2123     		mov	r3, #33
 1647 016e E254     		strb	r2, [r4, r3]
 919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1648              		.loc 1 919 0
 1649 0170 0022     		mov	r2, #0
 1650 0172 013B     		sub	r3, r3, #1
 1651 0174 E254     		strb	r2, [r4, r3]
 921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 1652              		.loc 1 921 0
 1653 0176 0020     		mov	r0, #0
 1654 0178 00E0     		b	.L80
 1655              	.LVL126:
 1656              	.L91:
 767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
ARM GAS  /tmp/ccVvgfEi.s 			page 60


 1657              		.loc 1 767 0
 1658 017a 0220     		mov	r0, #2
 1659              	.LVL127:
 1660              	.L80:
 922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1661              		.loc 1 922 0
 1662              		@ sp needed
 1663 017c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1664              	.L93:
 1665 017e C046     		.align	2
 1666              	.L92:
 1667 0180 FFFEFFFF 		.word	-257
 1668 0184 FFEFFFFF 		.word	-4097
 1669 0188 FFFDFFFF 		.word	-513
 1670 018c FFDFFFFF 		.word	-8193
 1671              		.cfi_endproc
 1672              	.LFE44:
 1674              		.section	.text.HAL_RTC_SetAlarm_IT,"ax",%progbits
 1675              		.align	2
 1676              		.global	HAL_RTC_SetAlarm_IT
 1677              		.code	16
 1678              		.thumb_func
 1680              	HAL_RTC_SetAlarm_IT:
 1681              	.LFB45:
 938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 1682              		.loc 1 938 0
 1683              		.cfi_startproc
 1684              	.LVL128:
 1685 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1686              	.LCFI10:
 1687              		.cfi_def_cfa_offset 24
 1688              		.cfi_offset 3, -24
 1689              		.cfi_offset 4, -20
 1690              		.cfi_offset 5, -16
 1691              		.cfi_offset 6, -12
 1692              		.cfi_offset 7, -8
 1693              		.cfi_offset 14, -4
 1694              	.LVL129:
 951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1695              		.loc 1 951 0
 1696 0002 2023     		mov	r3, #32
 1697 0004 C35C     		ldrb	r3, [r0, r3]
 1698 0006 012B     		cmp	r3, #1
 1699 0008 00D1     		bne	.LCB1637
 1700 000a CFE0     		b	.L106	@long jump
 1701              	.LCB1637:
 1702 000c 0D1C     		mov	r5, r1
 1703 000e 041C     		mov	r4, r0
 951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1704              		.loc 1 951 0 is_stmt 0 discriminator 2
 1705 0010 0121     		mov	r1, #1
 1706              	.LVL130:
 1707 0012 2023     		mov	r3, #32
 1708 0014 C154     		strb	r1, [r0, r3]
 953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1709              		.loc 1 953 0 is_stmt 1 discriminator 2
 1710 0016 0131     		add	r1, r1, #1
ARM GAS  /tmp/ccVvgfEi.s 			page 61


 1711 0018 0133     		add	r3, r3, #1
 1712 001a C154     		strb	r1, [r0, r3]
 955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 1713              		.loc 1 955 0 discriminator 2
 1714 001c 002A     		cmp	r2, #0
 1715 001e 20D1     		bne	.L96
 957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1716              		.loc 1 957 0
 1717 0020 0368     		ldr	r3, [r0]
 1718 0022 9B68     		ldr	r3, [r3, #8]
 1719 0024 5B06     		lsl	r3, r3, #25
 1720 0026 01D4     		bmi	.L97
 964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 1721              		.loc 1 964 0
 1722 0028 0023     		mov	r3, #0
 1723 002a EB70     		strb	r3, [r5, #3]
 1724              	.L97:
 978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1725              		.loc 1 978 0
 1726 002c 2878     		ldrb	r0, [r5]
 1727              	.LVL131:
 1728 002e FFF7FEFF 		bl	RTC_ByteToBcd2
 1729              	.LVL132:
 1730 0032 0704     		lsl	r7, r0, #16
 979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1731              		.loc 1 979 0
 1732 0034 6878     		ldrb	r0, [r5, #1]
 1733 0036 FFF7FEFF 		bl	RTC_ByteToBcd2
 1734              	.LVL133:
 1735 003a 0002     		lsl	r0, r0, #8
 978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1736              		.loc 1 978 0
 1737 003c 0743     		orr	r7, r0
 980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1738              		.loc 1 980 0
 1739 003e A878     		ldrb	r0, [r5, #2]
 1740 0040 FFF7FEFF 		bl	RTC_ByteToBcd2
 1741              	.LVL134:
 979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1742              		.loc 1 979 0
 1743 0044 0743     		orr	r7, r0
 981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 1744              		.loc 1 981 0
 1745 0046 EB78     		ldrb	r3, [r5, #3]
 1746 0048 1B04     		lsl	r3, r3, #16
 980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1747              		.loc 1 980 0
 1748 004a 1F43     		orr	r7, r3
 982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1749              		.loc 1 982 0
 1750 004c 2023     		mov	r3, #32
 1751 004e E85C     		ldrb	r0, [r5, r3]
 1752 0050 FFF7FEFF 		bl	RTC_ByteToBcd2
 1753              	.LVL135:
 1754 0054 0006     		lsl	r0, r0, #24
 981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 1755              		.loc 1 981 0
ARM GAS  /tmp/ccVvgfEi.s 			page 62


 1756 0056 0743     		orr	r7, r0
 982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1757              		.loc 1 982 0
 1758 0058 EB69     		ldr	r3, [r5, #28]
 1759 005a 1F43     		orr	r7, r3
 978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1760              		.loc 1 978 0
 1761 005c 6B69     		ldr	r3, [r5, #20]
 1762 005e 1F43     		orr	r7, r3
 1763              	.LVL136:
 1764 0060 17E0     		b	.L98
 1765              	.LVL137:
 1766              	.L96:
 988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1767              		.loc 1 988 0
 1768 0062 0368     		ldr	r3, [r0]
 1769 0064 9B68     		ldr	r3, [r3, #8]
 1770 0066 5B06     		lsl	r3, r3, #25
 1771 0068 01D4     		bmi	.L99
 996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 1772              		.loc 1 996 0
 1773 006a 0023     		mov	r3, #0
 1774 006c EB70     		strb	r3, [r5, #3]
 1775              	.L99:
1013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1776              		.loc 1 1013 0
 1777 006e 2F78     		ldrb	r7, [r5]
 1778 0070 3F04     		lsl	r7, r7, #16
1014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 1779              		.loc 1 1014 0
 1780 0072 6B78     		ldrb	r3, [r5, #1]
 1781 0074 1B02     		lsl	r3, r3, #8
1013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1782              		.loc 1 1013 0
 1783 0076 1F43     		orr	r7, r3
1015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1784              		.loc 1 1015 0
 1785 0078 AB78     		ldrb	r3, [r5, #2]
1014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 1786              		.loc 1 1014 0
 1787 007a 1F43     		orr	r7, r3
1016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 1788              		.loc 1 1016 0
 1789 007c EB78     		ldrb	r3, [r5, #3]
 1790 007e 1B04     		lsl	r3, r3, #16
1015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1791              		.loc 1 1015 0
 1792 0080 1F43     		orr	r7, r3
1017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1793              		.loc 1 1017 0
 1794 0082 2023     		mov	r3, #32
 1795 0084 EB5C     		ldrb	r3, [r5, r3]
 1796 0086 1B06     		lsl	r3, r3, #24
1016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 1797              		.loc 1 1016 0
 1798 0088 1F43     		orr	r7, r3
1017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
ARM GAS  /tmp/ccVvgfEi.s 			page 63


 1799              		.loc 1 1017 0
 1800 008a EB69     		ldr	r3, [r5, #28]
 1801 008c 1F43     		orr	r7, r3
1013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1802              		.loc 1 1013 0
 1803 008e 6B69     		ldr	r3, [r5, #20]
 1804 0090 1F43     		orr	r7, r3
 1805              	.LVL138:
 1806              	.L98:
1022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1807              		.loc 1 1022 0
 1808 0092 6E68     		ldr	r6, [r5, #4]
 1809 0094 AB69     		ldr	r3, [r5, #24]
 1810 0096 1E43     		orr	r6, r3
 1811              	.LVL139:
1025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1812              		.loc 1 1025 0
 1813 0098 2368     		ldr	r3, [r4]
 1814 009a CA22     		mov	r2, #202
 1815 009c 5A62     		str	r2, [r3, #36]
 1816 009e 2368     		ldr	r3, [r4]
 1817 00a0 773A     		sub	r2, r2, #119
 1818 00a2 5A62     		str	r2, [r3, #36]
1028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 1819              		.loc 1 1028 0
 1820 00a4 6A6A     		ldr	r2, [r5, #36]
 1821 00a6 8023     		mov	r3, #128
 1822 00a8 5B00     		lsl	r3, r3, #1
 1823 00aa 9A42     		cmp	r2, r3
 1824 00ac 35D1     		bne	.L100
1031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     
 1825              		.loc 1 1031 0
 1826 00ae 2268     		ldr	r2, [r4]
 1827 00b0 9168     		ldr	r1, [r2, #8]
 1828 00b2 3F4B     		ldr	r3, .L107
 1829 00b4 0B40     		and	r3, r1
 1830 00b6 9360     		str	r3, [r2, #8]
1034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1831              		.loc 1 1034 0
 1832 00b8 2268     		ldr	r2, [r4]
 1833 00ba D368     		ldr	r3, [r2, #12]
 1834 00bc FF21     		mov	r1, #255
 1835 00be 0B40     		and	r3, r1
 1836 00c0 3C49     		ldr	r1, .L107+4
 1837 00c2 0B43     		orr	r3, r1
 1838 00c4 D360     		str	r3, [r2, #12]
1036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 1839              		.loc 1 1036 0
 1840 00c6 FFF7FEFF 		bl	HAL_GetTick
 1841              	.LVL140:
 1842 00ca 051C     		mov	r5, r0
 1843              	.LVL141:
1038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1844              		.loc 1 1038 0
 1845 00cc 11E0     		b	.L101
 1846              	.LVL142:
 1847              	.L102:
ARM GAS  /tmp/ccVvgfEi.s 			page 64


1040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 1848              		.loc 1 1040 0
 1849 00ce FFF7FEFF 		bl	HAL_GetTick
 1850              	.LVL143:
 1851 00d2 401B     		sub	r0, r0, r5
 1852 00d4 FA23     		mov	r3, #250
 1853 00d6 9B00     		lsl	r3, r3, #2
 1854 00d8 9842     		cmp	r0, r3
 1855 00da 0AD9     		bls	.L101
1043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1856              		.loc 1 1043 0
 1857 00dc 2368     		ldr	r3, [r4]
 1858 00de FF22     		mov	r2, #255
 1859 00e0 5A62     		str	r2, [r3, #36]
1045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1860              		.loc 1 1045 0
 1861 00e2 FC3A     		sub	r2, r2, #252
 1862 00e4 2123     		mov	r3, #33
 1863 00e6 E254     		strb	r2, [r4, r3]
1048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1864              		.loc 1 1048 0
 1865 00e8 0022     		mov	r2, #0
 1866 00ea 013B     		sub	r3, r3, #1
 1867 00ec E254     		strb	r2, [r4, r3]
1050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 1868              		.loc 1 1050 0
 1869 00ee 0320     		mov	r0, #3
 1870 00f0 5DE0     		b	.L95
 1871              	.L101:
1038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1872              		.loc 1 1038 0
 1873 00f2 2368     		ldr	r3, [r4]
 1874 00f4 DA68     		ldr	r2, [r3, #12]
 1875 00f6 D207     		lsl	r2, r2, #31
 1876 00f8 E9D5     		bpl	.L102
1054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
 1877              		.loc 1 1054 0
 1878 00fa DF61     		str	r7, [r3, #28]
1056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1879              		.loc 1 1056 0
 1880 00fc 2368     		ldr	r3, [r4]
 1881 00fe 5E64     		str	r6, [r3, #68]
1058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
 1882              		.loc 1 1058 0
 1883 0100 2268     		ldr	r2, [r4]
 1884 0102 9368     		ldr	r3, [r2, #8]
 1885 0104 8021     		mov	r1, #128
 1886 0106 4900     		lsl	r1, r1, #1
 1887 0108 0B43     		orr	r3, r1
 1888 010a 9360     		str	r3, [r2, #8]
1060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1889              		.loc 1 1060 0
 1890 010c 2268     		ldr	r2, [r4]
 1891 010e 9368     		ldr	r3, [r2, #8]
 1892 0110 8021     		mov	r1, #128
 1893 0112 4901     		lsl	r1, r1, #5
 1894 0114 0B43     		orr	r3, r1
ARM GAS  /tmp/ccVvgfEi.s 			page 65


 1895 0116 9360     		str	r3, [r2, #8]
 1896 0118 34E0     		b	.L103
 1897              	.LVL144:
 1898              	.L100:
1065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     
 1899              		.loc 1 1065 0
 1900 011a 2268     		ldr	r2, [r4]
 1901 011c 9168     		ldr	r1, [r2, #8]
 1902 011e 264B     		ldr	r3, .L107+8
 1903 0120 0B40     		and	r3, r1
 1904 0122 9360     		str	r3, [r2, #8]
1068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1905              		.loc 1 1068 0
 1906 0124 2268     		ldr	r2, [r4]
 1907 0126 D368     		ldr	r3, [r2, #12]
 1908 0128 FF21     		mov	r1, #255
 1909 012a 0B40     		and	r3, r1
 1910 012c 2349     		ldr	r1, .L107+12
 1911 012e 0B43     		orr	r3, r1
 1912 0130 D360     		str	r3, [r2, #12]
1070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
 1913              		.loc 1 1070 0
 1914 0132 FFF7FEFF 		bl	HAL_GetTick
 1915              	.LVL145:
 1916 0136 051C     		mov	r5, r0
 1917              	.LVL146:
1072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1918              		.loc 1 1072 0
 1919 0138 11E0     		b	.L104
 1920              	.LVL147:
 1921              	.L105:
1074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 1922              		.loc 1 1074 0
 1923 013a FFF7FEFF 		bl	HAL_GetTick
 1924              	.LVL148:
 1925 013e 401B     		sub	r0, r0, r5
 1926 0140 FA23     		mov	r3, #250
 1927 0142 9B00     		lsl	r3, r3, #2
 1928 0144 9842     		cmp	r0, r3
 1929 0146 0AD9     		bls	.L104
1077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1930              		.loc 1 1077 0
 1931 0148 2368     		ldr	r3, [r4]
 1932 014a FF22     		mov	r2, #255
 1933 014c 5A62     		str	r2, [r3, #36]
1079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1934              		.loc 1 1079 0
 1935 014e FC3A     		sub	r2, r2, #252
 1936 0150 2123     		mov	r3, #33
 1937 0152 E254     		strb	r2, [r4, r3]
1082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1938              		.loc 1 1082 0
 1939 0154 0022     		mov	r2, #0
 1940 0156 013B     		sub	r3, r3, #1
 1941 0158 E254     		strb	r2, [r4, r3]
1084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 1942              		.loc 1 1084 0
ARM GAS  /tmp/ccVvgfEi.s 			page 66


 1943 015a 0320     		mov	r0, #3
 1944 015c 27E0     		b	.L95
 1945              	.L104:
1072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1946              		.loc 1 1072 0
 1947 015e 2368     		ldr	r3, [r4]
 1948 0160 DA68     		ldr	r2, [r3, #12]
 1949 0162 9207     		lsl	r2, r2, #30
 1950 0164 E9D5     		bpl	.L105
1088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 1951              		.loc 1 1088 0
 1952 0166 1F62     		str	r7, [r3, #32]
1090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1953              		.loc 1 1090 0
 1954 0168 2368     		ldr	r3, [r4]
 1955 016a 9E64     		str	r6, [r3, #72]
1092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
 1956              		.loc 1 1092 0
 1957 016c 2268     		ldr	r2, [r4]
 1958 016e 9368     		ldr	r3, [r2, #8]
 1959 0170 8021     		mov	r1, #128
 1960 0172 8900     		lsl	r1, r1, #2
 1961 0174 0B43     		orr	r3, r1
 1962 0176 9360     		str	r3, [r2, #8]
1094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1963              		.loc 1 1094 0
 1964 0178 2268     		ldr	r2, [r4]
 1965 017a 9368     		ldr	r3, [r2, #8]
 1966 017c 8021     		mov	r1, #128
 1967 017e 8901     		lsl	r1, r1, #6
 1968 0180 0B43     		orr	r3, r1
 1969 0182 9360     		str	r3, [r2, #8]
 1970              	.L103:
1098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1971              		.loc 1 1098 0
 1972 0184 0E4B     		ldr	r3, .L107+16
 1973 0186 1968     		ldr	r1, [r3]
 1974 0188 8020     		mov	r0, #128
 1975 018a 8002     		lsl	r0, r0, #10
 1976 018c 0143     		orr	r1, r0
 1977 018e 1960     		str	r1, [r3]
1100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1978              		.loc 1 1100 0
 1979 0190 9A68     		ldr	r2, [r3, #8]
 1980 0192 0243     		orr	r2, r0
 1981 0194 9A60     		str	r2, [r3, #8]
1103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1982              		.loc 1 1103 0
 1983 0196 2368     		ldr	r3, [r4]
 1984 0198 FF22     		mov	r2, #255
 1985 019a 5A62     		str	r2, [r3, #36]
1105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1986              		.loc 1 1105 0
 1987 019c FE3A     		sub	r2, r2, #254
 1988 019e 2123     		mov	r3, #33
 1989 01a0 E254     		strb	r2, [r4, r3]
1108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
ARM GAS  /tmp/ccVvgfEi.s 			page 67


 1990              		.loc 1 1108 0
 1991 01a2 0022     		mov	r2, #0
 1992 01a4 013B     		sub	r3, r3, #1
 1993 01a6 E254     		strb	r2, [r4, r3]
1110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 1994              		.loc 1 1110 0
 1995 01a8 0020     		mov	r0, #0
 1996 01aa 00E0     		b	.L95
 1997              	.LVL149:
 1998              	.L106:
 951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1999              		.loc 1 951 0
 2000 01ac 0220     		mov	r0, #2
 2001              	.LVL150:
 2002              	.L95:
1111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2003              		.loc 1 1111 0
 2004              		@ sp needed
 2005 01ae F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2006              	.L108:
 2007              		.align	2
 2008              	.L107:
 2009 01b0 FFFEFFFF 		.word	-257
 2010 01b4 7FFEFFFF 		.word	-385
 2011 01b8 FFFDFFFF 		.word	-513
 2012 01bc 7FFDFFFF 		.word	-641
 2013 01c0 00040140 		.word	1073808384
 2014              		.cfi_endproc
 2015              	.LFE45:
 2017              		.section	.text.RTC_Bcd2ToByte,"ax",%progbits
 2018              		.align	2
 2019              		.global	RTC_Bcd2ToByte
 2020              		.code	16
 2021              		.thumb_func
 2023              	RTC_Bcd2ToByte:
 2024              	.LFB55:
1502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Convert from 2 digit BCD to Binary.
1505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Value: BCD value to be converted
1506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval Converted word
1507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** uint8_t RTC_Bcd2ToByte(uint8_t Value)
1509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 2025              		.loc 1 1509 0
 2026              		.cfi_startproc
 2027              	.LVL151:
1510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tmp = 0U;
1511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   tmp = ((uint8_t)(Value & (uint8_t)0xF0U) >> (uint8_t)0x4U) * 10U;
 2028              		.loc 1 1511 0
 2029 0000 0209     		lsr	r2, r0, #4
 2030 0002 9300     		lsl	r3, r2, #2
 2031 0004 9B18     		add	r3, r3, r2
 2032 0006 5B00     		lsl	r3, r3, #1
 2033              	.LVL152:
1512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0FU));
 2034              		.loc 1 1512 0
ARM GAS  /tmp/ccVvgfEi.s 			page 68


 2035 0008 0F22     		mov	r2, #15
 2036 000a 1040     		and	r0, r2
 2037              	.LVL153:
 2038 000c C018     		add	r0, r0, r3
 2039 000e C0B2     		uxtb	r0, r0
1513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 2040              		.loc 1 1513 0
 2041              		@ sp needed
 2042 0010 7047     		bx	lr
 2043              		.cfi_endproc
 2044              	.LFE55:
 2046 0012 C046     		.section	.text.HAL_RTC_GetTime,"ax",%progbits
 2047              		.align	2
 2048              		.global	HAL_RTC_GetTime
 2049              		.code	16
 2050              		.thumb_func
 2052              	HAL_RTC_GetTime:
 2053              	.LFB41:
 545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tmpreg = 0U;
 2054              		.loc 1 545 0
 2055              		.cfi_startproc
 2056              	.LVL154:
 2057 0000 70B5     		push	{r4, r5, r6, lr}
 2058              	.LCFI11:
 2059              		.cfi_def_cfa_offset 16
 2060              		.cfi_offset 4, -16
 2061              		.cfi_offset 5, -12
 2062              		.cfi_offset 6, -8
 2063              		.cfi_offset 14, -4
 2064              	.LVL155:
 552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2065              		.loc 1 552 0
 2066 0002 0368     		ldr	r3, [r0]
 2067 0004 9B6A     		ldr	r3, [r3, #40]
 2068 0006 4B60     		str	r3, [r1, #4]
 555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   
 2069              		.loc 1 555 0
 2070 0008 0368     		ldr	r3, [r0]
 2071 000a 1B69     		ldr	r3, [r3, #16]
 2072 000c 5B04     		lsl	r3, r3, #17
 2073 000e 5B0C     		lsr	r3, r3, #17
 2074 0010 8B60     		str	r3, [r1, #8]
 558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2075              		.loc 1 558 0
 2076 0012 0368     		ldr	r3, [r0]
 2077 0014 1C68     		ldr	r4, [r3]
 2078              	.LVL156:
 561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8U);
 2079              		.loc 1 561 0
 2080 0016 A002     		lsl	r0, r4, #10
 2081              	.LVL157:
 2082 0018 800E     		lsr	r0, r0, #26
 2083 001a 0870     		strb	r0, [r1]
 562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sTime->Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 2084              		.loc 1 562 0
 2085 001c 6604     		lsl	r6, r4, #17
 2086 001e 760E     		lsr	r6, r6, #25
ARM GAS  /tmp/ccVvgfEi.s 			page 69


 2087 0020 4E70     		strb	r6, [r1, #1]
 563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16U);
 2088              		.loc 1 563 0
 2089 0022 7F25     		mov	r5, #127
 2090 0024 2540     		and	r5, r4
 2091 0026 8D70     		strb	r5, [r1, #2]
 564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2092              		.loc 1 564 0
 2093 0028 8023     		mov	r3, #128
 2094 002a DB03     		lsl	r3, r3, #15
 2095 002c 2340     		and	r3, r4
 2096 002e 1B0C     		lsr	r3, r3, #16
 2097 0030 CB70     		strb	r3, [r1, #3]
 567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 2098              		.loc 1 567 0
 2099 0032 002A     		cmp	r2, #0
 2100 0034 0BD1     		bne	.L111
 2101 0036 0C1C     		mov	r4, r1
 2102              	.LVL158:
 570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
 2103              		.loc 1 570 0
 2104 0038 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2105              	.LVL159:
 2106 003c 2070     		strb	r0, [r4]
 571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);
 2107              		.loc 1 571 0
 2108 003e 301C     		mov	r0, r6
 2109 0040 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2110              	.LVL160:
 2111 0044 6070     		strb	r0, [r4, #1]
 572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 2112              		.loc 1 572 0
 2113 0046 281C     		mov	r0, r5
 2114 0048 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2115              	.LVL161:
 2116 004c A070     		strb	r0, [r4, #2]
 2117              	.LVL162:
 2118              	.L111:
 576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2119              		.loc 1 576 0
 2120 004e 0020     		mov	r0, #0
 2121              		@ sp needed
 2122 0050 70BD     		pop	{r4, r5, r6, pc}
 2123              		.cfi_endproc
 2124              	.LFE41:
 2126 0052 C046     		.section	.text.HAL_RTC_GetDate,"ax",%progbits
 2127              		.align	2
 2128              		.global	HAL_RTC_GetDate
 2129              		.code	16
 2130              		.thumb_func
 2132              	HAL_RTC_GetDate:
 2133              	.LFB43:
 700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t datetmpreg = 0U;
 2134              		.loc 1 700 0
 2135              		.cfi_startproc
 2136              	.LVL163:
 2137 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /tmp/ccVvgfEi.s 			page 70


 2138              	.LCFI12:
 2139              		.cfi_def_cfa_offset 16
 2140              		.cfi_offset 4, -16
 2141              		.cfi_offset 5, -12
 2142              		.cfi_offset 6, -8
 2143              		.cfi_offset 14, -4
 2144              	.LVL164:
 707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2145              		.loc 1 707 0
 2146 0002 0368     		ldr	r3, [r0]
 2147 0004 5B68     		ldr	r3, [r3, #4]
 2148              	.LVL165:
 710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8U);
 2149              		.loc 1 710 0
 2150 0006 1802     		lsl	r0, r3, #8
 2151              	.LVL166:
 2152 0008 000E     		lsr	r0, r0, #24
 2153 000a C870     		strb	r0, [r1, #3]
 711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sDate->Date = (uint8_t)(datetmpreg & (RTC_DR_DT | RTC_DR_DU));
 2154              		.loc 1 711 0
 2155 000c DE04     		lsl	r6, r3, #19
 2156 000e F60E     		lsr	r6, r6, #27
 2157 0010 4E70     		strb	r6, [r1, #1]
 712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> 13U); 
 2158              		.loc 1 712 0
 2159 0012 3F25     		mov	r5, #63
 2160 0014 1D40     		and	r5, r3
 2161 0016 8D70     		strb	r5, [r1, #2]
 713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2162              		.loc 1 713 0
 2163 0018 1B04     		lsl	r3, r3, #16
 2164              	.LVL167:
 2165 001a 5B0F     		lsr	r3, r3, #29
 2166 001c 0B70     		strb	r3, [r1]
 716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 2167              		.loc 1 716 0
 2168 001e 002A     		cmp	r2, #0
 2169 0020 0BD1     		bne	.L113
 2170 0022 0C1C     		mov	r4, r1
 719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
 2171              		.loc 1 719 0
 2172 0024 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2173              	.LVL168:
 2174 0028 E070     		strb	r0, [r4, #3]
 720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);
 2175              		.loc 1 720 0
 2176 002a 301C     		mov	r0, r6
 2177 002c FFF7FEFF 		bl	RTC_Bcd2ToByte
 2178              	.LVL169:
 2179 0030 6070     		strb	r0, [r4, #1]
 721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 2180              		.loc 1 721 0
 2181 0032 281C     		mov	r0, r5
 2182 0034 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2183              	.LVL170:
 2184 0038 A070     		strb	r0, [r4, #2]
 2185              	.LVL171:
ARM GAS  /tmp/ccVvgfEi.s 			page 71


 2186              	.L113:
 724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2187              		.loc 1 724 0
 2188 003a 0020     		mov	r0, #0
 2189              		@ sp needed
 2190 003c 70BD     		pop	{r4, r5, r6, pc}
 2191              		.cfi_endproc
 2192              	.LFE43:
 2194 003e C046     		.section	.text.HAL_RTC_GetAlarm,"ax",%progbits
 2195              		.align	2
 2196              		.global	HAL_RTC_GetAlarm
 2197              		.code	16
 2198              		.thumb_func
 2200              	HAL_RTC_GetAlarm:
 2201              	.LFB47:
1217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
 2202              		.loc 1 1217 0
 2203              		.cfi_startproc
 2204              	.LVL172:
 2205 0000 38B5     		push	{r3, r4, r5, lr}
 2206              	.LCFI13:
 2207              		.cfi_def_cfa_offset 16
 2208              		.cfi_offset 3, -16
 2209              		.cfi_offset 4, -12
 2210              		.cfi_offset 5, -8
 2211              		.cfi_offset 14, -4
 2212              	.LVL173:
1224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 2213              		.loc 1 1224 0
 2214 0002 8024     		mov	r4, #128
 2215 0004 6400     		lsl	r4, r4, #1
 2216 0006 A242     		cmp	r2, r4
 2217 0008 20D1     		bne	.L115
1227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2218              		.loc 1 1227 0
 2219 000a 4C62     		str	r4, [r1, #36]
1229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMASSR ) & RTC_ALRMASSR_SS);
 2220              		.loc 1 1229 0
 2221 000c 0068     		ldr	r0, [r0]
 2222              	.LVL174:
 2223 000e C269     		ldr	r2, [r0, #28]
 2224              	.LVL175:
1230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2225              		.loc 1 1230 0
 2226 0010 406C     		ldr	r0, [r0, #68]
 2227 0012 4004     		lsl	r0, r0, #17
 2228 0014 400C     		lsr	r0, r0, #17
 2229              	.LVL176:
1233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> 8U);
 2230              		.loc 1 1233 0
 2231 0016 9402     		lsl	r4, r2, #10
 2232 0018 A40E     		lsr	r4, r4, #26
 2233 001a 0C70     		strb	r4, [r1]
1234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU));
 2234              		.loc 1 1234 0
 2235 001c 5404     		lsl	r4, r2, #17
 2236 001e 640E     		lsr	r4, r4, #25
ARM GAS  /tmp/ccVvgfEi.s 			page 72


 2237 0020 4C70     		strb	r4, [r1, #1]
1235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.TimeFormat = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16U);
 2238              		.loc 1 1235 0
 2239 0022 7F24     		mov	r4, #127
 2240 0024 1440     		and	r4, r2
 2241 0026 8C70     		strb	r4, [r1, #2]
1236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
 2242              		.loc 1 1236 0
 2243 0028 8024     		mov	r4, #128
 2244 002a E403     		lsl	r4, r4, #15
 2245 002c 1440     		and	r4, r2
 2246 002e 240C     		lsr	r4, r4, #16
 2247 0030 CC70     		strb	r4, [r1, #3]
1237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 24U);
 2248              		.loc 1 1237 0
 2249 0032 4860     		str	r0, [r1, #4]
1238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 2250              		.loc 1 1238 0
 2251 0034 9000     		lsl	r0, r2, #2
 2252              	.LVL177:
 2253 0036 800E     		lsr	r0, r0, #26
 2254 0038 2024     		mov	r4, #32
 2255 003a 0855     		strb	r0, [r1, r4]
 2256              	.LVL178:
1239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
 2257              		.loc 1 1239 0
 2258 003c 8020     		mov	r0, #128
 2259 003e C005     		lsl	r0, r0, #23
 2260 0040 1040     		and	r0, r2
 2261 0042 C861     		str	r0, [r1, #28]
1240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 2262              		.loc 1 1240 0
 2263 0044 1D48     		ldr	r0, .L118
 2264 0046 0240     		and	r2, r0
 2265              	.LVL179:
 2266 0048 4A61     		str	r2, [r1, #20]
 2267 004a 21E0     		b	.L116
 2268              	.LVL180:
 2269              	.L115:
1244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2270              		.loc 1 1244 0
 2271 004c 8022     		mov	r2, #128
 2272              	.LVL181:
 2273 004e 9200     		lsl	r2, r2, #2
 2274 0050 4A62     		str	r2, [r1, #36]
1246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMBSSR) & RTC_ALRMBSSR_SS);
 2275              		.loc 1 1246 0
 2276 0052 0068     		ldr	r0, [r0]
 2277              	.LVL182:
 2278 0054 026A     		ldr	r2, [r0, #32]
 2279              	.LVL183:
1247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  
 2280              		.loc 1 1247 0
 2281 0056 806C     		ldr	r0, [r0, #72]
 2282 0058 4004     		lsl	r0, r0, #17
 2283 005a 400C     		lsr	r0, r0, #17
 2284              	.LVL184:
ARM GAS  /tmp/ccVvgfEi.s 			page 73


1250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((tmpreg & (RTC_ALRMBR_MNT | RTC_ALRMBR_MNU)) >> 8U);
 2285              		.loc 1 1250 0
 2286 005c 9402     		lsl	r4, r2, #10
 2287 005e A40E     		lsr	r4, r4, #26
 2288 0060 0C70     		strb	r4, [r1]
1251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)(tmpreg & (RTC_ALRMBR_ST | RTC_ALRMBR_SU));
 2289              		.loc 1 1251 0
 2290 0062 5404     		lsl	r4, r2, #17
 2291 0064 640E     		lsr	r4, r4, #25
 2292 0066 4C70     		strb	r4, [r1, #1]
1252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.TimeFormat = (uint32_t)((tmpreg & RTC_ALRMBR_PM) >> 16U);
 2293              		.loc 1 1252 0
 2294 0068 7F24     		mov	r4, #127
 2295 006a 1440     		and	r4, r2
 2296 006c 8C70     		strb	r4, [r1, #2]
1253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
 2297              		.loc 1 1253 0
 2298 006e 8024     		mov	r4, #128
 2299 0070 E403     		lsl	r4, r4, #15
 2300 0072 1440     		and	r4, r2
 2301 0074 240C     		lsr	r4, r4, #16
 2302 0076 CC70     		strb	r4, [r1, #3]
1254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMBR_DT | RTC_ALRMBR_DU)) >> 24U);
 2303              		.loc 1 1254 0
 2304 0078 4860     		str	r0, [r1, #4]
1255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMBR_WDSEL);
 2305              		.loc 1 1255 0
 2306 007a 9000     		lsl	r0, r2, #2
 2307              	.LVL185:
 2308 007c 800E     		lsr	r0, r0, #26
 2309 007e 2024     		mov	r4, #32
 2310 0080 0855     		strb	r0, [r1, r4]
 2311              	.LVL186:
1256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
 2312              		.loc 1 1256 0
 2313 0082 8020     		mov	r0, #128
 2314 0084 C005     		lsl	r0, r0, #23
 2315 0086 1040     		and	r0, r2
 2316 0088 C861     		str	r0, [r1, #28]
1257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  }
 2317              		.loc 1 1257 0
 2318 008a 0C48     		ldr	r0, .L118
 2319 008c 0240     		and	r2, r0
 2320              	.LVL187:
 2321 008e 4A61     		str	r2, [r1, #20]
 2322              	.L116:
1260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 2323              		.loc 1 1260 0
 2324 0090 002B     		cmp	r3, #0
 2325 0092 11D1     		bne	.L117
 2326 0094 0C1C     		mov	r4, r1
1262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes);
 2327              		.loc 1 1262 0
 2328 0096 0878     		ldrb	r0, [r1]
 2329 0098 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2330              	.LVL188:
 2331 009c 2070     		strb	r0, [r4]
ARM GAS  /tmp/ccVvgfEi.s 			page 74


1263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds);
 2332              		.loc 1 1263 0
 2333 009e 6078     		ldrb	r0, [r4, #1]
 2334 00a0 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2335              	.LVL189:
 2336 00a4 6070     		strb	r0, [r4, #1]
1264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 2337              		.loc 1 1264 0
 2338 00a6 A078     		ldrb	r0, [r4, #2]
 2339 00a8 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2340              	.LVL190:
 2341 00ac A070     		strb	r0, [r4, #2]
1265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 2342              		.loc 1 1265 0
 2343 00ae 2025     		mov	r5, #32
 2344 00b0 605D     		ldrb	r0, [r4, r5]
 2345 00b2 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2346              	.LVL191:
 2347 00b6 6055     		strb	r0, [r4, r5]
 2348              	.LVL192:
 2349              	.L117:
1269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2350              		.loc 1 1269 0
 2351 00b8 0020     		mov	r0, #0
 2352              		@ sp needed
 2353 00ba 38BD     		pop	{r3, r4, r5, pc}
 2354              	.L119:
 2355              		.align	2
 2356              	.L118:
 2357 00bc 80808080 		.word	-2139062144
 2358              		.cfi_endproc
 2359              	.LFE47:
 2361              		.text
 2362              	.Letext0:
 2363              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2364              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2365              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l051xx.h"
 2366              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h"
 2367              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 2368              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rtc.h"
 2369              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 2370              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rtc_ex.h"
ARM GAS  /tmp/ccVvgfEi.s 			page 75


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l0xx_hal_rtc.c
     /tmp/ccVvgfEi.s:18     .text.HAL_RTC_MspInit:0000000000000000 $t
     /tmp/ccVvgfEi.s:23     .text.HAL_RTC_MspInit:0000000000000000 HAL_RTC_MspInit
     /tmp/ccVvgfEi.s:36     .text.HAL_RTC_MspDeInit:0000000000000000 $t
     /tmp/ccVvgfEi.s:41     .text.HAL_RTC_MspDeInit:0000000000000000 HAL_RTC_MspDeInit
     /tmp/ccVvgfEi.s:53     .text.HAL_RTC_DeactivateAlarm:0000000000000000 $t
     /tmp/ccVvgfEi.s:58     .text.HAL_RTC_DeactivateAlarm:0000000000000000 HAL_RTC_DeactivateAlarm
     /tmp/ccVvgfEi.s:230    .text.HAL_RTC_DeactivateAlarm:00000000000000d8 $d
     /tmp/ccVvgfEi.s:238    .text.HAL_RTC_AlarmAEventCallback:0000000000000000 $t
     /tmp/ccVvgfEi.s:243    .text.HAL_RTC_AlarmAEventCallback:0000000000000000 HAL_RTC_AlarmAEventCallback
     /tmp/ccVvgfEi.s:255    .text.HAL_RTC_AlarmIRQHandler:0000000000000000 $t
     /tmp/ccVvgfEi.s:260    .text.HAL_RTC_AlarmIRQHandler:0000000000000000 HAL_RTC_AlarmIRQHandler
     /tmp/ccVvgfEi.s:330    .text.HAL_RTC_AlarmIRQHandler:0000000000000058 $d
     /tmp/ccVvgfEi.s:337    .text.HAL_RTC_PollForAlarmAEvent:0000000000000000 $t
     /tmp/ccVvgfEi.s:342    .text.HAL_RTC_PollForAlarmAEvent:0000000000000000 HAL_RTC_PollForAlarmAEvent
     /tmp/ccVvgfEi.s:414    .text.HAL_RTC_PollForAlarmAEvent:0000000000000048 $d
     /tmp/ccVvgfEi.s:419    .text.HAL_RTC_WaitForSynchro:0000000000000000 $t
     /tmp/ccVvgfEi.s:424    .text.HAL_RTC_WaitForSynchro:0000000000000000 HAL_RTC_WaitForSynchro
     /tmp/ccVvgfEi.s:483    .text.HAL_RTC_GetState:0000000000000000 $t
     /tmp/ccVvgfEi.s:488    .text.HAL_RTC_GetState:0000000000000000 HAL_RTC_GetState
     /tmp/ccVvgfEi.s:505    .text.RTC_EnterInitMode:0000000000000000 $t
     /tmp/ccVvgfEi.s:510    .text.RTC_EnterInitMode:0000000000000000 RTC_EnterInitMode
     /tmp/ccVvgfEi.s:577    .text.HAL_RTC_Init:0000000000000000 $t
     /tmp/ccVvgfEi.s:582    .text.HAL_RTC_Init:0000000000000000 HAL_RTC_Init
     /tmp/ccVvgfEi.s:709    .text.HAL_RTC_Init:00000000000000a8 $d
     /tmp/ccVvgfEi.s:714    .text.HAL_RTC_DeInit:0000000000000000 $t
     /tmp/ccVvgfEi.s:719    .text.HAL_RTC_DeInit:0000000000000000 HAL_RTC_DeInit
     /tmp/ccVvgfEi.s:896    .text.HAL_RTC_DeInit:00000000000000e4 $d
     /tmp/ccVvgfEi.s:903    .text.RTC_ByteToBcd2:0000000000000000 $t
     /tmp/ccVvgfEi.s:908    .text.RTC_ByteToBcd2:0000000000000000 RTC_ByteToBcd2
     /tmp/ccVvgfEi.s:944    .text.HAL_RTC_SetTime:0000000000000000 $t
     /tmp/ccVvgfEi.s:949    .text.HAL_RTC_SetTime:0000000000000000 HAL_RTC_SetTime
     /tmp/ccVvgfEi.s:1158   .text.HAL_RTC_SetTime:0000000000000104 $d
     /tmp/ccVvgfEi.s:1164   .text.HAL_RTC_SetDate:0000000000000000 $t
     /tmp/ccVvgfEi.s:1169   .text.HAL_RTC_SetDate:0000000000000000 HAL_RTC_SetDate
     /tmp/ccVvgfEi.s:1357   .text.HAL_RTC_SetDate:00000000000000e8 $d
     /tmp/ccVvgfEi.s:1362   .text.HAL_RTC_SetAlarm:0000000000000000 $t
     /tmp/ccVvgfEi.s:1367   .text.HAL_RTC_SetAlarm:0000000000000000 HAL_RTC_SetAlarm
     /tmp/ccVvgfEi.s:1667   .text.HAL_RTC_SetAlarm:0000000000000180 $d
     /tmp/ccVvgfEi.s:1675   .text.HAL_RTC_SetAlarm_IT:0000000000000000 $t
     /tmp/ccVvgfEi.s:1680   .text.HAL_RTC_SetAlarm_IT:0000000000000000 HAL_RTC_SetAlarm_IT
     /tmp/ccVvgfEi.s:2009   .text.HAL_RTC_SetAlarm_IT:00000000000001b0 $d
     /tmp/ccVvgfEi.s:2018   .text.RTC_Bcd2ToByte:0000000000000000 $t
     /tmp/ccVvgfEi.s:2023   .text.RTC_Bcd2ToByte:0000000000000000 RTC_Bcd2ToByte
     /tmp/ccVvgfEi.s:2047   .text.HAL_RTC_GetTime:0000000000000000 $t
     /tmp/ccVvgfEi.s:2052   .text.HAL_RTC_GetTime:0000000000000000 HAL_RTC_GetTime
     /tmp/ccVvgfEi.s:2127   .text.HAL_RTC_GetDate:0000000000000000 $t
     /tmp/ccVvgfEi.s:2132   .text.HAL_RTC_GetDate:0000000000000000 HAL_RTC_GetDate
     /tmp/ccVvgfEi.s:2195   .text.HAL_RTC_GetAlarm:0000000000000000 $t
     /tmp/ccVvgfEi.s:2200   .text.HAL_RTC_GetAlarm:0000000000000000 HAL_RTC_GetAlarm
     /tmp/ccVvgfEi.s:2357   .text.HAL_RTC_GetAlarm:00000000000000bc $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_RTCEx_AlarmBEventCallback
ARM GAS  /tmp/ccVvgfEi.s 			page 76


