ARM GAS  /tmp/ccyMK6VP.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  18              		.align	2
  19              		.global	MX_USART1_UART_Init
  20              		.code	16
  21              		.thumb_func
  23              	MX_USART1_UART_Init:
  24              	.LFB36:
  25              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   ** This notice applies to any and all portions of this file
   8:Src/usart.c   ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usart.c   ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usart.c   ****   * inserted by the user or by software development tools
  11:Src/usart.c   ****   * are owned by their respective copyright owners.
  12:Src/usart.c   ****   *
  13:Src/usart.c   ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/usart.c   ****   *
  15:Src/usart.c   ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/usart.c   ****   * are permitted provided that the following conditions are met:
  17:Src/usart.c   ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/usart.c   ****   *      this list of conditions and the following disclaimer.
  19:Src/usart.c   ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/usart.c   ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/usart.c   ****   *      and/or other materials provided with the distribution.
  22:Src/usart.c   ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/usart.c   ****   *      may be used to endorse or promote products derived from this software
  24:Src/usart.c   ****   *      without specific prior written permission.
  25:Src/usart.c   ****   *
  26:Src/usart.c   ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/usart.c   ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/usart.c   ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/usart.c   ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/usart.c   ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/usart.c   ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/usart.c   ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/usart.c   ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccyMK6VP.s 			page 2


  34:Src/usart.c   ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/usart.c   ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/usart.c   ****   *
  37:Src/usart.c   ****   ******************************************************************************
  38:Src/usart.c   ****   */
  39:Src/usart.c   **** 
  40:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  41:Src/usart.c   **** #include "usart.h"
  42:Src/usart.c   **** 
  43:Src/usart.c   **** #include "gpio.h"
  44:Src/usart.c   **** 
  45:Src/usart.c   **** /* USER CODE BEGIN 0 */
  46:Src/usart.c   **** 
  47:Src/usart.c   **** /* USER CODE END 0 */
  48:Src/usart.c   **** 
  49:Src/usart.c   **** UART_HandleTypeDef huart1;
  50:Src/usart.c   **** UART_HandleTypeDef huart2;
  51:Src/usart.c   **** 
  52:Src/usart.c   **** /* USART1 init function */
  53:Src/usart.c   **** 
  54:Src/usart.c   **** void MX_USART1_UART_Init(void)
  55:Src/usart.c   **** {
  26              		.loc 1 55 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 3, -8
  32              		.cfi_offset 14, -4
  56:Src/usart.c   **** 
  57:Src/usart.c   ****   huart1.Instance = USART1;
  33              		.loc 1 57 0
  34 0002 0C48     		ldr	r0, .L3
  35 0004 0C4B     		ldr	r3, .L3+4
  36 0006 0360     		str	r3, [r0]
  58:Src/usart.c   ****   huart1.Init.BaudRate = 115200;
  37              		.loc 1 58 0
  38 0008 E123     		mov	r3, #225
  39 000a 5B02     		lsl	r3, r3, #9
  40 000c 4360     		str	r3, [r0, #4]
  59:Src/usart.c   ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  41              		.loc 1 59 0
  42 000e 0023     		mov	r3, #0
  43 0010 8360     		str	r3, [r0, #8]
  60:Src/usart.c   ****   huart1.Init.StopBits = UART_STOPBITS_1;
  44              		.loc 1 60 0
  45 0012 C360     		str	r3, [r0, #12]
  61:Src/usart.c   ****   huart1.Init.Parity = UART_PARITY_NONE;
  46              		.loc 1 61 0
  47 0014 0361     		str	r3, [r0, #16]
  62:Src/usart.c   ****   huart1.Init.Mode = UART_MODE_TX_RX;
  48              		.loc 1 62 0
  49 0016 0C22     		mov	r2, #12
  50 0018 4261     		str	r2, [r0, #20]
  63:Src/usart.c   ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  51              		.loc 1 63 0
  52 001a 8361     		str	r3, [r0, #24]
ARM GAS  /tmp/ccyMK6VP.s 			page 3


  64:Src/usart.c   ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  53              		.loc 1 64 0
  54 001c C361     		str	r3, [r0, #28]
  65:Src/usart.c   ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  55              		.loc 1 65 0
  56 001e 0362     		str	r3, [r0, #32]
  66:Src/usart.c   ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  57              		.loc 1 66 0
  58 0020 4362     		str	r3, [r0, #36]
  67:Src/usart.c   ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  59              		.loc 1 67 0
  60 0022 FFF7FEFF 		bl	HAL_UART_Init
  61              	.LVL0:
  62 0026 0028     		cmp	r0, #0
  63 0028 03D0     		beq	.L1
  68:Src/usart.c   ****   {
  69:Src/usart.c   ****     _Error_Handler(__FILE__, __LINE__);
  64              		.loc 1 69 0
  65 002a 0448     		ldr	r0, .L3+8
  66 002c 4521     		mov	r1, #69
  67 002e FFF7FEFF 		bl	_Error_Handler
  68              	.LVL1:
  69              	.L1:
  70:Src/usart.c   ****   }
  71:Src/usart.c   **** 
  72:Src/usart.c   **** }
  70              		.loc 1 72 0
  71              		@ sp needed
  72 0032 08BD     		pop	{r3, pc}
  73              	.L4:
  74              		.align	2
  75              	.L3:
  76 0034 00000000 		.word	huart1
  77 0038 00380140 		.word	1073821696
  78 003c 00000000 		.word	.LC1
  79              		.cfi_endproc
  80              	.LFE36:
  82              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  83              		.align	2
  84              		.global	MX_USART2_UART_Init
  85              		.code	16
  86              		.thumb_func
  88              	MX_USART2_UART_Init:
  89              	.LFB37:
  73:Src/usart.c   **** /* USART2 init function */
  74:Src/usart.c   **** 
  75:Src/usart.c   **** void MX_USART2_UART_Init(void)
  76:Src/usart.c   **** {
  90              		.loc 1 76 0
  91              		.cfi_startproc
  92 0000 08B5     		push	{r3, lr}
  93              	.LCFI1:
  94              		.cfi_def_cfa_offset 8
  95              		.cfi_offset 3, -8
  96              		.cfi_offset 14, -4
  77:Src/usart.c   **** 
  78:Src/usart.c   ****   huart2.Instance = USART2;
ARM GAS  /tmp/ccyMK6VP.s 			page 4


  97              		.loc 1 78 0
  98 0002 0C48     		ldr	r0, .L7
  99 0004 0C4B     		ldr	r3, .L7+4
 100 0006 0360     		str	r3, [r0]
  79:Src/usart.c   ****   huart2.Init.BaudRate = 115200;
 101              		.loc 1 79 0
 102 0008 E123     		mov	r3, #225
 103 000a 5B02     		lsl	r3, r3, #9
 104 000c 4360     		str	r3, [r0, #4]
  80:Src/usart.c   ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 105              		.loc 1 80 0
 106 000e 0023     		mov	r3, #0
 107 0010 8360     		str	r3, [r0, #8]
  81:Src/usart.c   ****   huart2.Init.StopBits = UART_STOPBITS_1;
 108              		.loc 1 81 0
 109 0012 C360     		str	r3, [r0, #12]
  82:Src/usart.c   ****   huart2.Init.Parity = UART_PARITY_NONE;
 110              		.loc 1 82 0
 111 0014 0361     		str	r3, [r0, #16]
  83:Src/usart.c   ****   huart2.Init.Mode = UART_MODE_TX_RX;
 112              		.loc 1 83 0
 113 0016 0C22     		mov	r2, #12
 114 0018 4261     		str	r2, [r0, #20]
  84:Src/usart.c   ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 115              		.loc 1 84 0
 116 001a 8361     		str	r3, [r0, #24]
  85:Src/usart.c   ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 117              		.loc 1 85 0
 118 001c C361     		str	r3, [r0, #28]
  86:Src/usart.c   ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 119              		.loc 1 86 0
 120 001e 0362     		str	r3, [r0, #32]
  87:Src/usart.c   ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 121              		.loc 1 87 0
 122 0020 4362     		str	r3, [r0, #36]
  88:Src/usart.c   ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 123              		.loc 1 88 0
 124 0022 FFF7FEFF 		bl	HAL_UART_Init
 125              	.LVL2:
 126 0026 0028     		cmp	r0, #0
 127 0028 03D0     		beq	.L5
  89:Src/usart.c   ****   {
  90:Src/usart.c   ****     _Error_Handler(__FILE__, __LINE__);
 128              		.loc 1 90 0
 129 002a 0448     		ldr	r0, .L7+8
 130 002c 5A21     		mov	r1, #90
 131 002e FFF7FEFF 		bl	_Error_Handler
 132              	.LVL3:
 133              	.L5:
  91:Src/usart.c   ****   }
  92:Src/usart.c   **** 
  93:Src/usart.c   **** }
 134              		.loc 1 93 0
 135              		@ sp needed
 136 0032 08BD     		pop	{r3, pc}
 137              	.L8:
 138              		.align	2
ARM GAS  /tmp/ccyMK6VP.s 			page 5


 139              	.L7:
 140 0034 00000000 		.word	huart2
 141 0038 00440040 		.word	1073759232
 142 003c 00000000 		.word	.LC1
 143              		.cfi_endproc
 144              	.LFE37:
 146              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 147              		.align	2
 148              		.global	HAL_UART_MspInit
 149              		.code	16
 150              		.thumb_func
 152              	HAL_UART_MspInit:
 153              	.LFB38:
  94:Src/usart.c   **** 
  95:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  96:Src/usart.c   **** {
 154              		.loc 1 96 0
 155              		.cfi_startproc
 156              	.LVL4:
 157 0000 00B5     		push	{lr}
 158              	.LCFI2:
 159              		.cfi_def_cfa_offset 4
 160              		.cfi_offset 14, -4
 161 0002 87B0     		sub	sp, sp, #28
 162              	.LCFI3:
 163              		.cfi_def_cfa_offset 32
  97:Src/usart.c   **** 
  98:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
  99:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 164              		.loc 1 99 0
 165 0004 0368     		ldr	r3, [r0]
 166 0006 184A     		ldr	r2, .L12
 167 0008 9342     		cmp	r3, r2
 168 000a 13D1     		bne	.L10
 100:Src/usart.c   ****   {
 101:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 0 */
 102:Src/usart.c   **** 
 103:Src/usart.c   ****   /* USER CODE END USART1_MspInit 0 */
 104:Src/usart.c   ****     /* USART1 clock enable */
 105:Src/usart.c   ****     __HAL_RCC_USART1_CLK_ENABLE();
 169              		.loc 1 105 0
 170 000c 174A     		ldr	r2, .L12+4
 171 000e 536B     		ldr	r3, [r2, #52]
 172 0010 8021     		mov	r1, #128
 173 0012 C901     		lsl	r1, r1, #7
 174 0014 0B43     		orr	r3, r1
 175 0016 5363     		str	r3, [r2, #52]
 106:Src/usart.c   ****   
 107:Src/usart.c   ****     /**USART1 GPIO Configuration    
 108:Src/usart.c   ****     PB6     ------> USART1_TX
 109:Src/usart.c   ****     PB7     ------> USART1_RX 
 110:Src/usart.c   ****     */
 111:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 176              		.loc 1 111 0
 177 0018 C023     		mov	r3, #192
 178 001a 0193     		str	r3, [sp, #4]
 112:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/ccyMK6VP.s 			page 6


 179              		.loc 1 112 0
 180 001c BE3B     		sub	r3, r3, #190
 181 001e 0293     		str	r3, [sp, #8]
 113:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 182              		.loc 1 113 0
 183 0020 0023     		mov	r3, #0
 184 0022 0393     		str	r3, [sp, #12]
 114:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 185              		.loc 1 114 0
 186 0024 0322     		mov	r2, #3
 187 0026 0492     		str	r2, [sp, #16]
 115:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF0_USART1;
 188              		.loc 1 115 0
 189 0028 0593     		str	r3, [sp, #20]
 116:Src/usart.c   ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 190              		.loc 1 116 0
 191 002a 1148     		ldr	r0, .L12+8
 192              	.LVL5:
 193 002c 01A9     		add	r1, sp, #4
 194 002e FFF7FEFF 		bl	HAL_GPIO_Init
 195              	.LVL6:
 196 0032 17E0     		b	.L9
 197              	.LVL7:
 198              	.L10:
 117:Src/usart.c   **** 
 118:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 1 */
 119:Src/usart.c   **** 
 120:Src/usart.c   ****   /* USER CODE END USART1_MspInit 1 */
 121:Src/usart.c   ****   }
 122:Src/usart.c   ****   else if(uartHandle->Instance==USART2)
 199              		.loc 1 122 0
 200 0034 0F4A     		ldr	r2, .L12+12
 201 0036 9342     		cmp	r3, r2
 202 0038 14D1     		bne	.L9
 123:Src/usart.c   ****   {
 124:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 0 */
 125:Src/usart.c   **** 
 126:Src/usart.c   ****   /* USER CODE END USART2_MspInit 0 */
 127:Src/usart.c   ****     /* USART2 clock enable */
 128:Src/usart.c   ****     __HAL_RCC_USART2_CLK_ENABLE();
 203              		.loc 1 128 0
 204 003a 0C4A     		ldr	r2, .L12+4
 205 003c 936B     		ldr	r3, [r2, #56]
 206 003e 8021     		mov	r1, #128
 207 0040 8902     		lsl	r1, r1, #10
 208 0042 0B43     		orr	r3, r1
 209 0044 9363     		str	r3, [r2, #56]
 129:Src/usart.c   ****   
 130:Src/usart.c   ****     /**USART2 GPIO Configuration    
 131:Src/usart.c   ****     PA2     ------> USART2_TX
 132:Src/usart.c   ****     PA15     ------> USART2_RX 
 133:Src/usart.c   ****     */
 134:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_15;
 210              		.loc 1 134 0
 211 0046 0C4B     		ldr	r3, .L12+16
 212 0048 0193     		str	r3, [sp, #4]
 135:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/ccyMK6VP.s 			page 7


 213              		.loc 1 135 0
 214 004a 0223     		mov	r3, #2
 215 004c 0293     		str	r3, [sp, #8]
 136:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 216              		.loc 1 136 0
 217 004e 0023     		mov	r3, #0
 218 0050 0393     		str	r3, [sp, #12]
 137:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 219              		.loc 1 137 0
 220 0052 0333     		add	r3, r3, #3
 221 0054 0493     		str	r3, [sp, #16]
 138:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF4_USART2;
 222              		.loc 1 138 0
 223 0056 0133     		add	r3, r3, #1
 224 0058 0593     		str	r3, [sp, #20]
 139:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 225              		.loc 1 139 0
 226 005a A020     		mov	r0, #160
 227              	.LVL8:
 228 005c C005     		lsl	r0, r0, #23
 229 005e 01A9     		add	r1, sp, #4
 230 0060 FFF7FEFF 		bl	HAL_GPIO_Init
 231              	.LVL9:
 232              	.L9:
 140:Src/usart.c   **** 
 141:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 1 */
 142:Src/usart.c   **** 
 143:Src/usart.c   ****   /* USER CODE END USART2_MspInit 1 */
 144:Src/usart.c   ****   }
 145:Src/usart.c   **** }
 233              		.loc 1 145 0
 234 0064 07B0     		add	sp, sp, #28
 235              		@ sp needed
 236 0066 00BD     		pop	{pc}
 237              	.L13:
 238              		.align	2
 239              	.L12:
 240 0068 00380140 		.word	1073821696
 241 006c 00100240 		.word	1073876992
 242 0070 00040050 		.word	1342178304
 243 0074 00440040 		.word	1073759232
 244 0078 04800000 		.word	32772
 245              		.cfi_endproc
 246              	.LFE38:
 248              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 249              		.align	2
 250              		.global	HAL_UART_MspDeInit
 251              		.code	16
 252              		.thumb_func
 254              	HAL_UART_MspDeInit:
 255              	.LFB39:
 146:Src/usart.c   **** 
 147:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 148:Src/usart.c   **** {
 256              		.loc 1 148 0
 257              		.cfi_startproc
 258              	.LVL10:
ARM GAS  /tmp/ccyMK6VP.s 			page 8


 259 0000 08B5     		push	{r3, lr}
 260              	.LCFI4:
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 3, -8
 263              		.cfi_offset 14, -4
 149:Src/usart.c   **** 
 150:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 264              		.loc 1 150 0
 265 0002 0368     		ldr	r3, [r0]
 266 0004 0D4A     		ldr	r2, .L17
 267 0006 9342     		cmp	r3, r2
 268 0008 09D1     		bne	.L15
 151:Src/usart.c   ****   {
 152:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 153:Src/usart.c   **** 
 154:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 0 */
 155:Src/usart.c   ****     /* Peripheral clock disable */
 156:Src/usart.c   ****     __HAL_RCC_USART1_CLK_DISABLE();
 269              		.loc 1 156 0
 270 000a 0D4A     		ldr	r2, .L17+4
 271 000c 516B     		ldr	r1, [r2, #52]
 272 000e 0D4B     		ldr	r3, .L17+8
 273 0010 0B40     		and	r3, r1
 274 0012 5363     		str	r3, [r2, #52]
 157:Src/usart.c   ****   
 158:Src/usart.c   ****     /**USART1 GPIO Configuration    
 159:Src/usart.c   ****     PB6     ------> USART1_TX
 160:Src/usart.c   ****     PB7     ------> USART1_RX 
 161:Src/usart.c   ****     */
 162:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6|GPIO_PIN_7);
 275              		.loc 1 162 0
 276 0014 0C48     		ldr	r0, .L17+12
 277              	.LVL11:
 278 0016 C021     		mov	r1, #192
 279 0018 FFF7FEFF 		bl	HAL_GPIO_DeInit
 280              	.LVL12:
 281 001c 0CE0     		b	.L14
 282              	.LVL13:
 283              	.L15:
 163:Src/usart.c   **** 
 164:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 165:Src/usart.c   **** 
 166:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 1 */
 167:Src/usart.c   ****   }
 168:Src/usart.c   ****   else if(uartHandle->Instance==USART2)
 284              		.loc 1 168 0
 285 001e 0B4A     		ldr	r2, .L17+16
 286 0020 9342     		cmp	r3, r2
 287 0022 09D1     		bne	.L14
 169:Src/usart.c   ****   {
 170:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
 171:Src/usart.c   **** 
 172:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 0 */
 173:Src/usart.c   ****     /* Peripheral clock disable */
 174:Src/usart.c   ****     __HAL_RCC_USART2_CLK_DISABLE();
 288              		.loc 1 174 0
 289 0024 064A     		ldr	r2, .L17+4
ARM GAS  /tmp/ccyMK6VP.s 			page 9


 290 0026 916B     		ldr	r1, [r2, #56]
 291 0028 094B     		ldr	r3, .L17+20
 292 002a 0B40     		and	r3, r1
 293 002c 9363     		str	r3, [r2, #56]
 175:Src/usart.c   ****   
 176:Src/usart.c   ****     /**USART2 GPIO Configuration    
 177:Src/usart.c   ****     PA2     ------> USART2_TX
 178:Src/usart.c   ****     PA15     ------> USART2_RX 
 179:Src/usart.c   ****     */
 180:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2|GPIO_PIN_15);
 294              		.loc 1 180 0
 295 002e A020     		mov	r0, #160
 296              	.LVL14:
 297 0030 C005     		lsl	r0, r0, #23
 298 0032 0849     		ldr	r1, .L17+24
 299 0034 FFF7FEFF 		bl	HAL_GPIO_DeInit
 300              	.LVL15:
 301              	.L14:
 181:Src/usart.c   **** 
 182:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 183:Src/usart.c   **** 
 184:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 1 */
 185:Src/usart.c   ****   }
 186:Src/usart.c   **** } 
 302              		.loc 1 186 0
 303              		@ sp needed
 304 0038 08BD     		pop	{r3, pc}
 305              	.L18:
 306 003a C046     		.align	2
 307              	.L17:
 308 003c 00380140 		.word	1073821696
 309 0040 00100240 		.word	1073876992
 310 0044 FFBFFFFF 		.word	-16385
 311 0048 00040050 		.word	1342178304
 312 004c 00440040 		.word	1073759232
 313 0050 FFFFFDFF 		.word	-131073
 314 0054 04800000 		.word	32772
 315              		.cfi_endproc
 316              	.LFE39:
 318              		.comm	huart2,112,4
 319              		.comm	huart1,112,4
 320              		.section	.rodata.str1.4,"aMS",%progbits,1
 321              		.align	2
 322              	.LC1:
 323 0000 5372632F 		.ascii	"Src/usart.c\000"
 323      75736172 
 323      742E6300 
 324              		.text
 325              	.Letext0:
 326              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 327              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 328              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l051xx.h"
 329              		.file 5 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 330              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 331              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 332              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart.h"
 333              		.file 9 "Inc/usart.h"
ARM GAS  /tmp/ccyMK6VP.s 			page 10


ARM GAS  /tmp/ccyMK6VP.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccyMK6VP.s:18     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccyMK6VP.s:23     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccyMK6VP.s:76     .text.MX_USART1_UART_Init:0000000000000034 $d
                            *COM*:0000000000000070 huart1
     /tmp/ccyMK6VP.s:83     .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccyMK6VP.s:88     .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccyMK6VP.s:140    .text.MX_USART2_UART_Init:0000000000000034 $d
                            *COM*:0000000000000070 huart2
     /tmp/ccyMK6VP.s:147    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccyMK6VP.s:152    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccyMK6VP.s:240    .text.HAL_UART_MspInit:0000000000000068 $d
     /tmp/ccyMK6VP.s:249    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccyMK6VP.s:254    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccyMK6VP.s:308    .text.HAL_UART_MspDeInit:000000000000003c $d
     /tmp/ccyMK6VP.s:321    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_UART_Init
_Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
