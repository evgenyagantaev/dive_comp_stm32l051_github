ARM GAS  /tmp/ccQrJqtb.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Error_Handler,"ax",%progbits
  18              		.align	2
  19              		.global	_Error_Handler
  20              		.code	16
  21              		.thumb_func
  23              	_Error_Handler:
  24              	.LFB38:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccQrJqtb.s 			page 2


  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32l0xx_hal.h"
  42:Src/main.c    **** #include "i2c.h"
  43:Src/main.c    **** #include "rtc.h"
  44:Src/main.c    **** #include "spi.h"
  45:Src/main.c    **** #include "tim.h"
  46:Src/main.c    **** #include "usart.h"
  47:Src/main.c    **** #include "gpio.h"
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE BEGIN Includes */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE END Includes */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE BEGIN PV */
  56:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PV */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  61:Src/main.c    **** void SystemClock_Config(void);
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE BEGIN PFP */
  64:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END PFP */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE BEGIN 0 */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE END 0 */
  71:Src/main.c    **** 
  72:Src/main.c    **** /**
  73:Src/main.c    ****   * @brief  The application entry point.
  74:Src/main.c    ****   *
  75:Src/main.c    ****   * @retval None
  76:Src/main.c    ****   */
  77:Src/main.c    **** int main(void)
  78:Src/main.c    **** {
  79:Src/main.c    ****   /* USER CODE BEGIN 1 */
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE END 1 */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  86:Src/main.c    ****   HAL_Init();
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE BEGIN Init */
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* USER CODE END Init */
ARM GAS  /tmp/ccQrJqtb.s 			page 3


  91:Src/main.c    **** 
  92:Src/main.c    ****   /* Configure the system clock */
  93:Src/main.c    ****   SystemClock_Config();
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* USER CODE END SysInit */
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* Initialize all configured peripherals */
 100:Src/main.c    ****   MX_GPIO_Init();
 101:Src/main.c    ****   MX_I2C2_Init();
 102:Src/main.c    ****   MX_RTC_Init();
 103:Src/main.c    ****   MX_SPI1_Init();
 104:Src/main.c    ****   MX_SPI2_Init();
 105:Src/main.c    ****   MX_TIM2_Init();
 106:Src/main.c    ****   MX_TIM6_Init();
 107:Src/main.c    ****   MX_TIM21_Init();
 108:Src/main.c    ****   MX_TIM22_Init();
 109:Src/main.c    ****   MX_USART1_UART_Init();
 110:Src/main.c    ****   MX_USART2_UART_Init();
 111:Src/main.c    ****   /* USER CODE BEGIN 2 */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE END 2 */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* Infinite loop */
 116:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 117:Src/main.c    ****   while (1)
 118:Src/main.c    ****   {
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE END WHILE */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* USER CODE BEGIN 3 */
 123:Src/main.c    **** 
 124:Src/main.c    ****   }
 125:Src/main.c    ****   /* USER CODE END 3 */
 126:Src/main.c    **** 
 127:Src/main.c    **** }
 128:Src/main.c    **** 
 129:Src/main.c    **** /**
 130:Src/main.c    ****   * @brief System Clock Configuration
 131:Src/main.c    ****   * @retval None
 132:Src/main.c    ****   */
 133:Src/main.c    **** void SystemClock_Config(void)
 134:Src/main.c    **** {
 135:Src/main.c    **** 
 136:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 137:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 138:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 139:Src/main.c    **** 
 140:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 141:Src/main.c    ****     */
 142:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 143:Src/main.c    **** 
 144:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 145:Src/main.c    ****     */
 146:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSI;
 147:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  /tmp/ccQrJqtb.s 			page 4


 148:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 149:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 153:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 154:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 155:Src/main.c    ****   {
 156:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 157:Src/main.c    ****   }
 158:Src/main.c    **** 
 159:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 160:Src/main.c    ****     */
 161:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 162:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 163:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 164:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 165:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 166:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 167:Src/main.c    **** 
 168:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 169:Src/main.c    ****   {
 170:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 171:Src/main.c    ****   }
 172:Src/main.c    **** 
 173:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_USART2
 174:Src/main.c    ****                               |RCC_PERIPHCLK_RTC;
 175:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 176:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 177:Src/main.c    ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 178:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 179:Src/main.c    ****   {
 180:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 181:Src/main.c    ****   }
 182:Src/main.c    **** 
 183:Src/main.c    ****     /**Configure the Systick interrupt time 
 184:Src/main.c    ****     */
 185:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 186:Src/main.c    **** 
 187:Src/main.c    ****     /**Configure the Systick 
 188:Src/main.c    ****     */
 189:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 190:Src/main.c    **** 
 191:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 192:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 193:Src/main.c    **** }
 194:Src/main.c    **** 
 195:Src/main.c    **** /* USER CODE BEGIN 4 */
 196:Src/main.c    **** 
 197:Src/main.c    **** /* USER CODE END 4 */
 198:Src/main.c    **** 
 199:Src/main.c    **** /**
 200:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 201:Src/main.c    ****   * @param  file: The file name as string.
 202:Src/main.c    ****   * @param  line: The line in file as a number.
 203:Src/main.c    ****   * @retval None
 204:Src/main.c    ****   */
ARM GAS  /tmp/ccQrJqtb.s 			page 5


 205:Src/main.c    **** void _Error_Handler(char *file, int line)
 206:Src/main.c    **** {
  26              		.loc 1 206 0
  27              		.cfi_startproc
  28              	.LVL0:
  29              	.L2:
 207:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 208:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 209:Src/main.c    ****   while(1)
 210:Src/main.c    ****   {
 211:Src/main.c    ****   }
  30              		.loc 1 211 0 discriminator 1
  31 0000 FEE7     		b	.L2
  32              		.cfi_endproc
  33              	.LFE38:
  35              		.global	__aeabi_uidiv
  36 0002 C046     		.section	.text.SystemClock_Config,"ax",%progbits
  37              		.align	2
  38              		.global	SystemClock_Config
  39              		.code	16
  40              		.thumb_func
  42              	SystemClock_Config:
  43              	.LFB37:
 134:Src/main.c    **** 
  44              		.loc 1 134 0
  45              		.cfi_startproc
  46 0000 00B5     		push	{lr}
  47              	.LCFI0:
  48              		.cfi_def_cfa_offset 4
  49              		.cfi_offset 14, -4
  50 0002 9BB0     		sub	sp, sp, #108
  51              	.LCFI1:
  52              		.cfi_def_cfa_offset 112
 142:Src/main.c    **** 
  53              		.loc 1 142 0
  54 0004 2B4A     		ldr	r2, .L7
  55 0006 1168     		ldr	r1, [r2]
  56 0008 2B4B     		ldr	r3, .L7+4
  57 000a 0B40     		and	r3, r1
  58 000c 8021     		mov	r1, #128
  59 000e 0901     		lsl	r1, r1, #4
  60 0010 0B43     		orr	r3, r1
  61 0012 1360     		str	r3, [r2]
 146:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  62              		.loc 1 146 0
  63 0014 0A23     		mov	r3, #10
  64 0016 0D93     		str	r3, [sp, #52]
 147:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  65              		.loc 1 147 0
  66 0018 093B     		sub	r3, r3, #9
  67 001a 1093     		str	r3, [sp, #64]
 148:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
  68              		.loc 1 148 0
  69 001c 1022     		mov	r2, #16
  70 001e 1192     		str	r2, [sp, #68]
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  71              		.loc 1 149 0
ARM GAS  /tmp/ccQrJqtb.s 			page 6


  72 0020 1293     		str	r3, [sp, #72]
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  73              		.loc 1 150 0
  74 0022 0133     		add	r3, r3, #1
  75 0024 1693     		str	r3, [sp, #88]
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
  76              		.loc 1 151 0
  77 0026 0023     		mov	r3, #0
  78 0028 1793     		str	r3, [sp, #92]
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
  79              		.loc 1 152 0
  80 002a 8023     		mov	r3, #128
  81 002c DB02     		lsl	r3, r3, #11
  82 002e 1893     		str	r3, [sp, #96]
 153:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  83              		.loc 1 153 0
  84 0030 8023     		mov	r3, #128
  85 0032 DB03     		lsl	r3, r3, #15
  86 0034 1993     		str	r3, [sp, #100]
 154:Src/main.c    ****   {
  87              		.loc 1 154 0
  88 0036 0DA8     		add	r0, sp, #52
  89 0038 FFF7FEFF 		bl	HAL_RCC_OscConfig
  90              	.LVL1:
  91 003c 0028     		cmp	r0, #0
  92 003e 03D0     		beq	.L4
 156:Src/main.c    ****   }
  93              		.loc 1 156 0
  94 0040 1E48     		ldr	r0, .L7+8
  95 0042 9C21     		mov	r1, #156
  96 0044 FFF7FEFF 		bl	_Error_Handler
  97              	.LVL2:
  98              	.L4:
 161:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  99              		.loc 1 161 0
 100 0048 0F23     		mov	r3, #15
 101 004a 0893     		str	r3, [sp, #32]
 163:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 102              		.loc 1 163 0
 103 004c 0C3B     		sub	r3, r3, #12
 104 004e 0993     		str	r3, [sp, #36]
 164:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 105              		.loc 1 164 0
 106 0050 0023     		mov	r3, #0
 107 0052 0A93     		str	r3, [sp, #40]
 165:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 108              		.loc 1 165 0
 109 0054 0B93     		str	r3, [sp, #44]
 166:Src/main.c    **** 
 110              		.loc 1 166 0
 111 0056 0C93     		str	r3, [sp, #48]
 168:Src/main.c    ****   {
 112              		.loc 1 168 0
 113 0058 08A8     		add	r0, sp, #32
 114 005a 0121     		mov	r1, #1
 115 005c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 116              	.LVL3:
ARM GAS  /tmp/ccQrJqtb.s 			page 7


 117 0060 0028     		cmp	r0, #0
 118 0062 03D0     		beq	.L5
 170:Src/main.c    ****   }
 119              		.loc 1 170 0
 120 0064 1548     		ldr	r0, .L7+8
 121 0066 AA21     		mov	r1, #170
 122 0068 FFF7FEFF 		bl	_Error_Handler
 123              	.LVL4:
 124              	.L5:
 173:Src/main.c    ****                               |RCC_PERIPHCLK_RTC;
 125              		.loc 1 173 0
 126 006c 2323     		mov	r3, #35
 127 006e 0193     		str	r3, [sp, #4]
 175:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 128              		.loc 1 175 0
 129 0070 0023     		mov	r3, #0
 130 0072 0393     		str	r3, [sp, #12]
 176:Src/main.c    ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 131              		.loc 1 176 0
 132 0074 0493     		str	r3, [sp, #16]
 177:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 133              		.loc 1 177 0
 134 0076 8023     		mov	r3, #128
 135 0078 9B02     		lsl	r3, r3, #10
 136 007a 0293     		str	r3, [sp, #8]
 178:Src/main.c    ****   {
 137              		.loc 1 178 0
 138 007c 01A8     		add	r0, sp, #4
 139 007e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 140              	.LVL5:
 141 0082 0028     		cmp	r0, #0
 142 0084 03D0     		beq	.L6
 180:Src/main.c    ****   }
 143              		.loc 1 180 0
 144 0086 0D48     		ldr	r0, .L7+8
 145 0088 B421     		mov	r1, #180
 146 008a FFF7FEFF 		bl	_Error_Handler
 147              	.LVL6:
 148              	.L6:
 185:Src/main.c    **** 
 149              		.loc 1 185 0
 150 008e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 151              	.LVL7:
 152 0092 FA21     		mov	r1, #250
 153 0094 8900     		lsl	r1, r1, #2
 154 0096 FFF7FEFF 		bl	__aeabi_uidiv
 155              	.LVL8:
 156 009a FFF7FEFF 		bl	HAL_SYSTICK_Config
 157              	.LVL9:
 189:Src/main.c    **** 
 158              		.loc 1 189 0
 159 009e 0420     		mov	r0, #4
 160 00a0 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 161              	.LVL10:
 192:Src/main.c    **** }
 162              		.loc 1 192 0
 163 00a4 0120     		mov	r0, #1
ARM GAS  /tmp/ccQrJqtb.s 			page 8


 164 00a6 4042     		neg	r0, r0
 165 00a8 0021     		mov	r1, #0
 166 00aa 0022     		mov	r2, #0
 167 00ac FFF7FEFF 		bl	HAL_NVIC_SetPriority
 168              	.LVL11:
 193:Src/main.c    **** 
 169              		.loc 1 193 0
 170 00b0 1BB0     		add	sp, sp, #108
 171              		@ sp needed
 172 00b2 00BD     		pop	{pc}
 173              	.L8:
 174              		.align	2
 175              	.L7:
 176 00b4 00700040 		.word	1073770496
 177 00b8 FFE7FFFF 		.word	-6145
 178 00bc 00000000 		.word	.LC0
 179              		.cfi_endproc
 180              	.LFE37:
 182              		.section	.text.main,"ax",%progbits
 183              		.align	2
 184              		.global	main
 185              		.code	16
 186              		.thumb_func
 188              	main:
 189              	.LFB36:
  78:Src/main.c    ****   /* USER CODE BEGIN 1 */
 190              		.loc 1 78 0
 191              		.cfi_startproc
 192 0000 08B5     		push	{r3, lr}
 193              	.LCFI2:
 194              		.cfi_def_cfa_offset 8
 195              		.cfi_offset 3, -8
 196              		.cfi_offset 14, -4
  86:Src/main.c    **** 
 197              		.loc 1 86 0
 198 0002 FFF7FEFF 		bl	HAL_Init
 199              	.LVL12:
  93:Src/main.c    **** 
 200              		.loc 1 93 0
 201 0006 FFF7FEFF 		bl	SystemClock_Config
 202              	.LVL13:
 100:Src/main.c    ****   MX_I2C2_Init();
 203              		.loc 1 100 0
 204 000a FFF7FEFF 		bl	MX_GPIO_Init
 205              	.LVL14:
 101:Src/main.c    ****   MX_RTC_Init();
 206              		.loc 1 101 0
 207 000e FFF7FEFF 		bl	MX_I2C2_Init
 208              	.LVL15:
 102:Src/main.c    ****   MX_SPI1_Init();
 209              		.loc 1 102 0
 210 0012 FFF7FEFF 		bl	MX_RTC_Init
 211              	.LVL16:
 103:Src/main.c    ****   MX_SPI2_Init();
 212              		.loc 1 103 0
 213 0016 FFF7FEFF 		bl	MX_SPI1_Init
 214              	.LVL17:
ARM GAS  /tmp/ccQrJqtb.s 			page 9


 104:Src/main.c    ****   MX_TIM2_Init();
 215              		.loc 1 104 0
 216 001a FFF7FEFF 		bl	MX_SPI2_Init
 217              	.LVL18:
 105:Src/main.c    ****   MX_TIM6_Init();
 218              		.loc 1 105 0
 219 001e FFF7FEFF 		bl	MX_TIM2_Init
 220              	.LVL19:
 106:Src/main.c    ****   MX_TIM21_Init();
 221              		.loc 1 106 0
 222 0022 FFF7FEFF 		bl	MX_TIM6_Init
 223              	.LVL20:
 107:Src/main.c    ****   MX_TIM22_Init();
 224              		.loc 1 107 0
 225 0026 FFF7FEFF 		bl	MX_TIM21_Init
 226              	.LVL21:
 108:Src/main.c    ****   MX_USART1_UART_Init();
 227              		.loc 1 108 0
 228 002a FFF7FEFF 		bl	MX_TIM22_Init
 229              	.LVL22:
 109:Src/main.c    ****   MX_USART2_UART_Init();
 230              		.loc 1 109 0
 231 002e FFF7FEFF 		bl	MX_USART1_UART_Init
 232              	.LVL23:
 110:Src/main.c    ****   /* USER CODE BEGIN 2 */
 233              		.loc 1 110 0
 234 0032 FFF7FEFF 		bl	MX_USART2_UART_Init
 235              	.LVL24:
 236              	.L10:
 124:Src/main.c    ****   /* USER CODE END 3 */
 237              		.loc 1 124 0 discriminator 1
 238 0036 FEE7     		b	.L10
 239              		.cfi_endproc
 240              	.LFE36:
 242              		.section	.rodata.str1.4,"aMS",%progbits,1
 243              		.align	2
 244              	.LC0:
 245 0000 5372632F 		.ascii	"Src/main.c\000"
 245      6D61696E 
 245      2E6300
 246              		.text
 247              	.Letext0:
 248              		.file 2 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l051xx.h"
 249              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 250              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 251              		.file 5 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 252              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 253              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc_ex.h"
 254              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_cortex.h"
 255              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 256              		.file 10 "Inc/gpio.h"
 257              		.file 11 "Inc/i2c.h"
 258              		.file 12 "Inc/rtc.h"
 259              		.file 13 "Inc/spi.h"
 260              		.file 14 "Inc/tim.h"
 261              		.file 15 "Inc/usart.h"
ARM GAS  /tmp/ccQrJqtb.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccQrJqtb.s:18     .text._Error_Handler:0000000000000000 $t
     /tmp/ccQrJqtb.s:23     .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccQrJqtb.s:37     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccQrJqtb.s:42     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccQrJqtb.s:176    .text.SystemClock_Config:00000000000000b4 $d
     /tmp/ccQrJqtb.s:183    .text.main:0000000000000000 $t
     /tmp/ccQrJqtb.s:188    .text.main:0000000000000000 main
     /tmp/ccQrJqtb.s:243    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
MX_I2C2_Init
MX_RTC_Init
MX_SPI1_Init
MX_SPI2_Init
MX_TIM2_Init
MX_TIM6_Init
MX_TIM21_Init
MX_TIM22_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
