ARM GAS  /tmp/cccYrOyB.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"spi.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_SPI1_Init,"ax",%progbits
  18              		.align	2
  19              		.global	MX_SPI1_Init
  20              		.code	16
  21              		.thumb_func
  23              	MX_SPI1_Init:
  24              	.LFB36:
  25              		.file 1 "Src/spi.c"
   1:Src/spi.c     **** /**
   2:Src/spi.c     ****   ******************************************************************************
   3:Src/spi.c     ****   * File Name          : SPI.c
   4:Src/spi.c     ****   * Description        : This file provides code for the configuration
   5:Src/spi.c     ****   *                      of the SPI instances.
   6:Src/spi.c     ****   ******************************************************************************
   7:Src/spi.c     ****   ** This notice applies to any and all portions of this file
   8:Src/spi.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/spi.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/spi.c     ****   * inserted by the user or by software development tools
  11:Src/spi.c     ****   * are owned by their respective copyright owners.
  12:Src/spi.c     ****   *
  13:Src/spi.c     ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/spi.c     ****   *
  15:Src/spi.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/spi.c     ****   * are permitted provided that the following conditions are met:
  17:Src/spi.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/spi.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/spi.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/spi.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/spi.c     ****   *      and/or other materials provided with the distribution.
  22:Src/spi.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/spi.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/spi.c     ****   *      without specific prior written permission.
  25:Src/spi.c     ****   *
  26:Src/spi.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/spi.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/spi.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/spi.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/spi.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/spi.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/spi.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/spi.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/cccYrOyB.s 			page 2


  34:Src/spi.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/spi.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/spi.c     ****   *
  37:Src/spi.c     ****   ******************************************************************************
  38:Src/spi.c     ****   */
  39:Src/spi.c     **** 
  40:Src/spi.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/spi.c     **** #include "spi.h"
  42:Src/spi.c     **** 
  43:Src/spi.c     **** #include "gpio.h"
  44:Src/spi.c     **** 
  45:Src/spi.c     **** /* USER CODE BEGIN 0 */
  46:Src/spi.c     **** 
  47:Src/spi.c     **** /* USER CODE END 0 */
  48:Src/spi.c     **** 
  49:Src/spi.c     **** SPI_HandleTypeDef hspi1;
  50:Src/spi.c     **** SPI_HandleTypeDef hspi2;
  51:Src/spi.c     **** 
  52:Src/spi.c     **** /* SPI1 init function */
  53:Src/spi.c     **** void MX_SPI1_Init(void)
  54:Src/spi.c     **** {
  26              		.loc 1 54 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 3, -8
  32              		.cfi_offset 14, -4
  55:Src/spi.c     **** 
  56:Src/spi.c     ****   hspi1.Instance = SPI1;
  33              		.loc 1 56 0
  34 0002 0E48     		ldr	r0, .L3
  35 0004 0E4B     		ldr	r3, .L3+4
  36 0006 0360     		str	r3, [r0]
  57:Src/spi.c     ****   hspi1.Init.Mode = SPI_MODE_MASTER;
  37              		.loc 1 57 0
  38 0008 8223     		mov	r3, #130
  39 000a 5B00     		lsl	r3, r3, #1
  40 000c 4360     		str	r3, [r0, #4]
  58:Src/spi.c     ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
  41              		.loc 1 58 0
  42 000e 0023     		mov	r3, #0
  43 0010 8360     		str	r3, [r0, #8]
  59:Src/spi.c     ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
  44              		.loc 1 59 0
  45 0012 C360     		str	r3, [r0, #12]
  60:Src/spi.c     ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
  46              		.loc 1 60 0
  47 0014 0361     		str	r3, [r0, #16]
  61:Src/spi.c     ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
  48              		.loc 1 61 0
  49 0016 4361     		str	r3, [r0, #20]
  62:Src/spi.c     ****   hspi1.Init.NSS = SPI_NSS_SOFT;
  50              		.loc 1 62 0
  51 0018 8022     		mov	r2, #128
  52 001a 9200     		lsl	r2, r2, #2
  53 001c 8261     		str	r2, [r0, #24]
ARM GAS  /tmp/cccYrOyB.s 			page 3


  63:Src/spi.c     ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
  54              		.loc 1 63 0
  55 001e C361     		str	r3, [r0, #28]
  64:Src/spi.c     ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
  56              		.loc 1 64 0
  57 0020 0362     		str	r3, [r0, #32]
  65:Src/spi.c     ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
  58              		.loc 1 65 0
  59 0022 4362     		str	r3, [r0, #36]
  66:Src/spi.c     ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  60              		.loc 1 66 0
  61 0024 8362     		str	r3, [r0, #40]
  67:Src/spi.c     ****   hspi1.Init.CRCPolynomial = 7;
  62              		.loc 1 67 0
  63 0026 0733     		add	r3, r3, #7
  64 0028 C362     		str	r3, [r0, #44]
  68:Src/spi.c     ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
  65              		.loc 1 68 0
  66 002a FFF7FEFF 		bl	HAL_SPI_Init
  67              	.LVL0:
  68 002e 0028     		cmp	r0, #0
  69 0030 03D0     		beq	.L1
  69:Src/spi.c     ****   {
  70:Src/spi.c     ****     _Error_Handler(__FILE__, __LINE__);
  70              		.loc 1 70 0
  71 0032 0448     		ldr	r0, .L3+8
  72 0034 4621     		mov	r1, #70
  73 0036 FFF7FEFF 		bl	_Error_Handler
  74              	.LVL1:
  75              	.L1:
  71:Src/spi.c     ****   }
  72:Src/spi.c     **** 
  73:Src/spi.c     **** }
  76              		.loc 1 73 0
  77              		@ sp needed
  78 003a 08BD     		pop	{r3, pc}
  79              	.L4:
  80              		.align	2
  81              	.L3:
  82 003c 00000000 		.word	hspi1
  83 0040 00300140 		.word	1073819648
  84 0044 00000000 		.word	.LC1
  85              		.cfi_endproc
  86              	.LFE36:
  88              		.section	.text.MX_SPI2_Init,"ax",%progbits
  89              		.align	2
  90              		.global	MX_SPI2_Init
  91              		.code	16
  92              		.thumb_func
  94              	MX_SPI2_Init:
  95              	.LFB37:
  74:Src/spi.c     **** /* SPI2 init function */
  75:Src/spi.c     **** void MX_SPI2_Init(void)
  76:Src/spi.c     **** {
  96              		.loc 1 76 0
  97              		.cfi_startproc
  98 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/cccYrOyB.s 			page 4


  99              	.LCFI1:
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 3, -8
 102              		.cfi_offset 14, -4
  77:Src/spi.c     **** 
  78:Src/spi.c     ****   hspi2.Instance = SPI2;
 103              		.loc 1 78 0
 104 0002 0E48     		ldr	r0, .L7
 105 0004 0E4B     		ldr	r3, .L7+4
 106 0006 0360     		str	r3, [r0]
  79:Src/spi.c     ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 107              		.loc 1 79 0
 108 0008 8223     		mov	r3, #130
 109 000a 5B00     		lsl	r3, r3, #1
 110 000c 4360     		str	r3, [r0, #4]
  80:Src/spi.c     ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 111              		.loc 1 80 0
 112 000e 0023     		mov	r3, #0
 113 0010 8360     		str	r3, [r0, #8]
  81:Src/spi.c     ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 114              		.loc 1 81 0
 115 0012 C360     		str	r3, [r0, #12]
  82:Src/spi.c     ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 116              		.loc 1 82 0
 117 0014 0361     		str	r3, [r0, #16]
  83:Src/spi.c     ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 118              		.loc 1 83 0
 119 0016 4361     		str	r3, [r0, #20]
  84:Src/spi.c     ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 120              		.loc 1 84 0
 121 0018 8022     		mov	r2, #128
 122 001a 9200     		lsl	r2, r2, #2
 123 001c 8261     		str	r2, [r0, #24]
  85:Src/spi.c     ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 124              		.loc 1 85 0
 125 001e C361     		str	r3, [r0, #28]
  86:Src/spi.c     ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 126              		.loc 1 86 0
 127 0020 0362     		str	r3, [r0, #32]
  87:Src/spi.c     ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 128              		.loc 1 87 0
 129 0022 4362     		str	r3, [r0, #36]
  88:Src/spi.c     ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 130              		.loc 1 88 0
 131 0024 8362     		str	r3, [r0, #40]
  89:Src/spi.c     ****   hspi2.Init.CRCPolynomial = 7;
 132              		.loc 1 89 0
 133 0026 0733     		add	r3, r3, #7
 134 0028 C362     		str	r3, [r0, #44]
  90:Src/spi.c     ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 135              		.loc 1 90 0
 136 002a FFF7FEFF 		bl	HAL_SPI_Init
 137              	.LVL2:
 138 002e 0028     		cmp	r0, #0
 139 0030 03D0     		beq	.L5
  91:Src/spi.c     ****   {
  92:Src/spi.c     ****     _Error_Handler(__FILE__, __LINE__);
ARM GAS  /tmp/cccYrOyB.s 			page 5


 140              		.loc 1 92 0
 141 0032 0448     		ldr	r0, .L7+8
 142 0034 5C21     		mov	r1, #92
 143 0036 FFF7FEFF 		bl	_Error_Handler
 144              	.LVL3:
 145              	.L5:
  93:Src/spi.c     ****   }
  94:Src/spi.c     **** 
  95:Src/spi.c     **** }
 146              		.loc 1 95 0
 147              		@ sp needed
 148 003a 08BD     		pop	{r3, pc}
 149              	.L8:
 150              		.align	2
 151              	.L7:
 152 003c 00000000 		.word	hspi2
 153 0040 00380040 		.word	1073756160
 154 0044 00000000 		.word	.LC1
 155              		.cfi_endproc
 156              	.LFE37:
 158              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 159              		.align	2
 160              		.global	HAL_SPI_MspInit
 161              		.code	16
 162              		.thumb_func
 164              	HAL_SPI_MspInit:
 165              	.LFB38:
  96:Src/spi.c     **** 
  97:Src/spi.c     **** void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
  98:Src/spi.c     **** {
 166              		.loc 1 98 0
 167              		.cfi_startproc
 168              	.LVL4:
 169 0000 00B5     		push	{lr}
 170              	.LCFI2:
 171              		.cfi_def_cfa_offset 4
 172              		.cfi_offset 14, -4
 173 0002 87B0     		sub	sp, sp, #28
 174              	.LCFI3:
 175              		.cfi_def_cfa_offset 32
  99:Src/spi.c     **** 
 100:Src/spi.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 101:Src/spi.c     ****   if(spiHandle->Instance==SPI1)
 176              		.loc 1 101 0
 177 0004 0368     		ldr	r3, [r0]
 178 0006 184A     		ldr	r2, .L12
 179 0008 9342     		cmp	r3, r2
 180 000a 14D1     		bne	.L10
 102:Src/spi.c     ****   {
 103:Src/spi.c     ****   /* USER CODE BEGIN SPI1_MspInit 0 */
 104:Src/spi.c     **** 
 105:Src/spi.c     ****   /* USER CODE END SPI1_MspInit 0 */
 106:Src/spi.c     ****     /* SPI1 clock enable */
 107:Src/spi.c     ****     __HAL_RCC_SPI1_CLK_ENABLE();
 181              		.loc 1 107 0
 182 000c 174A     		ldr	r2, .L12+4
 183 000e 536B     		ldr	r3, [r2, #52]
ARM GAS  /tmp/cccYrOyB.s 			page 6


 184 0010 8021     		mov	r1, #128
 185 0012 4901     		lsl	r1, r1, #5
 186 0014 0B43     		orr	r3, r1
 187 0016 5363     		str	r3, [r2, #52]
 108:Src/spi.c     ****   
 109:Src/spi.c     ****     /**SPI1 GPIO Configuration    
 110:Src/spi.c     ****     PA5     ------> SPI1_SCK
 111:Src/spi.c     ****     PA6     ------> SPI1_MISO
 112:Src/spi.c     ****     PA7     ------> SPI1_MOSI 
 113:Src/spi.c     ****     */
 114:Src/spi.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 188              		.loc 1 114 0
 189 0018 E023     		mov	r3, #224
 190 001a 0193     		str	r3, [sp, #4]
 115:Src/spi.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 191              		.loc 1 115 0
 192 001c DE3B     		sub	r3, r3, #222
 193 001e 0293     		str	r3, [sp, #8]
 116:Src/spi.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 194              		.loc 1 116 0
 195 0020 0023     		mov	r3, #0
 196 0022 0393     		str	r3, [sp, #12]
 117:Src/spi.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 197              		.loc 1 117 0
 198 0024 0322     		mov	r2, #3
 199 0026 0492     		str	r2, [sp, #16]
 118:Src/spi.c     ****     GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
 200              		.loc 1 118 0
 201 0028 0593     		str	r3, [sp, #20]
 119:Src/spi.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 202              		.loc 1 119 0
 203 002a A020     		mov	r0, #160
 204              	.LVL5:
 205 002c C005     		lsl	r0, r0, #23
 206 002e 01A9     		add	r1, sp, #4
 207 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 208              	.LVL6:
 209 0034 16E0     		b	.L9
 210              	.LVL7:
 211              	.L10:
 120:Src/spi.c     **** 
 121:Src/spi.c     ****   /* USER CODE BEGIN SPI1_MspInit 1 */
 122:Src/spi.c     **** 
 123:Src/spi.c     ****   /* USER CODE END SPI1_MspInit 1 */
 124:Src/spi.c     ****   }
 125:Src/spi.c     ****   else if(spiHandle->Instance==SPI2)
 212              		.loc 1 125 0
 213 0036 0E4A     		ldr	r2, .L12+8
 214 0038 9342     		cmp	r3, r2
 215 003a 13D1     		bne	.L9
 126:Src/spi.c     ****   {
 127:Src/spi.c     ****   /* USER CODE BEGIN SPI2_MspInit 0 */
 128:Src/spi.c     **** 
 129:Src/spi.c     ****   /* USER CODE END SPI2_MspInit 0 */
 130:Src/spi.c     ****     /* SPI2 clock enable */
 131:Src/spi.c     ****     __HAL_RCC_SPI2_CLK_ENABLE();
 216              		.loc 1 131 0
ARM GAS  /tmp/cccYrOyB.s 			page 7


 217 003c 0B4A     		ldr	r2, .L12+4
 218 003e 936B     		ldr	r3, [r2, #56]
 219 0040 8021     		mov	r1, #128
 220 0042 C901     		lsl	r1, r1, #7
 221 0044 0B43     		orr	r3, r1
 222 0046 9363     		str	r3, [r2, #56]
 132:Src/spi.c     ****   
 133:Src/spi.c     ****     /**SPI2 GPIO Configuration    
 134:Src/spi.c     ****     PB13     ------> SPI2_SCK
 135:Src/spi.c     ****     PB14     ------> SPI2_MISO
 136:Src/spi.c     ****     PB15     ------> SPI2_MOSI 
 137:Src/spi.c     ****     */
 138:Src/spi.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 223              		.loc 1 138 0
 224 0048 E023     		mov	r3, #224
 225 004a 1B02     		lsl	r3, r3, #8
 226 004c 0193     		str	r3, [sp, #4]
 139:Src/spi.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 227              		.loc 1 139 0
 228 004e 0223     		mov	r3, #2
 229 0050 0293     		str	r3, [sp, #8]
 140:Src/spi.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 230              		.loc 1 140 0
 231 0052 0023     		mov	r3, #0
 232 0054 0393     		str	r3, [sp, #12]
 141:Src/spi.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 233              		.loc 1 141 0
 234 0056 0322     		mov	r2, #3
 235 0058 0492     		str	r2, [sp, #16]
 142:Src/spi.c     ****     GPIO_InitStruct.Alternate = GPIO_AF0_SPI2;
 236              		.loc 1 142 0
 237 005a 0593     		str	r3, [sp, #20]
 143:Src/spi.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 238              		.loc 1 143 0
 239 005c 0548     		ldr	r0, .L12+12
 240              	.LVL8:
 241 005e 01A9     		add	r1, sp, #4
 242 0060 FFF7FEFF 		bl	HAL_GPIO_Init
 243              	.LVL9:
 244              	.L9:
 144:Src/spi.c     **** 
 145:Src/spi.c     ****   /* USER CODE BEGIN SPI2_MspInit 1 */
 146:Src/spi.c     **** 
 147:Src/spi.c     ****   /* USER CODE END SPI2_MspInit 1 */
 148:Src/spi.c     ****   }
 149:Src/spi.c     **** }
 245              		.loc 1 149 0
 246 0064 07B0     		add	sp, sp, #28
 247              		@ sp needed
 248 0066 00BD     		pop	{pc}
 249              	.L13:
 250              		.align	2
 251              	.L12:
 252 0068 00300140 		.word	1073819648
 253 006c 00100240 		.word	1073876992
 254 0070 00380040 		.word	1073756160
 255 0074 00040050 		.word	1342178304
ARM GAS  /tmp/cccYrOyB.s 			page 8


 256              		.cfi_endproc
 257              	.LFE38:
 259              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 260              		.align	2
 261              		.global	HAL_SPI_MspDeInit
 262              		.code	16
 263              		.thumb_func
 265              	HAL_SPI_MspDeInit:
 266              	.LFB39:
 150:Src/spi.c     **** 
 151:Src/spi.c     **** void HAL_SPI_MspDeInit(SPI_HandleTypeDef* spiHandle)
 152:Src/spi.c     **** {
 267              		.loc 1 152 0
 268              		.cfi_startproc
 269              	.LVL10:
 270 0000 08B5     		push	{r3, lr}
 271              	.LCFI4:
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 3, -8
 274              		.cfi_offset 14, -4
 153:Src/spi.c     **** 
 154:Src/spi.c     ****   if(spiHandle->Instance==SPI1)
 275              		.loc 1 154 0
 276 0002 0368     		ldr	r3, [r0]
 277 0004 0D4A     		ldr	r2, .L17
 278 0006 9342     		cmp	r3, r2
 279 0008 0AD1     		bne	.L15
 155:Src/spi.c     ****   {
 156:Src/spi.c     ****   /* USER CODE BEGIN SPI1_MspDeInit 0 */
 157:Src/spi.c     **** 
 158:Src/spi.c     ****   /* USER CODE END SPI1_MspDeInit 0 */
 159:Src/spi.c     ****     /* Peripheral clock disable */
 160:Src/spi.c     ****     __HAL_RCC_SPI1_CLK_DISABLE();
 280              		.loc 1 160 0
 281 000a 0D4A     		ldr	r2, .L17+4
 282 000c 516B     		ldr	r1, [r2, #52]
 283 000e 0D4B     		ldr	r3, .L17+8
 284 0010 0B40     		and	r3, r1
 285 0012 5363     		str	r3, [r2, #52]
 161:Src/spi.c     ****   
 162:Src/spi.c     ****     /**SPI1 GPIO Configuration    
 163:Src/spi.c     ****     PA5     ------> SPI1_SCK
 164:Src/spi.c     ****     PA6     ------> SPI1_MISO
 165:Src/spi.c     ****     PA7     ------> SPI1_MOSI 
 166:Src/spi.c     ****     */
 167:Src/spi.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
 286              		.loc 1 167 0
 287 0014 A020     		mov	r0, #160
 288              	.LVL11:
 289 0016 C005     		lsl	r0, r0, #23
 290 0018 E021     		mov	r1, #224
 291 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 292              	.LVL12:
 293 001e 0CE0     		b	.L14
 294              	.LVL13:
 295              	.L15:
 168:Src/spi.c     **** 
ARM GAS  /tmp/cccYrOyB.s 			page 9


 169:Src/spi.c     ****   /* USER CODE BEGIN SPI1_MspDeInit 1 */
 170:Src/spi.c     **** 
 171:Src/spi.c     ****   /* USER CODE END SPI1_MspDeInit 1 */
 172:Src/spi.c     ****   }
 173:Src/spi.c     ****   else if(spiHandle->Instance==SPI2)
 296              		.loc 1 173 0
 297 0020 094A     		ldr	r2, .L17+12
 298 0022 9342     		cmp	r3, r2
 299 0024 09D1     		bne	.L14
 174:Src/spi.c     ****   {
 175:Src/spi.c     ****   /* USER CODE BEGIN SPI2_MspDeInit 0 */
 176:Src/spi.c     **** 
 177:Src/spi.c     ****   /* USER CODE END SPI2_MspDeInit 0 */
 178:Src/spi.c     ****     /* Peripheral clock disable */
 179:Src/spi.c     ****     __HAL_RCC_SPI2_CLK_DISABLE();
 300              		.loc 1 179 0
 301 0026 064A     		ldr	r2, .L17+4
 302 0028 916B     		ldr	r1, [r2, #56]
 303 002a 084B     		ldr	r3, .L17+16
 304 002c 0B40     		and	r3, r1
 305 002e 9363     		str	r3, [r2, #56]
 180:Src/spi.c     ****   
 181:Src/spi.c     ****     /**SPI2 GPIO Configuration    
 182:Src/spi.c     ****     PB13     ------> SPI2_SCK
 183:Src/spi.c     ****     PB14     ------> SPI2_MISO
 184:Src/spi.c     ****     PB15     ------> SPI2_MOSI 
 185:Src/spi.c     ****     */
 186:Src/spi.c     ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15);
 306              		.loc 1 186 0
 307 0030 0748     		ldr	r0, .L17+20
 308              	.LVL14:
 309 0032 E021     		mov	r1, #224
 310 0034 0902     		lsl	r1, r1, #8
 311 0036 FFF7FEFF 		bl	HAL_GPIO_DeInit
 312              	.LVL15:
 313              	.L14:
 187:Src/spi.c     **** 
 188:Src/spi.c     ****   /* USER CODE BEGIN SPI2_MspDeInit 1 */
 189:Src/spi.c     **** 
 190:Src/spi.c     ****   /* USER CODE END SPI2_MspDeInit 1 */
 191:Src/spi.c     ****   }
 192:Src/spi.c     **** } 
 314              		.loc 1 192 0
 315              		@ sp needed
 316 003a 08BD     		pop	{r3, pc}
 317              	.L18:
 318              		.align	2
 319              	.L17:
 320 003c 00300140 		.word	1073819648
 321 0040 00100240 		.word	1073876992
 322 0044 FFEFFFFF 		.word	-4097
 323 0048 00380040 		.word	1073756160
 324 004c FFBFFFFF 		.word	-16385
 325 0050 00040050 		.word	1342178304
 326              		.cfi_endproc
 327              	.LFE39:
 329              		.comm	hspi2,88,4
ARM GAS  /tmp/cccYrOyB.s 			page 10


 330              		.comm	hspi1,88,4
 331              		.section	.rodata.str1.4,"aMS",%progbits,1
 332              		.align	2
 333              	.LC1:
 334 0000 5372632F 		.ascii	"Src/spi.c\000"
 334      7370692E 
 334      6300
 335              		.text
 336              	.Letext0:
 337              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 338              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 339              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l051xx.h"
 340              		.file 5 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 341              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 342              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 343              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_spi.h"
 344              		.file 9 "Inc/spi.h"
ARM GAS  /tmp/cccYrOyB.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 spi.c
     /tmp/cccYrOyB.s:18     .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/cccYrOyB.s:23     .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/cccYrOyB.s:82     .text.MX_SPI1_Init:000000000000003c $d
                            *COM*:0000000000000058 hspi1
     /tmp/cccYrOyB.s:89     .text.MX_SPI2_Init:0000000000000000 $t
     /tmp/cccYrOyB.s:94     .text.MX_SPI2_Init:0000000000000000 MX_SPI2_Init
     /tmp/cccYrOyB.s:152    .text.MX_SPI2_Init:000000000000003c $d
                            *COM*:0000000000000058 hspi2
     /tmp/cccYrOyB.s:159    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/cccYrOyB.s:164    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/cccYrOyB.s:252    .text.HAL_SPI_MspInit:0000000000000068 $d
     /tmp/cccYrOyB.s:260    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/cccYrOyB.s:265    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/cccYrOyB.s:320    .text.HAL_SPI_MspDeInit:000000000000003c $d
     /tmp/cccYrOyB.s:332    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_SPI_Init
_Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
